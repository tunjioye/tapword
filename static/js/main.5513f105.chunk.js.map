{"version":3,"sources":["components/Topbar.js","components/Cell.js","components/Row.js","components/Score.js","components/Selection.js","components/Sidebar.js","config.js","spellcheck.js","components/Grid.js","components/Settings.js","components/Help.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuIconRef","React","createRef","menuRef","current","classList","toggle","react_default","a","createElement","className","onClick","toggleMenu","bind","ref","Component","Cell","cell","cellName","letter","charAt","defaultProps","Row","rowLetters","i","size","components_Cell","key","toString","rowNumber","letters","Score","output","score","length","id","Selection","word","Sidebar","window","location","hash","alert","timer","endless","minutes","data-tooltip","multiplier","handleUndoButtonClick","handleSubmitButtonClick","openSettingsModal","openHelpModal","handleQuit","config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Grid","state","rows","lastWordScore","cellToggle","shuffle","shuffleAll","randomLetters","assertThisInitialized","handleCellClick","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","resetSelectedCells","shuffleCells","chars","toConsumableArray","Array","parseInt","map","x","Math","floor","random","join","e","target","getAttribute","filter","setState","innerHTML","add","document","querySelectorAll","remove","newWordScore","multiplierEl","getElementsByClassName","wordScore","selectedCells","forEach","toLowerCase","get","then","response","_this2","undefined","data","corrections","getElementById","catch","console","log","finally","keyCode","preventDefault","addEventListener","generate","components_Row","components_Score","components_Selection","components_Sidebar","Settings","href","aria-label","style","spacedTypo","replace","objectSpread","textCenter","saveButton","saveSettings","letterSpacing","wordSpacing","textTransform","margin","fontWeight","textAlign","background","color","textDecoration","border","padding","cursor","kbd","customLink","Help","rel","App","display","components_Topbar","components_Grid","components_Settings","components_Help","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5513f105.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../topbar.scss';\r\n\r\nclass Topbar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.menuIconRef = React.createRef()\r\n    this.menuRef = React.createRef()\r\n  }\r\n  toggleMenu() {\r\n    this.menuIconRef.current.classList.toggle('active');\r\n    this.menuRef.current.classList.toggle('active');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"topbar\" onClick={this.toggleMenu.bind(this)}>\r\n        <div className=\"menu-icon\" ref={this.menuIconRef}>\r\n          <div className=\"line-top\"></div>\r\n          <div className=\"line-bottom\"></div>\r\n        </div>\r\n        <div className=\"menu\" ref={this.menuRef}>\r\n          <ul>\r\n            <li><span>PLAY</span></li>\r\n            <li><span>SETTINGS</span></li>\r\n            <li><span>PLAYER</span></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\n\r\nclass Cell extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={(this.props.className) ? \"cell \" + this.props.className : \"cell\"}\r\n        cell={this.props.cellName}\r\n        onClick={this.props.onClick}\r\n      >\r\n        {this.props.letter.charAt(0)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCell.defaultProps = {\r\n  letter: ''\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Row extends React.Component {\r\n  render() {\r\n    let rowLetters = [];\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rowLetters[i] = <Cell\r\n        key={i.toString()}\r\n        cellName={'c' + ((this.props.rowNumber * this.props.size) + i)}\r\n        letter={(this.props.letters[i]) ? this.props.letters[i] : ' '}\r\n        onClick={this.props.onClick} />\r\n    }\r\n    return (\r\n      <div className={(this.props.className) ? \"row \" + this.props.className : \"row\"}>\r\n        {rowLetters}\r\n        {/* <br /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRow.defaultProps = {\r\n  size: 5,\r\n  letters: 'TAPWD'\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Score extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    let score = this.props.score.toString();\r\n    for (let i = 0; i < score.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />\r\n    }\r\n    return (\r\n      <div className=\"selection\">\r\n        <span className=\"selection-info\">SCORE</span>\r\n        <span id=\"score\">{output}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScore.defaultProps = {\r\n  score: 0\r\n}\r\n\r\nexport default Score\r\n\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Selection extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    for (let i = 0; i < this.props.word.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(this.props.word[i]) ? this.props.word[i] : ' '} />\r\n    }\r\n    return (\r\n      <div id=\"selection\" className=\"selection\">\r\n        <span className=\"selection-info\">WORD INPUT</span>\r\n        <span id=\"word\">{output}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: ''\r\n}\r\n\r\nexport default Selection\r\n\r\n","import React from 'react';\r\n\r\nclass Sidebar extends React.Component {\r\n  openSettingsModal() {\r\n    window.location.hash = 'settings';\r\n  }\r\n  openHelpModal() {\r\n    window.location.hash = 'help';\r\n  }\r\n  handleQuit() {\r\n    alert('QUITING IS NOT A OPTION!');\r\n  }\r\n  render() {\r\n    let timer;\r\n    if (this.props.endless) {\r\n      timer = <div className=\"button alt\">&infin;</div>;\r\n    } else {\r\n      timer = <div className=\"button alt\">{this.props.minutes}<span className=\"highlight\">m</span></div>;\r\n    }\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-inner\">\r\n          <div className=\"cell tooltip\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"button alt multiplier\"><span className=\"highlight\">x</span><span id=\"multiplier\">{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Timer\">\r\n            {timer}\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Grid Size\">\r\n            <div className=\"button alt\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Undo Word\">\r\n            <button id=\"undo\" className=\"button\" onClick={this.props.handleUndoButtonClick}>&#8630;</button>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Submit Word\">\r\n            <button id=\"submit\" className=\"button\" onClick={this.props.handleSubmitButtonClick}>&#8629;</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-inner\">\r\n          <div className=\"cell tooltip\" data-tooltip=\"Settings\">\r\n            <div className=\"button alt\" onClick={this.openSettingsModal.bind(this)}>&#10033;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Help\">\r\n            <div className=\"button alt\" onClick={this.openHelpModal.bind(this)}>&#63;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Quit\">\r\n            <button id=\"quit\" className=\"button\" onClick={this.handleQuit.bind(this)}>&times;</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  endless: false\r\n}\r\n\r\nexport default Sidebar;\r\n","let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\r\nimport Row from './Row';\r\nimport Score from './Score';\r\nimport Selection from './Selection';\r\nimport Sidebar from './Sidebar';\r\nimport spellcheck from './../spellcheck';\r\n\r\nclass Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      size: props.size,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      endless: props.endless,\r\n      score: props.score,\r\n      lastWordScore: props.lastWordScore,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    let cell = e.target\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    if (this.state.cellToggle) {\r\n      // cell toggle\r\n      if (word.filter(x => x.cell === cellName).length === 0) {\r\n        this.pushSelectionWord(cell)\r\n      } else {\r\n        word = word.filter(x => x.cell !== cellName)\r\n        this.setState({\r\n          word: word\r\n        })\r\n        cell.classList.toggle('selected')\r\n      }\r\n    } else {\r\n      // word pop\r\n      if (word.filter(x => x.cell === cellName).length === 0) {\r\n        this.pushSelectionWord(cell)\r\n      } else if (word[word.length - 1].cell === cellName) {\r\n        this.popSelectionWord()\r\n      }\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n    cell.classList.add('selected')\r\n    this.setState({\r\n      word: word\r\n    })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.state.word.length > 0) {\r\n      let word = this.state.word\r\n      document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n      word.length--;\r\n      this.setState({\r\n        word: word\r\n      })\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({\r\n      word: []\r\n    })\r\n  }\r\n  updateMultiplier(newWordScore) {\r\n    if (this.state.lastWordScore > 1) {\r\n      let lastWordScore = this.state.lastWordScore\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordScore > lastWordScore) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500);\r\n        multiplier++\r\n      } else if (newWordScore < lastWordScore && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500);\r\n        multiplier--\r\n      }\r\n      this.setState({\r\n        multiplier: multiplier\r\n      })\r\n    }\r\n  }\r\n  updateScore(wordScore) {\r\n    let score = this.state.score\r\n    score += (wordScore * this.state.multiplier)\r\n    this.updateMultiplier(wordScore)\r\n    this.setState({\r\n      score: score,\r\n      lastWordScore: wordScore\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"cell selected\"]')\r\n    selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({\r\n          rows: this.randomLetters()\r\n        })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'];\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.state.word.length > 0) {\r\n      let word = this.state.word.map(x => x.letter).join('').toLowerCase();\r\n      spellcheck.get('?text=' + word)\r\n      .then(function (response) {\r\n        let selectedCells = document.querySelectorAll('[class=\"cell selected\"]')\r\n        if (response.data.corrections[word] === undefined) {\r\n          selectedCells.forEach(x => x.classList.add('flash-success'))\r\n          setTimeout(() => {\r\n            selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n            this.updateScore(word.length)\r\n            this.clearSelectionWord()\r\n            this.resetSelectedCells()\r\n          }, 500);\r\n        } else {\r\n          document.getElementById('selection').classList.add('shake')\r\n          selectedCells.forEach(x => x.classList.add('flash-error'))\r\n          setTimeout(() => {\r\n            document.getElementById('selection').classList.remove('shake')\r\n            selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n          }, 500);\r\n        }\r\n      }.bind(this))\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n    }\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace key to undo\r\n      case 8:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter key to submit\r\n      case 13:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let rows = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      rows[i] = <Row\r\n        key={i.toString()}\r\n        rowNumber={i}\r\n        size={this.state.size}\r\n        letters={this.state.rows[i]}\r\n        onClick={this.handleCellClick} />\r\n    }\r\n    return (\r\n      <div className=\"grid\">\r\n        <Score score={this.state.score} />\r\n        <Selection word={this.state.word.map(x => x.letter)} />\r\n        <div className=\"rows\">\r\n          {rows}\r\n        </div>\r\n        <Sidebar multiplier={this.state.multiplier} endless={this.state.endless} handleUndoButtonClick={this.popSelectionWord} handleSubmitButtonClick={this.submitWord} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGrid.defaultProps = {\r\n  generate: true,\r\n  cellToggle: false,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  rows: [\r\n    'TAP',\r\n    'WORD',\r\n    'GAME',\r\n    'BY',\r\n    'TUNJI',\r\n  ],\r\n  multiplier: 1,\r\n  endless: false,\r\n  score: 0,\r\n  lastWordScore: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\n\r\nclass Settings extends React.Component {\r\n  saveSettings() {\r\n    console.log('saving settings ...')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"settings\">\r\n        <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>GAME SETTINGS</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>{[3,4,5,6,7].toString().replace(/,/g, ' ')}</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>{[0,1,2,3,4,5,6,7,8,9,10].toString().replace(/,/g, ' ')}</div>\r\n                <div><em><small>select 0 for endless mode</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\r\n                <div><em><small>cell reshuffle after submit</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveSettings.bind(this)}>Save Settings</button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 500\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"modal\" id=\"help\">\r\n      <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-header\">\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n          <div className=\"modal-title\">\r\n            <strong style={spacedTypo}>HELP &amp; ABOUT</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content\">\r\n            <div>\r\n              <h5 style={spacedTypo}>HOW TO PLAY</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>&bull; Select some letters to make a word</div>\r\n              <div>&bull; Click Submit Button to evaluate you Score</div>\r\n              <div>&bull; QUITING IS NOT AN OPTION!</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div><kbd style={kbd}>BKSP</kbd> UNDO</div>\r\n              <div>&nbsp;</div>\r\n              <div><kbd style={kbd}>ENTER</kbd> SUBMIT</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>ABOUT</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\r\n              <div>&nbsp;</div>\r\n              <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\r\n              <div>&nbsp;</div>\r\n              <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst kbd = {\r\n  border: '1px solid #28F',\r\n  padding: '3px 4px 3px 6px'\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst customLink = {\r\n  color: '#FFF',\r\n  textDecoration: 'none'\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Topbar from './components/Topbar';\r\nimport Grid from './components/Grid';\r\nimport Settings from './components/Settings';\r\nimport Help from './components/Help';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div style={{ display: 'block' }}>\r\n          <Topbar />\r\n        </div>\r\n        <Grid cellToggle={true} shuffle={true} shuffleAll={true} endless={true} />\r\n      </header>\r\n      <Settings />\r\n      <Help />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}