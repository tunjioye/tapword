{"version":3,"sources":["config.js","spellcheck.js","components/Loading/Loading.jsx","components/Loading/index.js","components/GridCell/GridCell.jsx","components/GridCell/index.js","components/GridRow/GridRow.jsx","components/GridRow/index.js","components/GridNew/GridNew.jsx","components/GridNew/index.js","components/SelectionCell/SelectionCell.jsx","components/SelectionCell/index.js","components/Score/Score.jsx","components/Score/index.js","components/Selection/Selection.jsx","components/Selection/index.js","components/Countdown/Countdown.jsx","components/Countdown/index.js","components/Sidebar/Sidebar.jsx","components/Sidebar/index.js","components/Play.js","components/Player.js","components/Help.js","App.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Loading","props","react_default","a","createElement","className","large","defaultProps","GridCell","row","rowName","cell","concat","cellNumber","onClick","handleCellClick","letter","charAt","GridRow","rowLetters","i","size","components_GridCell","key","toString","rowNumber","letters","Fragment","GridNew","rows","components_GridRow","SelectionCell","style","Object","objectSpread","Score","output","score","length","components_SelectionCell","id","Selection","word","height","Countdown","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","seconds","minutes","timer","secondsToTime","bind","assertThisInitialized","calculateTimeLeft","startTimer","stopTimer","countDown","secs","divisor_for_minutes","divisor_for_seconds","m","Math","floor","s","ceil","timeLeftVar","setState","setInterval","clearInterval","_this2","setMinutes","parseFloat","toFixed","saveGameProgress","quitGame","newGame","nextProps","_this3","_this$state$time","React","Component","Sidebar","location","hash","timerText","components_Countdown","playOrQuitText","playOrQuitAction","openPlayModal","playOrQuit","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","Play","gridSizes","forEach","x","handleGridSizeClick","timerMinutes","handleMinuteClick","background","spacedTypo","data-size","marginTop","textCenter","saveButton","startNewGame","letterSpacing","wordSpacing","textTransform","margin","fontWeight","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","href","aria-label","saveProfile","kbd","customLink","dl","dt","width","display","dd","Help","target","rel","react_github_btn","data-icon","App","lastWordLength","cellToggle","shuffle","shuffleAll","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","setSelectedCells","resetSelectedCells","shuffleCells","quitMessage","undefined","alert","confirm","chars","toConsumableArray","Array","parseInt","map","random","join","e","cellName","getAttribute","filter","classList","toggle","innerHTML","add","document","querySelectorAll","remove","newWordLength","multiplierEl","getElementsByClassName","wordLength","querySelector","selectedCells","toLowerCase","get","then","response","data","corrections","getElementById","catch","errorMessage","message","finally","savingProgress","JSON","stringify","_this4","gridSize","innerText","gridNews","gridContainers","gridSidebars","setAttribute","keyCode","preventDefault","_this5","addEventListener","generate","lastGame","parsedLastGame","parse","components_Loading","components_Score","components_Selection","minHeight","maxHeight","components_GridNew","components_Sidebar","components_Play","components_Player","components_Help","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ef2bc26.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.scss';\n\nconst Loading = (props) => (\n  <div className={(props.large ? 'loading' : 'loading loading-lg')}></div>\n);\n\nLoading.propTypes = {\n  large: PropTypes.bool\n};\n\nLoading.defaultProps = {\n  large: false\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridCell.scss'\n\nconst GridCell = (props) => (\n  <div\n    className={(props.className) ? \"grid-cell \" + props.className : \"grid-cell\"}\n    row={props.rowName}\n    cell={`c${props.cellNumber}`}\n    onClick={props.handleCellClick}\n  >\n    {props.letter.charAt(0)}\n  </div>\n)\n\nGridCell.propTypes = {\n  letter: PropTypes.string,\n  rowName: PropTypes.string,\n  cellNumber: PropTypes.number,\n  handleCellClick: PropTypes.func\n}\n\nGridCell.defaultProps = {\n  letter: 'T',\n  rowName: 'r0',\n  cellNumber: 0\n}\n\nexport default GridCell\n","import GridCell from './GridCell'\n\nexport default GridCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridRow.scss'\nimport CellNew from '../GridCell'\n\nconst GridRow = (props) => {\n  let rowLetters = []\n  for (let i = 0; i < props.size; i++) {\n    rowLetters[i] = (\n      <CellNew\n        key={i.toString()}\n        rowName={`r${props.rowNumber}`}\n        cellNumber={((props.rowNumber * props.size) + i)}\n        letter={(props.letters[i]) ? props.letters[i] : ' '}\n        handleCellClick={props.handleCellClick}\n      />\n    )\n  }\n  return (\n    <>\n      {rowLetters}\n    </>\n  )\n}\n\nGridRow.propTypes = {\n  size: PropTypes.number,\n  rowNumber: PropTypes.number,\n  letters: PropTypes.string,\n  handleCellClick: PropTypes.func\n}\n\nGridRow.defaultProps = {\n  size: 5,\n  rowNumber: 0,\n  letters: 'TAPWD'\n}\n\nexport default GridRow\n","import GridRow from './GridRow'\n\nexport default GridRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridNew.scss'\nimport GridRow from '../GridRow'\n\nconst GridNew = (props) => {\n  let rows = []\n  for (let i = 0; i < props.size; i++) {\n    rows[i] = (\n      <GridRow\n        key={i.toString()}\n        rowNumber={i}\n        size={props.size}\n        letters={props.rows[i]}\n        handleCellClick={props.handleCellClick}\n      />\n    )\n  }\n\n  return (\n    <div className=\"grid-container\">\n      <div className=\"grid-new\">\n        {rows}\n      </div>\n    </div>\n  )\n}\n\nGridNew.propTypes = {\n  size: PropTypes.number,\n  rows: PropTypes.array,\n  handleCellClick: PropTypes.func\n}\n\nGridNew.defaultProps = {\n  size: 5,\n  rows: [\n    'TAP',\n    'WORD',\n    'GAME',\n    'BY',\n    'TUNJI',\n  ]\n}\n\nexport default GridNew\n","import GridNew from './GridNew'\n\nexport default GridNew\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './SelectionCell.scss'\n\nconst SelectionCell = (props) => (\n  <div className=\"selection-cell\" style={{ ...props.style }}>\n    {props.letter.charAt(0)}\n  </div>\n)\n\nSelectionCell.propTypes = {\n  letter: PropTypes.string\n}\n\nSelectionCell.defaultProps = {\n  letter: 'T'\n}\n\nexport default SelectionCell\n","import SelectionCell from './SelectionCell'\n\nexport default SelectionCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './../Selection/Selection.scss'\nimport './Score.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Score = (props) => {\n  let output = []\n  let score = props.score.toString()\n  for (let i = 0; i < score.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />)\n  }\n\n  return (\n    <div className=\"selection\">\n      <span className=\"selection-info\">SCORE</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"score\">{output}</span>\n      </div>\n    </div>\n  )\n}\n\nScore.propTypes = {\n  score: PropTypes.number\n}\n\nScore.defaultProps = {\n  score: 0\n}\n\nexport default Score\n","import Score from './Score'\n\nexport default Score\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Selection.scss'\r\nimport SelectionCell from './../SelectionCell'\r\n\r\nconst Selection = (props) => {\r\n  let output = []\r\n  for (let i = 0; i < props.word.length; i++) {\r\n    output[i] = (<SelectionCell key={i.toString()} letter={(props.word[i]) ? props.word[i] : ' '} />)\r\n  }\r\n\r\n  return (\r\n    // #selection-word is important for the shake animation\r\n    <div id=\"selection-word\" className=\"selection\">\r\n      <span className=\"selection-info\">WORD INPUT</span>\r\n      <div className=\"selection-wrapper\">\r\n        <span id=\"word\">\r\n          {/* important spacing fix via style */}\r\n          <SelectionCell letter=' ' style={{ height: '64px' }} />\r\n          {output}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSelection.propTypes = {\r\n  word: PropTypes.array\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: []\r\n}\r\n\r\nexport default Selection\r\n","import Selection from './Selection'\n\nexport default Selection\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Countdown.scss'\r\n// import CountdownCircle from './../CountdownCircle'\r\n\r\nclass Countdown extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      time: {},\r\n      seconds: this.props.minutes * 60\r\n    }\r\n\r\n    this.timer = 0\r\n    this.secondsToTime = this.secondsToTime.bind(this)\r\n    this.calculateTimeLeft = this.calculateTimeLeft.bind(this)\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.countDown = this.countDown.bind(this)\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let divisor_for_minutes = secs % (60 * 60)\r\n    let minutes = Math.floor(divisor_for_minutes / 60)\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60\r\n    let seconds = Math.ceil(divisor_for_seconds)\r\n\r\n    let obj = {\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  calculateTimeLeft() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds)\r\n    this.setState({ time: timeLeftVar })\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000)\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(this.timer)\r\n    this.timer = 0 // reset to 0 !important\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = (this.state.seconds - 1 > 0) ? this.state.seconds - 1 : 0\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    })\r\n\r\n    if (seconds > 0) {\r\n      // set Game / App Minutes & save Game Progress\r\n      this.props.setMinutes(parseFloat(seconds / 60).toFixed(3))\r\n      setTimeout(() => {\r\n        this.props.saveGameProgress('save')\r\n      }, 1000)\r\n    } else {\r\n      // stop timer\r\n      this.stopTimer()\r\n      // Quit Game with a Time Up\r\n      this.props.quitGame('TIME UP!')\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateTimeLeft()\r\n    if (this.props.newGame) this.startTimer()\r\n    if (!this.props.newGame) this.stopTimer()\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps) {\r\n      setTimeout(() => {\r\n        this.setState({ seconds: nextProps.minutes * 60 })\r\n        if (nextProps.newGame) this.startTimer()\r\n        if (!nextProps.newGame) this.stopTimer()\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { minutes } = this.props\r\n    const { m, s } = this.state.time\r\n    // const minutesRadius = mapNumber(m, minutes, 0, 0, 359.9)\r\n    // const secondsRadius = mapNumber(s, 60, 0, 0, 359.9)\r\n\r\n    return (\r\n      <div>\r\n        {/* <h1>Countdown</h1> */}\r\n        <div className='countdown-wrapper'>\r\n          <div className='countdown-item'>\r\n            {/* Disabled for now because it seems hard to make responsive */}\r\n            {/* <CountdownCircle radius={(m === 0) ? secondsRadius : minutesRadius} /> */}\r\n            {(m === 0) ? s : m}\r\n            <span className=\"highlight\">{(m === 0) ? 's' : 'm'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// // Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\n// function mapNumber(number, in_min, in_max, out_min, out_max) {\r\n//   return (out_max - ((number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min)).toFixed(1)\r\n// }\r\n\r\nCountdown.propTypes = {\r\n  minutes: PropTypes.number,\r\n  newGame: PropTypes.bool,\r\n  setMinutes: PropTypes.func,\r\n  saveGameProgress: PropTypes.func,\r\n  quitGame: PropTypes.func\r\n}\r\n\r\nCountdown.defaultProps = {\r\n  minutes: 2\r\n}\r\n\r\nexport default Countdown\r\n","import Countdown from './Countdown'\r\n\r\nexport default Countdown\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Sidebar.scss'\r\nimport Countdown from './../Countdown'\r\n\r\nclass Sidebar extends React.Component {\r\n  openPlayModal() {\r\n    window.location.hash = 'play'\r\n  }\r\n\r\n  openPlayerModal() {\r\n    window.location.hash = 'player'\r\n  }\r\n\r\n  openHelpModal() {\r\n    window.location.hash = 'help'\r\n  }\r\n\r\n  render() {\r\n    let timerText = \"Timer\"\r\n    // let timer = (<div className=\"timer\">{this.props.minutes}<span className=\"highlight\">m</span></div>)\r\n    let timer = (\r\n      <div className=\"timer\">\r\n        <Countdown\r\n          minutes={parseFloat(this.props.minutes)}\r\n          newGame={this.props.newGame}\r\n          setMinutes={this.props.setMinutes}\r\n          saveGameProgress={this.props.saveGameProgress}\r\n          quitGame={this.props.quitGame} />\r\n        {/* <span className=\"highlight\">m</span> */}\r\n      </div>\r\n    )\r\n    if (this.props.minutes === 0) {\r\n      timerText = \"Endless\"\r\n      timer = (<div className=\"timer\">&infin;</div>)\r\n    }\r\n\r\n    let playOrQuitText = \"New Game\"\r\n    let playOrQuitAction = this.openPlayModal.bind(this)\r\n    let playOrQuit = (<div>&#8227;</div>)\r\n    if (this.props.newGame) {\r\n      playOrQuitText = \"Quit\"\r\n      playOrQuitAction = this.props.quitGame\r\n      playOrQuit = (<div>&times;</div>)\r\n    }\r\n\r\n    return (\r\n      <div className=\"grid-sidebar\">\r\n        <div className=\"grid-gameplay sidebar-inner sidebar-inner-gameplay\">\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={timerText}>\r\n            {timer}\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Grid Size\">\r\n            <div className=\"grid-size\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n          <div className=\"grid-cell\"></div>\r\n          <div className=\"grid-cell\"></div>\r\n        </div>\r\n        <div className=\"grid-actions sidebar-inner sidebar-inner-actions\">\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Player\" onClick={this.openPlayerModal.bind(this)}>\r\n            <div>&#10033;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Help\" onClick={this.openHelpModal.bind(this)}>\r\n            <div>&#63;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={playOrQuitText} onClick={playOrQuitAction}>\r\n            {playOrQuit}\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Undo Word\" onClick={this.props.handleUndoButtonClick}>\r\n            <div>&#8592;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Submit Word\" onClick={this.props.handleSubmitButtonClick}>\r\n            <div>&#8629;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  size: PropTypes.number,\r\n  minutes: PropTypes.number,\r\n  multiplier: PropTypes.number,\r\n  newGame: PropTypes.bool,\r\n  setMinutes: PropTypes.func,\r\n  saveGameProgress: PropTypes.func,\r\n  quitGame: PropTypes.func,\r\n  handleUndoButtonClick: PropTypes.func,\r\n  handleSubmitButtonClick: PropTypes.func\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  newGame: false\r\n}\r\n\r\nexport default Sidebar\r\n","import Sidebar from './Sidebar'\n\nexport default Sidebar\n","import React from 'react';\r\n\r\nclass Play extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      //\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const gridSizes = [];\r\n    [3,4,5,6,7].forEach((x,i) => {\r\n      if (x === this.props.size) {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      } else {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      }\r\n    });\r\n\r\n    const timerMinutes = [];\r\n    [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\r\n      if (x === this.props.minutes) {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      } else {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"modal\" id=\"play\">\r\n        <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            {/* <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a> */}\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>NEW GAME</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {gridSizes}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {timerMinutes}\r\n                </div>\r\n                <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.props.startNewGame}>Start New Game</button></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false,\r\n  size: 5,\r\n  minutes: 5\r\n}\r\n\r\nexport default Play;\r\n","import React from 'react';\r\n\r\nclass Player extends React.Component {\r\n  saveProfile() {\r\n    console.log('saving profile and settings ...')\r\n    window.location.hash = ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"player\">\r\n        <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>PLAYER</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>PROFILE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>Username : tunjioye</div>\r\n                <div>&nbsp;</div>\r\n                <div>Highest Score : 2019</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\r\n                <div><em><small>cell reshuffle after submit</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport GitHubButton from 'react-github-btn';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"modal\" id=\"help\">\r\n      <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-header\">\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n          <div className=\"modal-title\">\r\n            <strong style={spacedTypo}>HELP &amp; ABOUT</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content\">\r\n            <div>\r\n              <h5 style={spacedTypo}>HOW TO PLAY</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>&bull; Select some letters to make a word</div>\r\n              <div>&bull; Click Submit Button to evaluate your Score</div>\r\n              <div>&bull; QUITING IS NOT AN OPTION!</div>\r\n              <div>&bull; <em>How to Play Tutorial coming soon ...</em></div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <dl style={{ ...dl }}>\r\n                <dt style={{ ...dl.dt }}>\r\n                  <small>UNDO</small>\r\n                </dt>\r\n                <dd style={{ ...dl.dd }}>\r\n                  <kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd>\r\n                  <br />\r\n                </dd>\r\n                <dt style={{ ...dl.dt }}>\r\n                <small>SUBMIT</small>\r\n                </dt>\r\n                <dd style={{ ...dl.dd }}>\r\n                  <kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd>\r\n                  <br />\r\n                </dd>\r\n              </dl>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>ABOUT</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\r\n              <div>&nbsp;</div>\r\n              <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\r\n              <div>&nbsp;</div>\r\n              <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\r\n            <br />\r\n            <div style={{ ...textCenter }}>\r\n              <GitHubButton\r\n                href=\"https://github.com/tunjioye/tapword\"\r\n                data-icon=\"octicon-star\"\r\n                aria-label=\"Star tunjioye/tapword on GitHub\">Star</GitHubButton>\r\n              <span style={{ padding: '0 5px' }}></span>\r\n              <GitHubButton\r\n                href=\"https://github.com/tunjioye/tapword/fork\"\r\n                data-icon=\"octicon-repo-forked\"\r\n                aria-label=\"Fork tunjioye/tapword on GitHub\">Fork</GitHubButton>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst kbd = {\r\n  border: '1px solid #28F',\r\n  padding: '3px 4px 3px 6px'\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst customLink = {\r\n  color: '#FFF',\r\n  textDecoration: 'none'\r\n}\r\n\r\nconst dl = {\r\n  margin: '0 auto',\r\n  dt: {\r\n    width: '80px',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    margin: '5px auto'\r\n  },\r\n  dd: {\r\n    display: 'inline'\r\n  }\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles/index.css';\r\nimport './styles/grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordLength: props.lastWordLength,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.setMinutes = this.setMinutes.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.setSelectedCells = this.setSelectedCells.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n  }\r\n  startNewGame() {\r\n    this.setState({\r\n      newGame: true,\r\n      multiplier: 1,\r\n      score: 0,\r\n      lastWordLength: 0,\r\n      word: []\r\n    })\r\n    this.resetSelectedCells()\r\n    window.location.hash = ''\r\n    this.saveGameProgress('save')\r\n  }\r\n  quitGame(quitMessage = ' ') {\r\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\r\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\r\n    } else {\r\n      window.alert(`Your Score is : ${this.state.score}`)\r\n    }\r\n    this.setState({ newGame: false })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n  }\r\n  hasStartedNewGame() {\r\n    if (this.state.newGame) {\r\n      return true;\r\n    } else {\r\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\r\n      return false;\r\n    }\r\n  }\r\n  setMinutes(minutes) {\r\n    this.setState({ minutes })\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({ word })\r\n      cell.classList.toggle('selected')\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    cell.classList.add('selected')\r\n    this.setState({ word })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n        word.length--\r\n        this.setState({ word })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({ word: [] })\r\n  }\r\n  updateMultiplier(newWordLength) {\r\n    if (this.state.lastWordLength > 1) {\r\n      let lastWordLength = this.state.lastWordLength\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordLength > lastWordLength) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({ multiplier })\r\n    }\r\n  }\r\n  updateScore(wordLength) {\r\n    let score = this.state.score\r\n    score += (wordLength * this.state.multiplier)\r\n    this.updateMultiplier(wordLength)\r\n    this.setState({\r\n      score: score,\r\n      lastWordLength: wordLength\r\n    })\r\n  }\r\n  setSelectedCells() {\r\n    this.state.word.forEach(x => {\r\n      let cell = document.querySelector(`[cell=\"${x.cell}\"]`)\r\n      cell.classList.add('selected')\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n    selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({ rows: this.randomLetters() })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          if (error) {\r\n            let errorMessage = \"Network Error\"\r\n            if (error.response !== undefined) {\r\n              errorMessage = error.response.data.message\r\n            }\r\n            console.error(errorMessage)\r\n            alert(errorMessage)\r\n          }\r\n        })\r\n        .finally(function () {\r\n          this.saveGameProgress('save')\r\n        }.bind(this));\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500)\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText)\r\n    this.setState({ size: gridSize })\r\n    setTimeout(() => {\r\n      this.setState({ rows: this.randomLetters() })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({ minutes: parseInt(e.target.innerText) })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\r\n\r\n    // if (window.localStorage.getItem('game') && window.confirm('Resume Last Game?')) {\r\n    if (window.localStorage.getItem('game')) {\r\n      // resume last game\r\n      const lastGame = window.localStorage.getItem('game')\r\n      let parsedLastGame = JSON.parse(lastGame)\r\n\r\n      if (parsedLastGame.newGame) {\r\n        this.setState(parsedLastGame)\r\n\r\n        // dynamically set grid size style\r\n        const gridNews = document.getElementsByClassName('grid-new')\r\n        const gridContainers = document.getElementsByClassName('grid-container')\r\n        const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n        gridNews[0].setAttribute('size', parsedLastGame.size)\r\n        gridContainers[0].setAttribute('size', parsedLastGame.size)\r\n        gridSidebars[0].setAttribute('size', parsedLastGame.size)\r\n\r\n        setTimeout(() => {\r\n          this.setSelectedCells()\r\n        }, 10);\r\n      } else {\r\n        window.localStorage.removeItem('game')\r\n      }\r\n    // } else {\r\n    //   // clear last game and initialize new game\r\n    //   if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    //   window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"grid-flex\">\r\n              <GridNew\r\n                size={this.state.size}\r\n                rows={this.state.rows}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                minutes={parseFloat(this.state.minutes)}\r\n                newGame={this.state.newGame}\r\n                setMinutes={this.setMinutes}\r\n                saveGameProgress={this.saveGameProgress}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Play\r\n          newGame={this.state.newGame}\r\n          startNewGame={this.startNewGame}\r\n          size={this.state.size}\r\n          minutes={this.state.minutes}\r\n          handleGridSizeClick={this.handleGridSizeClick}\r\n          handleMinuteClick={this.handleMinuteClick} />\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordLength: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}