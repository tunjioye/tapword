{"version":3,"sources":["config.js","spellcheck.js","components/Loading/Loading.jsx","components/Loading/index.js","components/GridCell/GridCell.jsx","components/GridCell/index.js","components/GridRow/GridRow.jsx","components/GridRow/index.js","components/GridNew/GridNew.jsx","components/GridNew/index.js","components/SelectionCell/SelectionCell.jsx","components/SelectionCell/index.js","components/Score/Score.jsx","components/Score/index.js","components/Selection/Selection.jsx","components/Selection/index.js","components/Sidebar/Sidebar.jsx","components/Sidebar/index.js","components/Play.js","components/Player.js","components/Help.js","App.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Loading","props","react_default","a","createElement","className","large","defaultProps","GridCell","row","rowName","cell","concat","cellNumber","onClick","handleCellClick","letter","charAt","GridRow","rowLetters","i","size","components_GridCell","key","toString","rowNumber","letters","Fragment","GridNew","rows","components_GridRow","SelectionCell","style","Object","objectSpread","Score","output","score","length","components_SelectionCell","id","Selection","word","height","Sidebar","location","hash","timer","this","minutes","playOrQuitText","playOrQuitAction","openPlayModal","bind","playOrQuit","newGame","quitGame","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","React","Component","Play","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","gridSizes","forEach","x","handleGridSizeClick","timerMinutes","handleMinuteClick","background","spacedTypo","data-size","marginTop","textCenter","saveButton","startNewGame","letterSpacing","wordSpacing","textTransform","margin","fontWeight","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","href","aria-label","saveProfile","kbd","customLink","dl","dt","width","display","dd","Help","target","rel","react_github_btn","data-icon","App","lastWordScore","cellToggle","shuffle","shuffleAll","assertThisInitialized","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","setSelectedCells","resetSelectedCells","shuffleCells","saveGameProgress","setState","alert","confirm","chars","toConsumableArray","Array","parseInt","map","Math","floor","random","join","e","cellName","getAttribute","filter","classList","toggle","innerHTML","add","document","querySelectorAll","remove","newWordScore","multiplierEl","getElementsByClassName","wordScore","querySelector","selectedCells","toLowerCase","get","then","response","undefined","data","corrections","getElementById","catch","finally","_this3","savingProgress","JSON","stringify","_this4","gridSize","innerText","gridNews","gridContainers","gridSidebars","setAttribute","keyCode","preventDefault","_this5","addEventListener","generate","lastGame","parsedLastGame","parse","components_Loading","components_Score","components_Selection","minHeight","maxHeight","components_GridNew","components_Sidebar","components_Play","components_Player","components_Help","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c43b872.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.scss';\n\nconst Loading = (props) => (\n  <div className={(props.large ? 'loading' : 'loading loading-lg')}></div>\n);\n\nLoading.propTypes = {\n  large: PropTypes.bool\n};\n\nLoading.defaultProps = {\n  large: false\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridCell.scss'\n\nconst GridCell = (props) => (\n  <div\n    className={(props.className) ? \"grid-cell \" + props.className : \"grid-cell\"}\n    row={props.rowName}\n    cell={`c${props.cellNumber}`}\n    onClick={props.handleCellClick}\n  >\n    {props.letter.charAt(0)}\n  </div>\n)\n\nGridCell.propTypes = {\n  letter: PropTypes.string,\n  rowName: PropTypes.string,\n  cellNumber: PropTypes.number,\n  handleCellClick: PropTypes.func\n}\n\nGridCell.defaultProps = {\n  letter: 'T',\n  rowName: 'r0',\n  cellNumber: 0\n}\n\nexport default GridCell\n","import GridCell from './GridCell'\n\nexport default GridCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridRow.scss'\nimport CellNew from '../GridCell'\n\nconst GridRow = (props) => {\n  let rowLetters = []\n  for (let i = 0; i < props.size; i++) {\n    rowLetters[i] = (\n      <CellNew\n        key={i.toString()}\n        rowName={`r${props.rowNumber}`}\n        cellNumber={((props.rowNumber * props.size) + i)}\n        letter={(props.letters[i]) ? props.letters[i] : ' '}\n        handleCellClick={props.handleCellClick}\n      />\n    )\n  }\n  return (\n    <>\n      {rowLetters}\n    </>\n  )\n}\n\nGridRow.propTypes = {\n  size: PropTypes.number,\n  rowNumber: PropTypes.number,\n  letters: PropTypes.string,\n  handleCellClick: PropTypes.func\n}\n\nGridRow.defaultProps = {\n  size: 5,\n  rowNumber: 0,\n  letters: 'TAPWD'\n}\n\nexport default GridRow\n","import GridRow from './GridRow'\n\nexport default GridRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridNew.scss'\nimport GridRow from '../GridRow'\n\nconst GridNew = (props) => {\n  let rows = []\n  for (let i = 0; i < props.size; i++) {\n    rows[i] = (\n      <GridRow\n        key={i.toString()}\n        rowNumber={i}\n        size={props.size}\n        letters={props.rows[i]}\n        handleCellClick={props.handleCellClick}\n      />\n    )\n  }\n\n  return (\n    <div className=\"grid-container\">\n      <div className=\"grid-new\">\n        {rows}\n      </div>\n    </div>\n  )\n}\n\nGridNew.propTypes = {\n  size: PropTypes.number,\n  rows: PropTypes.array,\n  handleCellClick: PropTypes.func\n}\n\nGridNew.defaultProps = {\n  size: 5,\n  rows: [\n    'TAP',\n    'WORD',\n    'GAME',\n    'BY',\n    'TUNJI',\n  ]\n}\n\nexport default GridNew\n","import GridNew from './GridNew'\n\nexport default GridNew\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './SelectionCell.scss'\n\nconst SelectionCell = (props) => (\n  <div className=\"selection-cell\" style={{ ...props.style }}>\n    {props.letter.charAt(0)}\n  </div>\n)\n\nSelectionCell.propTypes = {\n  letter: PropTypes.string\n}\n\nSelectionCell.defaultProps = {\n  letter: 'T'\n}\n\nexport default SelectionCell\n","import SelectionCell from './SelectionCell'\n\nexport default SelectionCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './../Selection/Selection.scss'\nimport './Score.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Score = (props) => {\n  let output = []\n  let score = props.score.toString()\n  for (let i = 0; i < score.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />)\n  }\n\n  return (\n    <div className=\"selection\">\n      <span className=\"selection-info\">SCORE</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"score\">{output}</span>\n      </div>\n    </div>\n  )\n}\n\nScore.propTypes = {\n  score: PropTypes.number\n}\n\nScore.defaultProps = {\n  score: 0\n}\n\nexport default Score\n","import Score from './Score'\n\nexport default Score\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Selection.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Selection = (props) => {\n  let output = []\n  for (let i = 0; i < props.word.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(props.word[i]) ? props.word[i] : ' '} />)\n  }\n\n  return (\n    // #selection-word is important for the shake animation\n    <div id=\"selection-word\" className=\"selection\">\n      <span className=\"selection-info\">WORD INPUT</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"word\">\n          {/* important spacing fix via style */}\n          <SelectionCell letter=' ' style={{ height: '64px' }} />\n          {output}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nSelection.propTypes = {\n  word: PropTypes.string\n}\n\nSelection.defaultProps = {\n  word: ''\n}\n\nexport default Selection\n","import Selection from './Selection'\n\nexport default Selection\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Sidebar.scss'\n\nclass Sidebar extends React.Component {\n  openPlayModal() {\n    window.location.hash = 'play'\n  }\n\n  openPlayerModal() {\n    window.location.hash = 'player'\n  }\n\n  openHelpModal() {\n    window.location.hash = 'help'\n  }\n\n  render() {\n    let timer = (<div className=\"timer\">{this.props.minutes}<span className=\"highlight\">m</span></div>)\n    if (this.props.minutes === 0) {\n      timer = (<div className=\"timer\">&infin;</div>)\n    }\n\n    let playOrQuitText = \"New Game\"\n    let playOrQuitAction = this.openPlayModal.bind(this)\n    let playOrQuit = (<div>&#8227;</div>)\n    if (this.props.newGame) {\n      playOrQuitText = \"Quit\"\n      playOrQuitAction = this.props.quitGame\n      playOrQuit = (<div>&times;</div>)\n    }\n\n    return (\n      <div className=\"grid-sidebar\">\n        <div className=\"grid-gameplay sidebar-inner sidebar-inner-gameplay\">\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Score Multiplier\">\n            <div className=\"multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Timer\">\n            {timer}\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Grid Size\">\n            <div className=\"grid-size\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\n          </div>\n          <div className=\"grid-cell\"></div>\n          <div className=\"grid-cell\"></div>\n        </div>\n        <div className=\"grid-actions sidebar-inner sidebar-inner-actions\">\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Player\" onClick={this.openPlayerModal.bind(this)}>\n            <div>&#10033;</div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Help\" onClick={this.openHelpModal.bind(this)}>\n            <div>&#63;</div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={playOrQuitText} onClick={playOrQuitAction}>\n            {playOrQuit}\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Undo Word\" onClick={this.props.handleUndoButtonClick}>\n            <div>&#8592;</div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Submit Word\" onClick={this.props.handleSubmitButtonClick}>\n            <div>&#8629;</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSidebar.propTypes = {\n  size: PropTypes.number,\n  minutes: PropTypes.number,\n  multiplier: PropTypes.number,\n  newGame: PropTypes.bool,\n  quitGame: PropTypes.func,\n  handleUndoButtonClick: PropTypes.func,\n  handleSubmitButtonClick: PropTypes.func\n}\n\nSidebar.defaultProps = {\n  size: 5,\n  minutes: 5,\n  multiplier: 1,\n  newGame: false\n}\n\nexport default Sidebar\n","import Sidebar from './Sidebar'\n\nexport default Sidebar\n","import React from 'react';\r\n\r\nclass Play extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes\r\n    }\r\n  }\r\n  render() {\r\n    const gridSizes = [];\r\n    [3,4,5,6,7].forEach((x,i) => {\r\n      if (x === this.props.size) {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      } else {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      }\r\n    });\r\n    const timerMinutes = [];\r\n    [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\r\n      if (x === this.props.minutes) {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      } else {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      }\r\n    });\r\n    return (\r\n      <div className=\"modal\" id=\"play\">\r\n        <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            {/* <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a> */}\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>NEW GAME</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {gridSizes}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {timerMinutes}\r\n                </div>\r\n                <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\r\n                <div style={{ marginTop: '.4rem' }}><em><small>TIMER MODE coming soon ...</small></em></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.props.startNewGame}>Start New Game</button></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false,\r\n  size: 5,\r\n  minutes: 5\r\n}\r\n\r\nexport default Play;\r\n","import React from 'react';\r\n\r\nclass Player extends React.Component {\r\n  saveProfile() {\r\n    console.log('saving profile and settings ...')\r\n    window.location.hash = ''\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"player\">\r\n        <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>PLAYER</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>PROFILE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>Username : tunjioye</div>\r\n                <div>&nbsp;</div>\r\n                <div>Highest Score : 2019</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\r\n                <div><em><small>cell reshuffle after submit</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport GitHubButton from 'react-github-btn';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"modal\" id=\"help\">\r\n      <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-header\">\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n          <div className=\"modal-title\">\r\n            <strong style={spacedTypo}>HELP &amp; ABOUT</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content\">\r\n            <div>\r\n              <h5 style={spacedTypo}>HOW TO PLAY</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>&bull; Select some letters to make a word</div>\r\n              <div>&bull; Click Submit Button to evaluate your Score</div>\r\n              <div>&bull; QUITING IS NOT AN OPTION!</div>\r\n              <div>&bull; <em>How to Play Tutorial coming soon ...</em></div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <dl style={{ ...dl }}>\r\n                <dt style={{ ...dl.dt }}>\r\n                  <small>UNDO</small>\r\n                </dt>\r\n                <dd style={{ ...dl.dd }}>\r\n                  <kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd>\r\n                  <br />\r\n                </dd>\r\n                <dt style={{ ...dl.dt }}>\r\n                <small>SUBMIT</small>\r\n                </dt>\r\n                <dd style={{ ...dl.dd }}>\r\n                  <kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd>\r\n                  <br />\r\n                </dd>\r\n              </dl>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>ABOUT</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\r\n              <div>&nbsp;</div>\r\n              <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\r\n              <div>&nbsp;</div>\r\n              <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\r\n            <br />\r\n            <div style={{ ...textCenter }}>\r\n              <GitHubButton\r\n                href=\"https://github.com/tunjioye/tapword\"\r\n                data-icon=\"octicon-star\"\r\n                aria-label=\"Star tunjioye/tapword on GitHub\">Star</GitHubButton>\r\n              <span style={{ padding: '0 5px' }}></span>\r\n              <GitHubButton\r\n                href=\"https://github.com/tunjioye/tapword/fork\"\r\n                data-icon=\"octicon-repo-forked\"\r\n                aria-label=\"Fork tunjioye/tapword on GitHub\">Fork</GitHubButton>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst kbd = {\r\n  border: '1px solid #28F',\r\n  padding: '3px 4px 3px 6px'\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst customLink = {\r\n  color: '#FFF',\r\n  textDecoration: 'none'\r\n}\r\n\r\nconst dl = {\r\n  margin: '0 auto',\r\n  dt: {\r\n    width: '80px',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    margin: '5px auto'\r\n  },\r\n  dd: {\r\n    display: 'inline'\r\n  }\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles/index.css';\r\nimport './styles/grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordScore: props.lastWordScore,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.setSelectedCells = this.setSelectedCells.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n  }\r\n  startNewGame() {\r\n    this.setState({\r\n      newGame: true,\r\n      minutes: 5,\r\n      multiplier: 1,\r\n      score: 0,\r\n      lastWordScore: 0,\r\n      word: []\r\n    })\r\n    this.resetSelectedCells()\r\n    window.location.hash = ''\r\n  }\r\n  quitGame() {\r\n    window.alert('Your Score is : ' + this.state.score)\r\n    this.setState({\r\n      newGame: false\r\n    })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n  }\r\n  hasStartedNewGame() {\r\n    if (this.state.newGame) {\r\n      return true;\r\n    } else {\r\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\r\n      return false;\r\n    }\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({\r\n        word: word\r\n      })\r\n      cell.classList.toggle('selected')\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    cell.classList.add('selected')\r\n    this.setState({\r\n      word: word\r\n    })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n        word.length--\r\n        this.setState({\r\n          word: word\r\n        })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({\r\n      word: []\r\n    })\r\n  }\r\n  updateMultiplier(newWordScore) {\r\n    if (this.state.lastWordScore > 1) {\r\n      let lastWordScore = this.state.lastWordScore\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordScore > lastWordScore) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordScore < lastWordScore && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({\r\n        multiplier: multiplier\r\n      })\r\n    }\r\n  }\r\n  updateScore(wordScore) {\r\n    let score = this.state.score\r\n    score += (wordScore * this.state.multiplier)\r\n    this.updateMultiplier(wordScore)\r\n    this.setState({\r\n      score: score,\r\n      lastWordScore: wordScore\r\n    })\r\n  }\r\n  setSelectedCells() {\r\n    this.state.word.forEach(x => {\r\n      let cell = document.querySelector(`[cell=\"${x.cell}\"]`)\r\n      cell.classList.add('selected')\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n    selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({\r\n          rows: this.randomLetters()\r\n        })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n        .finally(function () {\r\n          this.saveGameProgress('save')\r\n        }.bind(this));\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500);\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText);\r\n    this.setState({\r\n      size: gridSize\r\n    })\r\n    setTimeout(() => {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({\r\n      minutes: parseInt(e.target.innerText)\r\n    })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n    }\r\n    // if (window.localStorage.getItem('game') && window.confirm('Resume Last Game?')) {\r\n    if (window.localStorage.getItem('game')) {\r\n      // resume last game\r\n      const lastGame = window.localStorage.getItem('game')\r\n      let parsedLastGame = JSON.parse(lastGame)\r\n      this.setState(parsedLastGame)\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', parsedLastGame.size)\r\n      gridContainers[0].setAttribute('size', parsedLastGame.size)\r\n      gridSidebars[0].setAttribute('size', parsedLastGame.size)\r\n\r\n      setTimeout(() => {\r\n        this.setSelectedCells()\r\n      }, 10);\r\n    // } else {\r\n    //   // clear last game and initialize new game\r\n    //   if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    //   window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"grid-flex\">\r\n              <GridNew\r\n                size={this.state.size}\r\n                rows={this.state.rows}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                minutes={this.state.minutes}\r\n                newGame={this.state.newGame}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Play\r\n          newGame={this.state.newGame}\r\n          startNewGame={this.startNewGame}\r\n          size={this.state.size}\r\n          minutes={this.state.minutes}\r\n          handleGridSizeClick={this.handleGridSizeClick}\r\n          handleMinuteClick={this.handleMinuteClick} />\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordScore: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}