{"version":3,"sources":["config.js","spellcheck.js","components/Cell.js","components/Row.js","components/Grid.js","components/Score.js","components/Selection.js","components/Sidebar.js","components/Play.js","components/Player.js","components/Help.js","App.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Cell","react_default","a","createElement","className","this","props","cell","cellName","onClick","handleCellClick","letter","charAt","React","Component","defaultProps","Row","rowLetters","i","size","components_Cell","key","toString","rowNumber","letters","Grid","rows","components_Row","Score","output","score","length","id","Selection","word","Sidebar","location","hash","timer","playOrQuit","playOrQuitText","minutes","newGame","quitGame","openPlayModal","bind","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","Play","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","gridSizes","forEach","x","handleGridSizeClick","timerMinutes","handleMinuteClick","style","background","spacedTypo","data-size","marginTop","objectSpread","textCenter","saveButton","startNewGame","letterSpacing","wordSpacing","textTransform","margin","fontWeight","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","href","aria-label","saveProfile","kbd","customLink","Help","target","rel","App","lastWordScore","cellToggle","shuffle","shuffleAll","assertThisInitialized","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","resetSelectedCells","shuffleCells","setState","alert","confirm","chars","toConsumableArray","Array","parseInt","map","Math","floor","random","join","e","getAttribute","filter","classList","toggle","innerHTML","add","document","querySelectorAll","remove","newWordScore","multiplierEl","getElementsByClassName","wordScore","selectedCells","toLowerCase","get","then","response","undefined","data","corrections","getElementById","catch","finally","_this3","JSON","stringify","_this4","innerText","keyCode","preventDefault","addEventListener","generate","lastGame","parse","components_Score","components_Selection","components_Grid","components_Sidebar","components_Play","components_Player","components_Help","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15b27c87.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\r\n\r\nclass Cell extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={(this.props.className) ? \"cell \" + this.props.className : \"cell\"}\r\n        cell={this.props.cellName}\r\n        onClick={this.props.handleCellClick}\r\n      >\r\n        {this.props.letter.charAt(0)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCell.defaultProps = {\r\n  letter: 'T'\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Row extends React.Component {\r\n  render() {\r\n    let rowLetters = [];\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rowLetters[i] = <Cell\r\n        key={i.toString()}\r\n        cellName={'c' + ((this.props.rowNumber * this.props.size) + i)}\r\n        letter={(this.props.letters[i]) ? this.props.letters[i] : ' '}\r\n        handleCellClick={this.props.handleCellClick} />\r\n    }\r\n    return (\r\n      <div className={(this.props.className) ? \"row \" + this.props.className : \"row\"}>\r\n        {rowLetters}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRow.defaultProps = {\r\n  size: 5,\r\n  letters: 'TAPWD'\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport Row from './Row';\r\n\r\nclass Grid extends React.Component {\r\n  render() {\r\n    let rows = []\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rows[i] = <Row\r\n        key={i.toString()}\r\n        rowNumber={i}\r\n        size={this.props.size}\r\n        letters={this.props.rows[i]}\r\n        handleCellClick={this.props.handleCellClick} />\r\n    }\r\n    return (\r\n      <div className=\"grid\">\r\n        <div className=\"rows\">\r\n          {rows}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGrid.defaultProps = {\r\n  size: 5,\r\n  rows: [\r\n    'TAP',\r\n    'WORD',\r\n    'GAME',\r\n    'BY',\r\n    'TUNJI',\r\n  ]\r\n}\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Score extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    let score = this.props.score.toString();\r\n    for (let i = 0; i < score.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />\r\n    }\r\n    return (\r\n      <div className=\"selection\">\r\n        <span className=\"selection-info\">SCORE</span>\r\n        <div className=\"selection-wrapper\">\r\n          <span id=\"score\">{output}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScore.defaultProps = {\r\n  score: 0\r\n}\r\n\r\nexport default Score\r\n\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Selection extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    for (let i = 0; i < this.props.word.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(this.props.word[i]) ? this.props.word[i] : ' '} />\r\n    }\r\n    return (\r\n      <div id=\"selection-word\" className=\"selection\">\r\n        <span className=\"selection-info\">WORD INPUT</span>\r\n        <div className=\"selection-wrapper\">\r\n          <span id=\"word\">{output}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: ''\r\n}\r\n\r\nexport default Selection\r\n\r\n","import React from 'react';\r\n\r\nclass Sidebar extends React.Component {\r\n  openPlayModal() {\r\n    window.location.hash = 'play';\r\n  }\r\n  openPlayerModal() {\r\n    window.location.hash = 'player';\r\n  }\r\n  openHelpModal() {\r\n    window.location.hash = 'help';\r\n  }\r\n  render() {\r\n    let timer;\r\n    if (this.props.minutes === 0) {\r\n      timer = <div className=\"button alt\">&infin;</div>;\r\n    } else {\r\n      timer = <div className=\"button alt\">{this.props.minutes}<span className=\"highlight\">m</span></div>;\r\n    }\r\n    let playOrQuit;\r\n    let playOrQuitText;\r\n    if (this.props.newGame) {\r\n      playOrQuitText = \"Quit\"\r\n      playOrQuit = <div className=\"button alt\" onClick={this.props.quitGame}>&times;</div>;\r\n    } else {\r\n      playOrQuitText = \"New Game\"\r\n      playOrQuit = <div className=\"button alt\" onClick={this.openPlayModal.bind(this)}>&#8227;</div>;\r\n    }\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-inner\">\r\n          <div className=\"cell tooltip\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"button alt multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Timer\">\r\n            {timer}\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Grid Size\">\r\n            <div className=\"button alt\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-inner\">\r\n          <div className=\"cell tooltip\" data-tooltip=\"Player\">\r\n            <div className=\"button alt\" onClick={this.openPlayerModal.bind(this)}>&#10033;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Help\">\r\n            <div className=\"button alt\" onClick={this.openHelpModal.bind(this)}>&#63;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip={playOrQuitText}>\r\n            {playOrQuit}\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Undo Word\">\r\n            <div className=\"button alt\" onClick={this.props.handleUndoButtonClick}>&#8630;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Submit Word\">\r\n            <div className=\"button alt\" onClick={this.props.handleSubmitButtonClick}>&#8629;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  newGame: false\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nclass Play extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes\r\n    }\r\n  }\r\n  render() {\r\n    const gridSizes = [];\r\n    [3,4,5,6,7].forEach((x,i) => {\r\n      if (x === this.props.size) {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      } else {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      }\r\n    });\r\n    const timerMinutes = [];\r\n    [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\r\n      if (x === this.props.minutes) {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      } else {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      }\r\n    });\r\n    return (\r\n      <div className=\"modal\" id=\"play\">\r\n        <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            {/* <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a> */}\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>NEW GAME</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {gridSizes}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {timerMinutes}\r\n                </div>\r\n                <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.props.startNewGame}>Start New Game</button></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 500\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false,\r\n  size: 5,\r\n  minutes: 5\r\n}\r\n\r\nexport default Play;\r\n","import React from 'react';\r\n\r\nclass Player extends React.Component {\r\n  saveProfile() {\r\n    console.log('saving profile and settings ...')\r\n    window.location.hash = ''\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"player\">\r\n        <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>PLAYER</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>PROFILE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>Username : tunjioye</div>\r\n                <div>&nbsp;</div>\r\n                <div>Highest Score : 2019</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\r\n                <div><em><small>cell reshuffle after submit</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 500\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"modal\" id=\"help\">\r\n      <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-header\">\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n          <div className=\"modal-title\">\r\n            <strong style={spacedTypo}>HELP &amp; ABOUT</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content\">\r\n            <div>\r\n              <h5 style={spacedTypo}>HOW TO PLAY</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>&bull; Select some letters to make a word</div>\r\n              <div>&bull; Click Submit Button to evaluate you Score</div>\r\n              <div>&bull; QUITING IS NOT AN OPTION!</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div><kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <small>UNDO</small></div>\r\n              <div>&nbsp;</div>\r\n              <div><kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <small>SUBMIT</small></div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>ABOUT</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\r\n              <div>&nbsp;</div>\r\n              <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\r\n              <div>&nbsp;</div>\r\n              <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst kbd = {\r\n  border: '1px solid #28F',\r\n  padding: '3px 4px 3px 6px'\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst customLink = {\r\n  color: '#FFF',\r\n  textDecoration: 'none'\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport spellcheck from './spellcheck';\r\n// import Topbar from './components/Topbar';\r\nimport Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordScore: props.lastWordScore,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n  }\r\n  startNewGame() {\r\n    this.setState({\r\n      newGame: true,\r\n      score: 0,\r\n      lastWordScore: 0,\r\n      word: []\r\n    })\r\n    window.location.hash = ''\r\n  }\r\n  quitGame() {\r\n    window.alert('Your Score is : ' + this.state.score)\r\n    this.setState({\r\n      newGame: false\r\n    })\r\n  }\r\n  hasStartedNewGame() {\r\n    if (!this.state.newGame) {\r\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\r\n      return;\r\n    }\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    this.hasStartedNewGame()\r\n    let cell = e.target\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    if (this.state.cellToggle) {\r\n      // cell toggle\r\n      if (word.filter(x => x.cell === cellName).length === 0) {\r\n        this.pushSelectionWord(cell)\r\n      } else {\r\n        this.toggleSelectionWord(e)\r\n      }\r\n    } else {\r\n      // word pop\r\n      if (word.filter(x => x.cell === cellName).length === 0) {\r\n        this.pushSelectionWord(cell)\r\n      } else if (word[word.length - 1].cell === cellName) {\r\n        this.popSelectionWord()\r\n      }\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    let cell = e.target\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n\r\n    word = word.filter(x => x.cell !== cellName)\r\n    this.setState({\r\n      word: word\r\n    })\r\n    cell.classList.toggle('selected')\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    cell.classList.add('selected')\r\n    this.setState({\r\n      word: word\r\n    })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.state.word.length > 0) {\r\n      let word = this.state.word\r\n      document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n      word.length--\r\n      this.setState({\r\n        word: word\r\n      })\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({\r\n      word: []\r\n    })\r\n  }\r\n  updateMultiplier(newWordScore) {\r\n    if (this.state.lastWordScore > 1) {\r\n      let lastWordScore = this.state.lastWordScore\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordScore > lastWordScore) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordScore < lastWordScore && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({\r\n        multiplier: multiplier\r\n      })\r\n    }\r\n  }\r\n  updateScore(wordScore) {\r\n    let score = this.state.score\r\n    score += (wordScore * this.state.multiplier)\r\n    this.updateMultiplier(wordScore)\r\n    this.setState({\r\n      score: score,\r\n      lastWordScore: wordScore\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"cell selected\"]')\r\n    selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({\r\n          rows: this.randomLetters()\r\n        })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    this.hasStartedNewGame()\r\n    if (this.state.word.length > 0) {\r\n      let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n      spellcheck.get('?text=' + word)\r\n      .then(function (response) {\r\n        let selectedCells = document.querySelectorAll('[class=\"cell selected\"]')\r\n        if (response.data.corrections[word] === undefined) {\r\n          selectedCells.forEach(x => x.classList.add('flash-success'))\r\n          setTimeout(() => {\r\n            selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n            this.updateScore(word.length)\r\n            this.clearSelectionWord()\r\n            this.resetSelectedCells()\r\n          }, 500)\r\n        } else {\r\n          document.getElementById('selection-word').classList.add('shake')\r\n          selectedCells.forEach(x => x.classList.add('flash-error'))\r\n          setTimeout(() => {\r\n            document.getElementById('selection-word').classList.remove('shake')\r\n            selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n          }, 500)\r\n        }\r\n      }.bind(this))\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n      .finally(function () {\r\n        // save game progress\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          console.log('game updated ...')\r\n        }, 500);\r\n      }.bind(this));\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    this.setState({\r\n      size: parseInt(e.target.innerText)\r\n    })\r\n    setTimeout(() => {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({\r\n      minutes: parseInt(e.target.innerText)\r\n    })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n    }\r\n    if (window.localStorage.getItem('game') && window.confirm('Continue Last Game?')) {\r\n      // continue last game\r\n      const lastGame = window.localStorage.getItem('game')\r\n      this.setState(JSON.parse(lastGame))\r\n    } else {\r\n      window.localStorage.removeItem('game')\r\n      window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Grid\r\n                size={this.state.size}\r\n                rows={this.state.rows}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                minutes={this.state.minutes}\r\n                newGame={this.state.newGame}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Play\r\n          newGame={this.state.newGame}\r\n          startNewGame={this.startNewGame}\r\n          size={this.state.size}\r\n          minutes={this.state.minutes}\r\n          handleGridSizeClick={this.handleGridSizeClick}\r\n          handleMinuteClick={this.handleMinuteClick} />\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordScore: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}