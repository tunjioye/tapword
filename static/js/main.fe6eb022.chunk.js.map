{"version":3,"sources":["config.js","spellcheck.js","components/Loading/Loading.jsx","components/Loading/index.js","components/CellNew.js","components/RowNew.js","components/GridNew.js","components/Cell.js","components/Score.js","components/Selection.js","components/Sidebar.js","components/Play.js","components/Player.js","components/Help.js","App.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Loading","props","react_default","a","createElement","className","large","defaultProps","CellNew","this","cell","cellName","onClick","handleCellClick","letter","charAt","React","Component","RowNew","rowLetters","i","size","components_CellNew","key","toString","rowNumber","letters","Fragment","GridNew","rows","components_RowNew","Cell","style","Score","output","score","length","components_Cell","id","Selection","word","height","Sidebar","location","hash","timer","minutes","playOrQuitText","playOrQuitAction","openPlayModal","bind","playOrQuit","newGame","quitGame","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","Play","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","gridSizes","forEach","x","handleGridSizeClick","timerMinutes","handleMinuteClick","background","spacedTypo","data-size","marginTop","objectSpread","textCenter","saveButton","startNewGame","letterSpacing","wordSpacing","textTransform","margin","fontWeight","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","href","aria-label","saveProfile","kbd","customLink","dl","dt","width","display","dd","Help","target","rel","react_github_btn","data-icon","App","lastWordScore","cellToggle","shuffle","shuffleAll","assertThisInitialized","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","setSelectedCells","resetSelectedCells","shuffleCells","saveGameProgress","setState","alert","confirm","chars","toConsumableArray","Array","parseInt","map","Math","floor","random","join","e","getAttribute","filter","classList","toggle","innerHTML","add","document","querySelectorAll","remove","newWordScore","multiplierEl","getElementsByClassName","wordScore","querySelector","concat","selectedCells","toLowerCase","get","then","response","undefined","data","corrections","getElementById","catch","finally","_this3","savingProgress","JSON","stringify","_this4","gridSize","innerText","gridNews","gridContainers","gridSidebars","setAttribute","keyCode","preventDefault","_this5","addEventListener","generate","lastGame","parsedLastGame","parse","components_Loading","components_Score","components_Selection","minHeight","maxHeight","components_GridNew","components_Sidebar","components_Play","components_Player","components_Help","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe6eb022.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.scss';\n\nconst Loading = (props) => (\n  <div className={(props.large ? 'loading' : 'loading loading-lg')}></div>\n);\n\nLoading.propTypes = {\n  large: PropTypes.bool\n};\n\nLoading.defaultProps = {\n  large: false\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react';\r\n\r\nclass CellNew extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={(this.props.className) ? \"cell-new \" + this.props.className : \"cell-new\"}\r\n        cell={this.props.cellName}\r\n        onClick={this.props.handleCellClick}\r\n      >\r\n        {this.props.letter.charAt(0)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCellNew.defaultProps = {\r\n  letter: 'T'\r\n}\r\n\r\nexport default CellNew\r\n","import React from 'react';\r\nimport CellNew from './CellNew';\r\n\r\nclass RowNew extends React.Component {\r\n  render() {\r\n    let rowLetters = [];\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rowLetters[i] = <CellNew\r\n        key={i.toString()}\r\n        cellName={'c' + ((this.props.rowNumber * this.props.size) + i)}\r\n        letter={(this.props.letters[i]) ? this.props.letters[i] : ' '}\r\n        handleCellClick={this.props.handleCellClick} />\r\n    }\r\n    return (\r\n      <>\r\n        {rowLetters}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRowNew.defaultProps = {\r\n  size: 5,\r\n  letters: 'TAPWD'\r\n}\r\n\r\nexport default RowNew;\r\n","import React from 'react';\r\nimport RowNew from './RowNew';\r\n\r\nclass GridNew extends React.Component {\r\n  render() {\r\n    let rows = []\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rows[i] = <RowNew\r\n        key={i.toString()}\r\n        rowNumber={i}\r\n        size={this.props.size}\r\n        letters={this.props.rows[i]}\r\n        handleCellClick={this.props.handleCellClick} />\r\n    }\r\n    return (\r\n      <div className=\"grid-new\">\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGridNew.defaultProps = {\r\n  size: 5,\r\n  rows: [\r\n    'TAP',\r\n    'WORD',\r\n    'GAME',\r\n    'BY',\r\n    'TUNJI',\r\n  ]\r\n}\r\n\r\nexport default GridNew;\r\n","import React from 'react';\r\n\r\nclass Cell extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={(this.props.className) ? \"cell \" + this.props.className : \"cell\"}\r\n        style={(this.props.style) ? this.props.style : {}}\r\n        cell={this.props.cellName}\r\n        onClick={this.props.handleCellClick}\r\n      >\r\n        {this.props.letter.charAt(0)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCell.defaultProps = {\r\n  letter: 'T'\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Score extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    let score = this.props.score.toString();\r\n    for (let i = 0; i < score.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />\r\n    }\r\n    return (\r\n      <div className=\"selection\">\r\n        <span className=\"selection-info\">SCORE</span>\r\n        <div className=\"selection-wrapper\">\r\n          <span id=\"score\">{output}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScore.defaultProps = {\r\n  score: 0\r\n}\r\n\r\nexport default Score\r\n\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Selection extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    for (let i = 0; i < this.props.word.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(this.props.word[i]) ? this.props.word[i] : ' '} />\r\n    }\r\n    return (\r\n      <div id=\"selection-word\" className=\"selection\">\r\n        <span className=\"selection-info\">WORD INPUT</span>\r\n        <div className=\"selection-wrapper\">\r\n          <span id=\"word\">\r\n            {/* important spacing fix via style */}\r\n            <Cell letter='  ' style={{ height: '64px' }} />\r\n            {output}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: ''\r\n}\r\n\r\nexport default Selection\r\n\r\n","import React from 'react';\r\n\r\nclass Sidebar extends React.Component {\r\n  openPlayModal() {\r\n    window.location.hash = 'play';\r\n  }\r\n  openPlayerModal() {\r\n    window.location.hash = 'player';\r\n  }\r\n  openHelpModal() {\r\n    window.location.hash = 'help';\r\n  }\r\n  render() {\r\n    let timer = <div className=\"timer\">{this.props.minutes}<span className=\"highlight\">m</span></div>;\r\n    if (this.props.minutes === 0) {\r\n      timer = <div className=\"timer\">&infin;</div>;\r\n    }\r\n\r\n    let playOrQuitText = \"New Game\"\r\n    let playOrQuitAction = this.openPlayModal.bind(this)\r\n    let playOrQuit = <div>&#8227;</div>;\r\n    if (this.props.newGame) {\r\n      playOrQuitText = \"Quit\"\r\n      playOrQuitAction = this.props.quitGame\r\n      playOrQuit = <div>&times;</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"grid-sidebar\">\r\n        <div className=\"grid-gameplay sidebar-inner sidebar-inner-gameplay\">\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Timer\">\r\n            {timer}\r\n          </div>\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Grid Size\">\r\n            <div className=\"grid-size\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n          <div className=\"cell-new\"></div>\r\n          <div className=\"cell-new\"></div>\r\n        </div>\r\n        <div className=\"grid-actions sidebar-inner sidebar-inner-actions\">\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Player\" onClick={this.openPlayerModal.bind(this)}>\r\n            <div>&#10033;</div>\r\n          </div>\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Help\" onClick={this.openHelpModal.bind(this)}>\r\n            <div>&#63;</div>\r\n          </div>\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip={playOrQuitText} onClick={playOrQuitAction}>\r\n            {playOrQuit}\r\n          </div>\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Undo Word\" onClick={this.props.handleUndoButtonClick}>\r\n            <div>&#8592;</div>\r\n          </div>\r\n          <div className=\"cell-new tooltip button alt\" data-tooltip=\"Submit Word\" onClick={this.props.handleSubmitButtonClick}>\r\n            <div>&#8629;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  newGame: false\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nclass Play extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes\r\n    }\r\n  }\r\n  render() {\r\n    const gridSizes = [];\r\n    [3,4,5,6,7].forEach((x,i) => {\r\n      if (x === this.props.size) {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      } else {\r\n        gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={this.props.handleGridSizeClick}>{x}</div>\r\n      }\r\n    });\r\n    const timerMinutes = [];\r\n    [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\r\n      if (x === this.props.minutes) {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      } else {\r\n        timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={this.props.handleMinuteClick}>{x}</div>\r\n      }\r\n    });\r\n    return (\r\n      <div className=\"modal\" id=\"play\">\r\n        <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            {/* <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a> */}\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>NEW GAME</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {gridSizes}\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div className=\"grid-box-container\" data-size={this.props.size}>\r\n                  {timerMinutes}\r\n                </div>\r\n                <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\r\n                <div style={{ marginTop: '.4rem' }}><em><small>TIMER MODE coming soon ...</small></em></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.props.startNewGame}>Start New Game</button></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false,\r\n  size: 5,\r\n  minutes: 5\r\n}\r\n\r\nexport default Play;\r\n","import React from 'react';\r\n\r\nclass Player extends React.Component {\r\n  saveProfile() {\r\n    console.log('saving profile and settings ...')\r\n    window.location.hash = ''\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"player\">\r\n        <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>PLAYER</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>PROFILE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>Username : tunjioye</div>\r\n                <div>&nbsp;</div>\r\n                <div>Highest Score : 2019</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\r\n                <div><em><small>cell reshuffle after submit</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport GitHubButton from 'react-github-btn';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"modal\" id=\"help\">\r\n      <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-header\">\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n          <div className=\"modal-title\">\r\n            <strong style={spacedTypo}>HELP &amp; ABOUT</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content\">\r\n            <div>\r\n              <h5 style={spacedTypo}>HOW TO PLAY</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>&bull; Select some letters to make a word</div>\r\n              <div>&bull; Click Submit Button to evaluate your Score</div>\r\n              <div>&bull; QUITING IS NOT AN OPTION!</div>\r\n              <div>&bull; <em>How to Play Tutorial coming soon ...</em></div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <dl style={{ ...dl }}>\r\n                <dt style={{ ...dl.dt }}>\r\n                  <small>UNDO</small>\r\n                </dt>\r\n                <dd style={{ ...dl.dd }}>\r\n                  <kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd>\r\n                  <br />\r\n                </dd>\r\n                <dt style={{ ...dl.dt }}>\r\n                <small>SUBMIT</small>\r\n                </dt>\r\n                <dd style={{ ...dl.dd }}>\r\n                  <kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd>\r\n                  <br />\r\n                </dd>\r\n              </dl>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>ABOUT</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\r\n              <div>&nbsp;</div>\r\n              <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\r\n              <div>&nbsp;</div>\r\n              <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\r\n            <br />\r\n            <div style={{ ...textCenter }}>\r\n              <GitHubButton\r\n                href=\"https://github.com/tunjioye/tapword\"\r\n                data-icon=\"octicon-star\"\r\n                aria-label=\"Star tunjioye/tapword on GitHub\">Star</GitHubButton>\r\n              <span style={{ padding: '0 5px' }}></span>\r\n              <GitHubButton\r\n                href=\"https://github.com/tunjioye/tapword/fork\"\r\n                data-icon=\"octicon-repo-forked\"\r\n                aria-label=\"Fork tunjioye/tapword on GitHub\">Fork</GitHubButton>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst kbd = {\r\n  border: '1px solid #28F',\r\n  padding: '3px 4px 3px 6px'\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst customLink = {\r\n  color: '#FFF',\r\n  textDecoration: 'none'\r\n}\r\n\r\nconst dl = {\r\n  margin: '0 auto',\r\n  dt: {\r\n    width: '80px',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    margin: '5px auto'\r\n  },\r\n  dd: {\r\n    display: 'inline'\r\n  }\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './index.css';\r\nimport './index.scss';\r\nimport './grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordScore: props.lastWordScore,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.setSelectedCells = this.setSelectedCells.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n  }\r\n  startNewGame() {\r\n    this.setState({\r\n      newGame: true,\r\n      minutes: 5,\r\n      multiplier: 1,\r\n      score: 0,\r\n      lastWordScore: 0,\r\n      word: []\r\n    })\r\n    this.resetSelectedCells()\r\n    window.location.hash = ''\r\n  }\r\n  quitGame() {\r\n    window.alert('Your Score is : ' + this.state.score)\r\n    this.setState({\r\n      newGame: false\r\n    })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n  }\r\n  hasStartedNewGame() {\r\n    if (this.state.newGame) {\r\n      return true;\r\n    } else {\r\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\r\n      return false;\r\n    }\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({\r\n        word: word\r\n      })\r\n      cell.classList.toggle('selected')\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    cell.classList.add('selected')\r\n    this.setState({\r\n      word: word\r\n    })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n        word.length--\r\n        this.setState({\r\n          word: word\r\n        })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({\r\n      word: []\r\n    })\r\n  }\r\n  updateMultiplier(newWordScore) {\r\n    if (this.state.lastWordScore > 1) {\r\n      let lastWordScore = this.state.lastWordScore\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordScore > lastWordScore) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordScore < lastWordScore && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({\r\n        multiplier: multiplier\r\n      })\r\n    }\r\n  }\r\n  updateScore(wordScore) {\r\n    let score = this.state.score\r\n    score += (wordScore * this.state.multiplier)\r\n    this.updateMultiplier(wordScore)\r\n    this.setState({\r\n      score: score,\r\n      lastWordScore: wordScore\r\n    })\r\n  }\r\n  setSelectedCells() {\r\n    this.state.word.forEach(x => {\r\n      let cell = document.querySelector(`[cell=\"${x.cell}\"]`)\r\n      cell.classList.add('selected')\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"cell-new selected\"]')\r\n    selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({\r\n          rows: this.randomLetters()\r\n        })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"cell-new selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n        .finally(function () {\r\n          this.saveGameProgress('save')\r\n        }.bind(this));\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500);\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText);\r\n    this.setState({\r\n      size: gridSize\r\n    })\r\n    setTimeout(() => {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({\r\n      minutes: parseInt(e.target.innerText)\r\n    })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n    }\r\n    // if (window.localStorage.getItem('game') && window.confirm('Resume Last Game?')) {\r\n    if (window.localStorage.getItem('game')) {\r\n      // resume last game\r\n      const lastGame = window.localStorage.getItem('game')\r\n      let parsedLastGame = JSON.parse(lastGame)\r\n      this.setState(parsedLastGame)\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', parsedLastGame.size)\r\n      gridContainers[0].setAttribute('size', parsedLastGame.size)\r\n      gridSidebars[0].setAttribute('size', parsedLastGame.size)\r\n\r\n      setTimeout(() => {\r\n        this.setSelectedCells()\r\n      }, 10);\r\n    // } else {\r\n    //   // clear last game and initialize new game\r\n    //   if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    //   window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"saving-progress d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"flex-centered\">\r\n              <div className=\"grid-container\">\r\n                <GridNew\r\n                  size={this.state.size}\r\n                  rows={this.state.rows}\r\n                  handleCellClick={this.handleCellClick} />\r\n              </div>\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                minutes={this.state.minutes}\r\n                newGame={this.state.newGame}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Play\r\n          newGame={this.state.newGame}\r\n          startNewGame={this.startNewGame}\r\n          size={this.state.size}\r\n          minutes={this.state.minutes}\r\n          handleGridSizeClick={this.handleGridSizeClick}\r\n          handleMinuteClick={this.handleMinuteClick} />\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordScore: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}