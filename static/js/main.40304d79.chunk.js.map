{"version":3,"sources":["config.js","spellcheck.js","components/Loading/Loading.jsx","components/Loading/index.js","components/Popover/Popover.jsx","components/Popover/index.js","components/GridCell/GridCell.jsx","components/GridCell/index.js","components/GridRow/GridRow.jsx","components/GridRow/index.js","components/GridNew/GridNew.jsx","components/GridNew/index.js","components/SelectionCell/SelectionCell.jsx","components/SelectionCell/index.js","components/Score/Score.jsx","components/Score/index.js","components/Selection/Selection.jsx","components/Selection/index.js","components/Countdown/Countdown.jsx","components/Countdown/index.js","components/Sidebar/Sidebar.jsx","components/Sidebar/index.js","components/Modal/Modal.jsx","components/Modal/index.js","components/Play/Play.jsx","components/Play/index.js","components/Player/Player.jsx","components/Player/index.js","components/Help/Help.jsx","components/Help/index.js","App.js","Tutorial.js","Game.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","lastReqUrl","arguments","Promise","reject","setItem","setTimeout","error","Loading","props","className","large","defaultProps","Popover","children","GridCell","cell","cellNumber","cellInfo","wordCells","indexOf","row","rowName","onClick","handleCellClick","letter","charAt","clickThis","GridRow","rowLetters","i","size","key","toString","rowNumber","letters","GridNew","rows","SelectionCell","style","Score","output","score","length","id","Selection","word","height","Countdown","state","time","seconds","minutes","timer","secondsToTime","bind","calculateTimeLeft","startTimer","stopTimer","countDown","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","this","setState","setInterval","clearInterval","setMinutes","parseFloat","toFixed","saveGameProgress","quitGame","newGame","nextProps","m","s","React","Component","Sidebar","location","hash","parseInt","nextTutorialStep","timerText","playOrQuitText","playOrQuitAction","openPlayModal","playOrQuit","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","Modal","transparent","canClose","title","footer","href","aria-label","background","spacedTypo","letterSpacing","wordSpacing","textTransform","margin","fontWeight","Play","handleGridSizeClick","handleMinuteClick","startNewGame","gridSizes","forEach","x","timerMinutes","textCenter","saveButton","data-size","marginTop","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","saveProfile","kbd","customLink","dl","dt","width","display","dd","Help","quickTutorial","target","rel","data-icon","App","lastWordLength","cellToggle","shuffle","shuffleAll","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","setSelectedCells","resetSelectedCells","shuffleCells","quitMessage","alert","confirm","chars","Array","map","random","join","e","cellName","getAttribute","filter","innerHTML","newWordLength","multiplierEl","document","getElementsByClassName","classList","add","remove","wordLength","querySelector","selectedCells","querySelectorAll","toLowerCase","get","then","response","undefined","data","corrections","getElementById","catch","errorMessage","message","savingProgress","JSON","stringify","gridSize","innerText","gridNews","gridContainers","gridSidebars","setAttribute","keyCode","preventDefault","addEventListener","generate","lastGame","parsedLastGame","parse","minHeight","maxHeight","Tutorial","tutorialSteps","currentStep","endTutorial","Game","tutorial","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40304d79.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\nimport config from './config';\n\nconst spellcheck = axios.create({\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\n  headers: {\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\n  }\n});\n\nfunction removeLastWordRequest() {\n  if (window.localStorage.getItem('last_word_request')) {\n    window.localStorage.removeItem('last_word_request');\n  }\n}\nremoveLastWordRequest();\n\n// spellcheck request interceptor\nspellcheck.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  if (window.localStorage.getItem('last_word_request')) {\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\n    if (lastReqUrl === arguments[0]['url']) {\n      return Promise.reject(false);\n    }\n  }\n\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\n\n  // remove last word request after 5 seconds\n  setTimeout(() => {\n    removeLastWordRequest();\n  }, 5000);\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\n\nexport default spellcheck;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.scss';\n\nconst Loading = (props) => (\n  <div className={(props.large ? 'loading' : 'loading loading-lg')}></div>\n);\n\nLoading.propTypes = {\n  large: PropTypes.bool\n};\n\nLoading.defaultProps = {\n  large: false\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Popover.scss'\n\nconst Popover = ({ children, className }) => (\n  <div className={`popover ${className}`}>\n    { children }\n    <div className=\"popover-container\"></div>\n  </div>\n)\n\nPopover.propTypes = {\n  children: PropTypes.node\n}\n\nPopover.defaultProps = {\n  children: '...'\n}\n\nexport default Popover\n","import Popover from './Popover'\n\nexport default Popover\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridCell.scss'\nimport Popover from './../Popover'\n\nconst GridCell = (props) => {\n  const cell = `c${props.cellNumber}`\n\n  const cellInfo = (\n    <div\n      className={`grid-cell ${(props.wordCells.indexOf(cell) !== -1) ? \"selected\" : \"\"}`}\n      row={props.rowName}\n      cell={cell}\n      onClick={props.handleCellClick}\n    >\n      {props.letter.charAt(0)}\n    </div>\n  )\n\n  // For Tutorial : show Click This Popover for expected Grid Cell\n  if (props.clickThis && props.clickThis === props.cellNumber) {\n    return (\n      <Popover className=\"click-this\">\n        { cellInfo }\n      </Popover>\n    )\n  }\n\n  return (cellInfo)\n}\n\nGridCell.propTypes = {\n  letter: PropTypes.string,\n  rowName: PropTypes.string,\n  cellNumber: PropTypes.number,\n  wordCells: PropTypes.array,\n  handleCellClick: PropTypes.func\n}\n\nGridCell.defaultProps = {\n  letter: 'T',\n  rowName: 'r0',\n  cellNumber: 0,\n  wordCells: []\n}\n\nexport default GridCell\n","import GridCell from './GridCell'\n\nexport default GridCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridRow.scss'\nimport GridCell from '../GridCell'\n\nconst GridRow = (props) => {\n  let rowLetters = []\n  for (let i = 0; i < props.size; i++) {\n    rowLetters[i] = (\n      <GridCell\n        key={i.toString()}\n        rowName={`r${props.rowNumber}`}\n        cellNumber={((props.rowNumber * props.size) + i)}\n        letter={(props.letters[i]) ? props.letters[i] : ' '}\n        clickThis={props.clickThis}\n        wordCells={props.wordCells}\n        handleCellClick={props.handleCellClick}\n      />\n    )\n  }\n  return (\n    <>\n      {rowLetters}\n    </>\n  )\n}\n\nGridRow.propTypes = {\n  size: PropTypes.number,\n  rowNumber: PropTypes.number,\n  letters: PropTypes.string,\n  wordCells: PropTypes.array,\n  handleCellClick: PropTypes.func\n}\n\nGridRow.defaultProps = {\n  size: 5,\n  rowNumber: 0,\n  letters: 'TAPWD',\n  wordCells: []\n}\n\nexport default GridRow\n","import GridRow from './GridRow'\n\nexport default GridRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './GridNew.scss'\nimport GridRow from '../GridRow'\n\nconst GridNew = (props) => {\n  let rows = []\n  for (let i = 0; i < props.size; i++) {\n    rows[i] = (\n      <GridRow\n        key={i.toString()}\n        rowNumber={i}\n        size={props.size}\n        letters={props.rows[i]}\n        clickThis={props.clickThis}\n        wordCells={props.wordCells}\n        handleCellClick={props.handleCellClick}\n      />\n    )\n  }\n\n  return (\n    <div className=\"grid-container\">\n      <div className=\"grid-new\">\n        {rows}\n      </div>\n    </div>\n  )\n}\n\nGridNew.propTypes = {\n  size: PropTypes.number,\n  rows: PropTypes.array,\n  wordCells: PropTypes.array,\n  handleCellClick: PropTypes.func\n}\n\nGridNew.defaultProps = {\n  size: 5,\n  rows: [\n    'TAP',\n    'WORD',\n    'GAME',\n    'BY',\n    'TUNJI',\n  ],\n  wordCells: []\n}\n\nexport default GridNew\n","import GridNew from './GridNew'\n\nexport default GridNew\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './SelectionCell.scss'\n\nconst SelectionCell = (props) => (\n  <div className=\"selection-cell\" style={{ ...props.style }}>\n    {props.letter.charAt(0)}\n  </div>\n)\n\nSelectionCell.propTypes = {\n  letter: PropTypes.string\n}\n\nSelectionCell.defaultProps = {\n  letter: 'T'\n}\n\nexport default SelectionCell\n","import SelectionCell from './SelectionCell'\n\nexport default SelectionCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './../Selection/Selection.scss'\nimport './Score.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Score = (props) => {\n  let output = []\n  let score = props.score.toString()\n  for (let i = 0; i < score.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />)\n  }\n\n  return (\n    <div className=\"selection\">\n      <span className=\"selection-info\">SCORE</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"score\">{output}</span>\n      </div>\n    </div>\n  )\n}\n\nScore.propTypes = {\n  score: PropTypes.number\n}\n\nScore.defaultProps = {\n  score: 0\n}\n\nexport default Score\n","import Score from './Score'\n\nexport default Score\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Selection.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Selection = (props) => {\n  let output = []\n  for (let i = 0; i < props.word.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(props.word[i]) ? props.word[i] : ' '} />)\n  }\n\n  return (\n    // #selection-word is important for the shake animation\n    <div id=\"selection-word\" className=\"selection\">\n      <span className=\"selection-info\">WORD INPUT</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"word\">\n          {/* important spacing fix via style */}\n          <SelectionCell letter=' ' style={{ height: '64px' }} />\n          {output}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nSelection.propTypes = {\n  word: PropTypes.array\n}\n\nSelection.defaultProps = {\n  word: []\n}\n\nexport default Selection\n","import Selection from './Selection'\n\nexport default Selection\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Countdown.scss'\n// import CountdownCircle from './../CountdownCircle'\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      time: {},\n      seconds: this.props.minutes * 60\n    }\n\n    this.timer = 0\n    this.secondsToTime = this.secondsToTime.bind(this)\n    this.calculateTimeLeft = this.calculateTimeLeft.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.stopTimer = this.stopTimer.bind(this)\n    this.countDown = this.countDown.bind(this)\n  }\n\n  secondsToTime(secs){\n    let divisor_for_minutes = secs % (60 * 60)\n    let minutes = Math.floor(divisor_for_minutes / 60)\n\n    let divisor_for_seconds = divisor_for_minutes % 60\n    let seconds = Math.ceil(divisor_for_seconds)\n\n    let obj = {\n      \"m\": minutes,\n      \"s\": seconds\n    }\n\n    return obj\n  }\n\n  calculateTimeLeft() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds)\n    this.setState({ time: timeLeftVar })\n  }\n\n  startTimer() {\n    if (this.timer === 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000)\n    }\n  }\n\n  stopTimer() {\n    clearInterval(this.timer)\n    this.timer = 0 // reset to 0 !important\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = (this.state.seconds - 1 > 0) ? this.state.seconds - 1 : 0\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    })\n\n    if (seconds > 0) {\n      // set Game / App Minutes & save Game Progress\n      this.props.setMinutes(parseFloat(seconds / 60).toFixed(3))\n      setTimeout(() => {\n        this.props.saveGameProgress('save')\n      }, 1000)\n    } else {\n      // stop timer\n      this.stopTimer()\n      // Quit Game with a Time Up\n      this.props.quitGame('TIME UP!')\n    }\n  }\n\n  componentDidMount() {\n    this.calculateTimeLeft()\n    if (this.props.newGame) this.startTimer()\n    if (!this.props.newGame) this.stopTimer()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) {\n      setTimeout(() => {\n        this.setState({ seconds: nextProps.minutes * 60 })\n        if (nextProps.newGame) this.startTimer()\n        if (!nextProps.newGame) this.stopTimer()\n      }, 10)\n    }\n  }\n\n  render() {\n    // const { minutes } = this.props\n    const { m, s } = this.state.time\n    // const minutesRadius = mapNumber(m, minutes, 0, 0, 359.9)\n    // const secondsRadius = mapNumber(s, 60, 0, 0, 359.9)\n\n    return (\n      <div>\n        {/* <h1>Countdown</h1> */}\n        <div className='countdown-wrapper'>\n          <div className='countdown-item'>\n            {/* Disabled for now because it seems hard to make responsive */}\n            {/* <CountdownCircle radius={(m === 0) ? secondsRadius : minutesRadius} /> */}\n            {(m === 0) ? s : m}\n            <span className=\"highlight\">{(m === 0) ? 's' : 'm'}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// // Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\n// function mapNumber(number, in_min, in_max, out_min, out_max) {\n//   return (out_max - ((number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min)).toFixed(1)\n// }\n\nCountdown.propTypes = {\n  minutes: PropTypes.number,\n  newGame: PropTypes.bool,\n  setMinutes: PropTypes.func,\n  saveGameProgress: PropTypes.func,\n  quitGame: PropTypes.func\n}\n\nCountdown.defaultProps = {\n  minutes: 2\n}\n\nexport default Countdown\n","import Countdown from './Countdown'\n\nexport default Countdown\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Sidebar.scss'\nimport Countdown from './../Countdown'\nimport Popover from './../Popover'\n\nclass Sidebar extends React.Component {\n  openPlayModal() {\n    window.location.hash = ''\n    window.location.hash = 'play'\n    // set App Minutes\n    this.props.setMinutes(parseInt(this.props.minutes))\n    // For Tutorial\n    if (this.props.clickThis && this.props.clickThis === \"play\") {\n      this.props.nextTutorialStep()\n    }\n  }\n\n  openPlayerModal() {\n    window.location.hash = ''\n    window.location.hash = 'player'\n  }\n\n  openHelpModal() {\n    window.location.hash = ''\n    window.location.hash = 'help'\n  }\n\n  render() {\n    let timerText = \"Timer\"\n    // let timer = (<div className=\"timer\">{this.props.minutes}<span className=\"highlight\">m</span></div>)\n    let timer = (\n      <div className=\"timer\">\n        <Countdown\n          minutes={parseFloat(this.props.minutes)}\n          newGame={this.props.newGame}\n          setMinutes={this.props.setMinutes}\n          saveGameProgress={this.props.saveGameProgress}\n          quitGame={this.props.quitGame} />\n        {/* <span className=\"highlight\">m</span> */}\n      </div>\n    )\n    if (this.props.minutes === 0) {\n      timerText = \"Endless\"\n      timer = (<div className=\"timer\">&infin;</div>)\n    }\n\n    let playOrQuitText = \"New Game\"\n    let playOrQuitAction = this.openPlayModal.bind(this)\n    let playOrQuit = (<div>&#8227;</div>)\n    if (this.props.newGame) {\n      playOrQuitText = \"Quit\"\n      playOrQuitAction = this.props.quitGame\n      playOrQuit = (<div>&times;</div>)\n    }\n\n    return (\n      <div className=\"grid-sidebar\">\n        <div className=\"grid-gameplay sidebar-inner sidebar-inner-gameplay\">\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Score Multiplier\">\n            <div className=\"multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={timerText}>\n            {timer}\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Grid Size\">\n            <div className=\"grid-size\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\n          </div>\n          <div className=\"grid-cell\"></div>\n          <div className=\"grid-cell\"></div>\n        </div>\n        <div className=\"grid-actions sidebar-inner sidebar-inner-actions\">\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Player\" onClick={this.openPlayerModal.bind(this)}>\n            <div>&#10033;</div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Help\" onClick={this.openHelpModal.bind(this)}>\n            <div>&#63;</div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={playOrQuitText} onClick={playOrQuitAction}>\n            {this.props.clickThis === \"play\" || this.props.clickThis === \"quit\"\n              ? (\n                <Popover className=\"click-this\">\n                  { playOrQuit }\n                </Popover>\n              )\n              : playOrQuit\n            }\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Undo Word\" onClick={this.props.handleUndoButtonClick}>\n            <div>&#8592;</div>\n          </div>\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Submit Word\" onClick={this.props.handleSubmitButtonClick}>\n            {this.props.clickThis === \"submit\"\n              ? (\n                <Popover className=\"click-this\">\n                  <div>&#8629;</div>\n                </Popover>\n              )\n              : <div>&#8629;</div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSidebar.propTypes = {\n  size: PropTypes.number,\n  minutes: PropTypes.number,\n  multiplier: PropTypes.number,\n  newGame: PropTypes.bool,\n  setMinutes: PropTypes.func,\n  saveGameProgress: PropTypes.func,\n  quitGame: PropTypes.func,\n  handleUndoButtonClick: PropTypes.func,\n  handleSubmitButtonClick: PropTypes.func,\n  nextTutorialStep: PropTypes.func\n}\n\nSidebar.defaultProps = {\n  size: 5,\n  minutes: 5,\n  multiplier: 1,\n  newGame: false\n}\n\nexport default Sidebar\n","import Sidebar from './Sidebar'\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Modal.scss'\n\nconst Modal = ({ id, transparent, canClose, title, children, footer }) => (\n  <div className=\"modal\" id={id}>\n    {!transparent\n      ? <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\n      : <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\n    }\n    <div className=\"modal-container\">\n      <div className=\"modal-header\">\n        {canClose &&\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\n        }\n        <div className=\"modal-title\">\n          <strong style={spacedTypo}>{ title }</strong>\n        </div>\n      </div>\n      <div className=\"modal-body\">\n        <div className=\"content\">\n          { children }\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        { footer }\n      </div>\n    </div>\n  </div>\n)\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n  footer: PropTypes.node,\n  transparent: PropTypes.bool,\n  canClose: PropTypes.bool\n}\n\nModal.defaultProps = {\n  children: 'Here is the default modal content ...',\n  title: 'TITLE',\n  id: 'modal',\n  footer: '',\n  transparent: true,\n  canClose: true\n}\n\nexport default Modal\n","import Modal from './Modal'\n\nexport default Modal\n","import React from 'react'\nimport Modal from './../Modal'\nimport Popover from './../Popover'\n\nfunction Play({size, minutes, handleGridSizeClick, handleMinuteClick, startNewGame, clickThis}) {\n  const gridSizes = [];\n  [3,4,5,6,7].forEach((x,i) => {\n    if (x === size) {\n      gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={handleGridSizeClick}>{x}</div>\n    } else {\n      gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={handleGridSizeClick}>{x}</div>\n    }\n  })\n\n  const timerMinutes = [];\n  [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\n    // For Tutorial\n    if (x === 0) {\n      if (clickThis && clickThis === \"endless\") {\n        timerMinutes[i] = (\n          <Popover key={i.toString()} className=\"click-this\">\n            <div className=\"grid-box grid-minute\" onClick={handleMinuteClick}>{x}</div>\n          </Popover>\n        )\n        return\n      }\n    }\n    // Default\n    if (x === minutes) {\n      timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={handleMinuteClick}>{x}</div>\n    } else {\n      timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={handleMinuteClick}>{x}</div>\n    }\n    // EndDefault\n  })\n\n  return (\n    <Modal\n      title={`NEW GAME`}\n      id={`play`}\n      footer={\n        <div style={{ ...spacedTypo, ...textCenter }}>\n          {/* For Tutorial */}\n          {clickThis && clickThis === \"start\"\n            ? (\n              <Popover className=\"click-this\">\n                <button style={saveButton} onClick={startNewGame}>Start New Game</button>\n              </Popover>\n            )\n            : <button style={saveButton} onClick={startNewGame}>Start New Game</button>\n          }\n        </div>\n      }\n      transparent={false}\n      canClose={false}\n    >\n      <div>\n        <h5 style={spacedTypo}>GRID SIZE</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <div className=\"grid-box-container\" data-size={size}>\n          {gridSizes}\n        </div>\n      </div>\n      <br />\n      <br />\n      <div>\n        <h5 style={spacedTypo}>TIMER</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <div className=\"grid-box-container\" data-size={size}>\n          {timerMinutes}\n        </div>\n        <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\n      </div>\n    </Modal>\n  )\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst saveButton = {\n  background: 'transparent',\n  color: '#FFF',\n  textDecoration: 'none',\n  border: '1px solid #28F',\n  padding: '6px 8px 6px 12px',\n  cursor: 'pointer',\n  fontWeight: 600\n}\n\nPlay.defaultProps = {\n  newGame: false,\n  size: 5,\n  minutes: 5\n}\n\nexport default Play\n","import Play from './Play'\n\nexport default Play\n","import React from 'react'\nimport Modal from './../Modal'\n\nclass Player extends React.Component {\n  saveProfile() {\n    console.log('saving profile and settings ...')\n    window.location.hash = ''\n  }\n\n  render() {\n    return (\n      <Modal title={`PLAYER`} id={`player`}>\n        <div>\n          <h5 style={spacedTypo}>PROFILE</h5>\n          <div>...</div>\n          <div>&nbsp;</div>\n          <div>Username : tunjioye</div>\n          <div>&nbsp;</div>\n          <div>Highest Score : 2019</div>\n        </div>\n        <br />\n        <br />\n        <div>\n          <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\n          <div>...</div>\n          <div>&nbsp;</div>\n          <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\n          <div><em><small>cell reshuffle after submit</small></em></div>\n        </div>\n        <br />\n        <br />\n        <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\n      </Modal>\n    )\n  }\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst saveButton = {\n  background: 'transparent',\n  color: '#FFF',\n  textDecoration: 'none',\n  border: '1px solid #28F',\n  padding: '6px 8px 6px 12px',\n  cursor: 'pointer',\n  fontWeight: 600\n}\n\nexport default Player\n","import Player from './Player'\n\nexport default Player\n","import React from 'react'\nimport Modal from './../Modal'\nimport GitHubButton from 'react-github-btn'\n\nfunction Help({ quickTutorial, newGame }) {\n  return (\n    <Modal title={`HELP & ABOUT`} id={`help`}>\n      {(quickTutorial && !newGame) &&\n        <>\n          <div>\n            <h5 style={spacedTypo}>HOW TO PLAY</h5>\n            <div>...</div>\n            <div>&nbsp;</div>\n            <button style={saveButton} onClick={quickTutorial}>Play Quick Tutorial</button>\n          </div>\n          <br />\n          <br />\n        </>\n      }\n      <div>\n        <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <dl style={{ ...dl }}>\n          <dt style={{ ...dl.dt }}>\n            <small>UNDO</small>\n          </dt>\n          <dd style={{ ...dl.dd }}>\n            <kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd>\n            <br />\n          </dd>\n          <dt style={{ ...dl.dt }}>\n          <small>SUBMIT</small>\n          </dt>\n          <dd style={{ ...dl.dd }}>\n            <kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd>\n            <br />\n          </dd>\n        </dl>\n      </div>\n      <br />\n      <br />\n      <div>\n        <h5 style={spacedTypo}>ABOUT</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\n        <div>&nbsp;</div>\n        <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\n        <div>&nbsp;</div>\n        <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\n        <br />\n        <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\n        <br />\n        <div style={{ ...textCenter }}>\n          <GitHubButton\n            href=\"https://github.com/tunjioye/tapword\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star tunjioye/tapword on GitHub\">Star</GitHubButton>\n          <span style={{ padding: '0 5px' }}></span>\n          <GitHubButton\n            href=\"https://github.com/tunjioye/tapword/fork\"\n            data-icon=\"octicon-repo-forked\"\n            aria-label=\"Fork tunjioye/tapword on GitHub\">Fork</GitHubButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst kbd = {\n  border: '1px solid #28F',\n  padding: '3px 4px 3px 6px'\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst customLink = {\n  color: '#FFF',\n  textDecoration: 'none'\n}\n\nconst dl = {\n  margin: '0 auto',\n  dt: {\n    width: '80px',\n    display: 'inline-block',\n    textAlign: 'right',\n    margin: '5px auto'\n  },\n  dd: {\n    display: 'inline'\n  }\n}\n\nconst saveButton = {\n  background: 'transparent',\n  color: '#FFF',\n  textDecoration: 'none',\n  border: '1px solid #28F',\n  padding: '6px 8px 6px 12px',\n  cursor: 'pointer',\n  fontWeight: 600\n}\n\nexport default Help\n","import Help from './Help'\n\nexport default Help\n","import React from 'react';\nimport './App.css';\nimport './styles/index.css';\nimport './styles/grids.scss';\nimport spellcheck from './spellcheck';\nimport Loading from './components/Loading';\n// import Topbar from './components/Topbar';\nimport GridNew from './components/GridNew';\n// import Grid from './components/Grid';\nimport Score from './components/Score';\nimport Selection from './components/Selection';\nimport Sidebar from './components/Sidebar';\nimport Play from './components/Play';\nimport Player from './components/Player';\nimport Help from './components/Help';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newGame: props.newGame,\n      size: props.size,\n      minutes: props.minutes,\n      rows: props.rows,\n      multiplier: props.multiplier,\n      score: props.score,\n      lastWordLength: props.lastWordLength,\n      word: props.word,\n      cellToggle: props.cellToggle,\n      shuffle: props.shuffle,\n      shuffleAll: props.shuffleAll\n    }\n    this.startNewGame = this.startNewGame.bind(this)\n    this.quitGame = this.quitGame.bind(this)\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\n    this.setMinutes = this.setMinutes.bind(this)\n    this.randomLetters = this.randomLetters.bind(this)\n    this.handleCellClick = this.handleCellClick.bind(this)\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\n    this.popSelectionWord = this.popSelectionWord.bind(this)\n    this.handleKeyUp = this.handleKeyUp.bind(this)\n    this.submitWord = this.submitWord.bind(this)\n    this.updateMultiplier = this.updateMultiplier.bind(this)\n    this.updateScore = this.updateScore.bind(this)\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\n    this.setSelectedCells = this.setSelectedCells.bind(this)\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\n    this.shuffleCells = this.shuffleCells.bind(this)\n    this.saveGameProgress = this.saveGameProgress.bind(this)\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\n  }\n  startNewGame() {\n    this.setState({\n      newGame: true,\n      multiplier: 1,\n      score: 0,\n      lastWordLength: 0,\n      word: []\n    })\n    this.resetSelectedCells()\n    window.location.hash = ''\n    this.saveGameProgress('save')\n  }\n  quitGame(quitMessage = ' ') {\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\n    } else {\n      window.alert(`Your Score is : ${this.state.score}`)\n    }\n    this.setState({ newGame: false })\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\n  }\n  hasStartedNewGame() {\n    if (this.state.newGame) {\n      return true;\n    } else {\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\n      return false;\n    }\n  }\n  setMinutes(minutes) {\n    this.setState({ minutes })\n  }\n  randomLetters() {\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\n    let letters = []\n    for (let i = 0; i < this.state.size; i++) {\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\n    }\n    return letters\n  }\n  handleCellClick(e) {\n    if (this.hasStartedNewGame()) {\n      this.saveGameProgress('loading')\n\n      let cell = e.target\n      let cellName = cell.getAttribute('cell')\n      let word = this.state.word\n      if (this.state.cellToggle) {\n        // cell toggle\n        if (word.filter(x => x.cell === cellName).length === 0) {\n          this.pushSelectionWord(cell)\n        } else {\n          this.toggleSelectionWord(e)\n        }\n      } else {\n        // word pop\n        if (word.filter(x => x.cell === cellName).length === 0) {\n          this.pushSelectionWord(cell)\n        } else if (word[word.length - 1].cell === cellName) {\n          this.popSelectionWord()\n        }\n      }\n\n      this.saveGameProgress('save')\n    }\n  }\n  toggleSelectionWord(e) {\n    if (this.hasStartedNewGame()) {\n      this.saveGameProgress('loading')\n\n      let cell = e.target\n      let cellName = cell.getAttribute('cell')\n      let word = this.state.word\n\n      word = word.filter(x => x.cell !== cellName)\n      this.setState({ word })\n      // cell.classList.toggle('selected')\n\n      this.saveGameProgress('save')\n    }\n  }\n  pushSelectionWord(cell) {\n    let cellName = cell.getAttribute('cell')\n    let word = this.state.word\n    word[word.length] = {\n      cell: cellName,\n      letter: cell.innerHTML\n    }\n\n    // cell.classList.add('selected')\n    this.setState({ word })\n  }\n  popSelectionWord() {\n    if (this.hasStartedNewGame()) {\n      this.saveGameProgress('loading')\n\n      if (this.state.word.length > 0) {\n        let word = this.state.word\n        // document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\n        word.length--\n        this.setState({ word })\n      }\n\n      this.saveGameProgress('save')\n    }\n  }\n  clearSelectionWord() {\n    this.setState({ word: [] })\n  }\n  updateMultiplier(newWordLength) {\n    if (this.state.lastWordLength > 1) {\n      let lastWordLength = this.state.lastWordLength\n      let multiplier = this.state.multiplier\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\n      if (newWordLength > lastWordLength) {\n        multiplierEl.classList.add('plus1')\n        setTimeout(() => {\n          multiplierEl.classList.remove('plus1')\n        }, 500)\n        multiplier++\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\n        multiplierEl.classList.add('minus1')\n        setTimeout(() => {\n          multiplierEl.classList.remove('minus1')\n        }, 500)\n        multiplier--\n      }\n      this.setState({ multiplier })\n    }\n  }\n  updateScore(wordLength) {\n    let score = this.state.score\n    score += (wordLength * this.state.multiplier)\n    this.updateMultiplier(wordLength)\n    this.setState({\n      score: score,\n      lastWordLength: wordLength\n    })\n  }\n  setSelectedCells() {\n    this.state.word.forEach(x => {\n      let cell = document.querySelector(`[cell=\"${x.cell}\"]`)\n      cell.classList.add('selected')\n    })\n  }\n  resetSelectedCells() {\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\n    // selectedCells.forEach(x => x.classList.remove('selected'))\n    this.shuffleCells(selectedCells)\n  }\n  shuffleCells(selectedCells) {\n    if (this.state.shuffle) {\n      if (this.state.shuffleAll) {\n        // shuffle all cells\n        this.setState({ rows: this.randomLetters() })\n      } else {\n        // shuffle only selected cells\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\n      }\n    }\n  }\n  submitWord() {\n    if (this.hasStartedNewGame()) {\n      if (this.state.word.length > 0) {\n        this.saveGameProgress('loading')\n\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\n        spellcheck.get('?text=' + word)\n        .then(function (response) {\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\n          if (response.data.corrections[word] === undefined) {\n            selectedCells.forEach(x => x.classList.add('flash-success'))\n            setTimeout(() => {\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\n              this.updateScore(word.length)\n              this.clearSelectionWord()\n              this.resetSelectedCells()\n              this.saveGameProgress('save')\n            }, 500)\n          } else {\n            document.getElementById('selection-word').classList.add('shake')\n            selectedCells.forEach(x => x.classList.add('flash-error'))\n            setTimeout(() => {\n              document.getElementById('selection-word').classList.remove('shake')\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\n              this.saveGameProgress('save')\n            }, 500)\n          }\n        }.bind(this))\n        .catch(function (error) {\n          if (error) {\n            let errorMessage = \"Network Error\"\n            if (error.response !== undefined) {\n              errorMessage = error.response.data.message\n            }\n            console.error(errorMessage)\n            alert(errorMessage)\n          }\n          this.saveGameProgress('save')\n        }.bind(this))\n      }\n    }\n  }\n  saveGameProgress(state) {\n    const savingProgress = document.getElementById('saving-progress')\n    switch (state) {\n      case 'save':\n        // save game progress & hide saving progress indicator\n        setTimeout(() => {\n          window.localStorage.setItem('game', JSON.stringify(this.state))\n          savingProgress.classList.add('d-hide')\n        }, 500)\n        break;\n      case 'loading':\n      default:\n        // show saving progress indicator\n        savingProgress.classList.remove('d-hide')\n        break;\n    }\n  }\n  handleGridSizeClick(e) {\n    const gridSize = parseInt(e.target.innerText)\n    this.setState({ size: gridSize })\n    setTimeout(() => {\n      this.setState({ rows: this.randomLetters() })\n\n      // dynamically set grid size style\n      const gridNews = document.getElementsByClassName('grid-new')\n      const gridContainers = document.getElementsByClassName('grid-container')\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\n\n      gridNews[0].setAttribute('size', gridSize)\n      gridContainers[0].setAttribute('size', gridSize)\n      gridSidebars[0].setAttribute('size', gridSize)\n    }, 10)\n  }\n  handleMinuteClick(e) {\n    this.setState({ minutes: parseInt(e.target.innerText) })\n  }\n  handleKeyUp(e) {\n    switch (e.keyCode) {\n      // backspace | del key to undo\n      case 8:\n      case 46:\n        e.preventDefault()\n        this.popSelectionWord()\n        break;\n      // return or enter | spacebar key to submit\n      case 13:\n      case 32:\n        e.preventDefault()\n        this.submitWord()\n        break;\n      default:\n        break;\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"keyup\", this.handleKeyUp)\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\n\n    // if (window.localStorage.getItem('game') && window.confirm('Resume Last Game?')) {\n    if (window.localStorage.getItem('game')) {\n      // resume last game\n      const lastGame = window.localStorage.getItem('game')\n      let parsedLastGame = JSON.parse(lastGame)\n\n      if (parsedLastGame.newGame) {\n        this.setState(parsedLastGame)\n\n        // dynamically set grid size style\n        const gridNews = document.getElementsByClassName('grid-new')\n        const gridContainers = document.getElementsByClassName('grid-container')\n        const gridSidebars = document.getElementsByClassName('grid-sidebar')\n\n        gridNews[0].setAttribute('size', parsedLastGame.size)\n        gridContainers[0].setAttribute('size', parsedLastGame.size)\n        gridSidebars[0].setAttribute('size', parsedLastGame.size)\n\n        setTimeout(() => {\n          this.setSelectedCells()\n        }, 10);\n      } else {\n        window.localStorage.removeItem('game')\n      }\n    // } else {\n    //   // clear last game and initialize new game\n    //   if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\n    //   window.location.hash = 'play'\n    }\n  }\n  render() {\n    const wordCells = this.state.word.map(x => x.cell)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <div style={{ display: 'block' }}>\n            <Topbar />\n          </div> */}\n          <div id=\"saving-progress\" className=\"d-hide\">\n            <Loading />\n          </div>\n          <div style={{ padding: '1rem' }}>\n            <div>\n              <div>\n                <Score score={this.state.score} />\n              </div>\n              <div>\n                <Selection word={this.state.word.map(x => x.letter)} />\n              </div>\n            </div>\n\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\n\n            <div className=\"grid-flex\">\n              <GridNew\n                size={this.state.size}\n                rows={this.state.rows}\n                wordCells={wordCells}\n                handleCellClick={this.handleCellClick} />\n              <Sidebar\n                multiplier={this.state.multiplier}\n                size={this.state.size}\n                minutes={parseFloat(this.state.minutes)}\n                newGame={this.state.newGame}\n                setMinutes={this.setMinutes}\n                saveGameProgress={this.saveGameProgress}\n                quitGame={this.quitGame}\n                handleUndoButtonClick={this.popSelectionWord}\n                handleSubmitButtonClick={this.submitWord} />\n            </div>\n          </div>\n        </header>\n        {!this.state.newGame &&\n          <Play\n            newGame={this.state.newGame}\n            startNewGame={this.startNewGame}\n            size={this.state.size}\n            minutes={this.state.minutes}\n            handleGridSizeClick={this.handleGridSizeClick}\n            handleMinuteClick={this.handleMinuteClick} />\n        }\n        <Player />\n        <Help\n          newGame={this.state.newGame}\n          quickTutorial={this.props.quickTutorial} />\n      </div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  newGame: false,\n  generate: true,\n  cellToggle: true,\n  shuffle: true,\n  shuffleAll: true,\n  size: 5,\n  minutes: 5,\n  rows: [],\n  multiplier: 1,\n  score: 0,\n  lastWordLength: 0,\n  word: [] // { cell: '', letter: ''} cell is short for cellName\n}\n\nexport default App;\n","import React from 'react';\nimport './App.css';\nimport './styles/index.css';\nimport './styles/grids.scss';\nimport spellcheck from './spellcheck';\nimport Loading from './components/Loading';\n// import Topbar from './components/Topbar';\nimport GridNew from './components/GridNew';\n// import Grid from './components/Grid';\nimport Score from './components/Score';\nimport Selection from './components/Selection';\nimport Sidebar from './components/Sidebar';\nimport Play from './components/Play';\nimport Player from './components/Player';\nimport Help from './components/Help';\n\nclass Tutorial extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // tutorial: props.tutorial,\n      tutorialSteps: props.tutorialSteps,\n      currentStep: props.currentStep,\n      newGame: props.newGame,\n      size: props.size,\n      minutes: props.minutes,\n      rows: props.rows,\n      multiplier: props.multiplier,\n      score: props.score,\n      lastWordLength: props.lastWordLength,\n      word: props.word,\n      cellToggle: props.cellToggle,\n      shuffle: props.shuffle,\n      shuffleAll: props.shuffleAll\n    }\n    this.startNewGame = this.startNewGame.bind(this)\n    this.quitGame = this.quitGame.bind(this)\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\n    this.setMinutes = this.setMinutes.bind(this)\n    this.randomLetters = this.randomLetters.bind(this)\n    this.handleCellClick = this.handleCellClick.bind(this)\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\n    this.popSelectionWord = this.popSelectionWord.bind(this)\n    this.handleKeyUp = this.handleKeyUp.bind(this)\n    this.submitWord = this.submitWord.bind(this)\n    this.updateMultiplier = this.updateMultiplier.bind(this)\n    this.updateScore = this.updateScore.bind(this)\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\n    this.shuffleCells = this.shuffleCells.bind(this)\n    this.saveGameProgress = this.saveGameProgress.bind(this)\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\n    // For Tutorial : next Tutorial Step Function\n    this.nextTutorialStep = this.nextTutorialStep.bind(this)\n  }\n  startNewGame() {\n    // For Tutorial : prevent unexpected game state for new game\n    if (this.state.size === 5 && this.state.minutes === 0) {\n      // Default\n      this.setState({\n        newGame: true,\n        multiplier: 1,\n        score: 0,\n        lastWordLength: 0,\n        word: []\n      })\n      this.resetSelectedCells()\n      window.location.hash = ''\n      this.saveGameProgress('save')\n      // EndDefault\n      this.nextTutorialStep()\n    } else {\n      this.setState({\n        currentStep: 1\n      })\n    }\n  }\n  quitGame(quitMessage = ' ') {\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\n    } else {\n      window.alert(`Your Score is : ${this.state.score}`)\n    }\n    this.setState({ newGame: false })\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\n    // For Tutorial : end Tutorial\n    window.localStorage.setItem('tw_quicktutorial', \"done\")\n    window.alert(`Thanks for taking our Quick Tutorial`)\n    this.props.endTutorial()\n  }\n  hasStartedNewGame() {\n    return (this.state.newGame) ? true : false\n  }\n  setMinutes(minutes) {\n    this.setState({ minutes })\n  }\n  randomLetters() {\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\n    let letters = []\n    for (let i = 0; i < this.state.size; i++) {\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\n    }\n    return letters\n  }\n  handleCellClick(e) {\n    if (this.hasStartedNewGame()) {\n      // For Tutorial : prevent unexpected cell click\n      const { tutorialSteps, currentStep } = this.state\n      switch(`c${tutorialSteps[currentStep]}`) {\n        case e.target.getAttribute('cell'):\n          this.nextTutorialStep()\n          break;\n        default:\n          return\n      }\n      // Default\n      this.saveGameProgress('loading')\n      let cell = e.target\n      let cellName = cell.getAttribute('cell')\n      let word = this.state.word\n      if (this.state.cellToggle) {\n        // cell toggle\n        if (word.filter(x => x.cell === cellName).length === 0) {\n          this.pushSelectionWord(cell)\n        } else {\n          this.toggleSelectionWord(e)\n        }\n      } else {\n        // word pop\n        if (word.filter(x => x.cell === cellName).length === 0) {\n          this.pushSelectionWord(cell)\n        } else if (word[word.length - 1].cell === cellName) {\n          this.popSelectionWord()\n        }\n      }\n\n      this.saveGameProgress('save')\n      // EndDefault\n    }\n  }\n  toggleSelectionWord(e) {\n    if (this.hasStartedNewGame()) {\n      this.saveGameProgress('loading')\n\n      let cell = e.target\n      let cellName = cell.getAttribute('cell')\n      let word = this.state.word\n\n      word = word.filter(x => x.cell !== cellName)\n      this.setState({ word })\n\n      this.saveGameProgress('save')\n    }\n  }\n  pushSelectionWord(cell) {\n    let cellName = cell.getAttribute('cell')\n    let word = this.state.word\n    word[word.length] = {\n      cell: cellName,\n      letter: cell.innerHTML\n    }\n\n    this.setState({ word })\n  }\n  popSelectionWord() {\n    if (this.hasStartedNewGame()) {\n      this.saveGameProgress('loading')\n\n      if (this.state.word.length > 0) {\n        let word = this.state.word\n        word.length--\n        this.setState({ word })\n      }\n\n      this.saveGameProgress('save')\n    }\n  }\n  clearSelectionWord() {\n    this.setState({ word: [] })\n  }\n  updateMultiplier(newWordLength) {\n    if (this.state.lastWordLength > 1) {\n      let lastWordLength = this.state.lastWordLength\n      let multiplier = this.state.multiplier\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\n      if (newWordLength > lastWordLength) {\n        multiplierEl.classList.add('plus1')\n        setTimeout(() => {\n          multiplierEl.classList.remove('plus1')\n        }, 500)\n        multiplier++\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\n        multiplierEl.classList.add('minus1')\n        setTimeout(() => {\n          multiplierEl.classList.remove('minus1')\n        }, 500)\n        multiplier--\n      }\n      this.setState({ multiplier })\n    }\n  }\n  updateScore(wordLength) {\n    let score = this.state.score\n    score += (wordLength * this.state.multiplier)\n    this.updateMultiplier(wordLength)\n    this.setState({\n      score: score,\n      lastWordLength: wordLength\n    })\n  }\n  resetSelectedCells() {\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\n    this.shuffleCells(selectedCells)\n  }\n  shuffleCells(selectedCells) {\n    if (this.state.shuffle) {\n      if (this.state.shuffleAll) {\n        // shuffle all cells\n        this.setState({ rows: this.randomLetters() })\n      } else {\n        // shuffle only selected cells\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\n      }\n    }\n  }\n  submitWord() {\n    if (this.hasStartedNewGame()) {\n      if (this.state.word.length > 0) {\n        this.saveGameProgress('loading')\n\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\n        spellcheck.get('?text=' + word)\n        .then(function (response) {\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\n          if (response.data.corrections[word] === undefined) {\n            selectedCells.forEach(x => x.classList.add('flash-success'))\n            setTimeout(() => {\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\n              this.updateScore(word.length)\n              this.clearSelectionWord()\n              this.resetSelectedCells()\n              this.saveGameProgress('save')\n\n              // For Tutorial : next Tutotial Step on Submit\n              this.nextTutorialStep()\n            }, 500)\n          } else {\n            document.getElementById('selection-word').classList.add('shake')\n            selectedCells.forEach(x => x.classList.add('flash-error'))\n            setTimeout(() => {\n              document.getElementById('selection-word').classList.remove('shake')\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\n              this.saveGameProgress('save')\n            }, 500)\n          }\n        }.bind(this))\n        .catch(function (error) {\n          if (error) {\n            let errorMessage = \"Network Error\"\n            if (error.response !== undefined) {\n              errorMessage = error.response.data.message\n            }\n            console.error(errorMessage)\n            alert(errorMessage)\n          }\n          this.saveGameProgress('save')\n        }.bind(this))\n      }\n    }\n  }\n  saveGameProgress(state) {\n    const savingProgress = document.getElementById('saving-progress')\n    switch (state) {\n      case 'save':\n        // save game progress & hide saving progress indicator\n        setTimeout(() => {\n          window.localStorage.setItem('game', JSON.stringify(this.state))\n          savingProgress.classList.add('d-hide')\n        }, 500)\n        break;\n      case 'loading':\n      default:\n        // show saving progress indicator\n        savingProgress.classList.remove('d-hide')\n        break;\n    }\n  }\n  handleGridSizeClick(e) {\n    const gridSize = parseInt(e.target.innerText)\n    this.setState({ size: gridSize })\n    setTimeout(() => {\n      this.setState({ rows: this.randomLetters() })\n\n      // dynamically set grid size style\n      const gridNews = document.getElementsByClassName('grid-new')\n      const gridContainers = document.getElementsByClassName('grid-container')\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\n\n      gridNews[0].setAttribute('size', gridSize)\n      gridContainers[0].setAttribute('size', gridSize)\n      gridSidebars[0].setAttribute('size', gridSize)\n    }, 10)\n  }\n  handleMinuteClick(e) {\n    this.setState({ minutes: parseInt(e.target.innerText) })\n    // For Tutorial : goto next Tutorial Step only for expected minute click\n    const { tutorialSteps, currentStep } = this.state\n    if (tutorialSteps[currentStep] === \"endless\" && e.target.innerText === \"0\") this.nextTutorialStep()\n  }\n  // For Tutorial : next tutorial Step Function\n  nextTutorialStep() {\n    const { currentStep } = this.state\n    this.setState({\n      currentStep: currentStep + 1\n    })\n  }\n  handleKeyUp(e) {\n    switch (e.keyCode) {\n      // backspace | del key to undo\n      case 8:\n      case 46:\n        e.preventDefault()\n        this.popSelectionWord()\n        break;\n      // return or enter | spacebar key to submit\n      case 13:\n      case 32:\n        e.preventDefault()\n        this.submitWord()\n        break;\n      default:\n        break;\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"keyup\", this.handleKeyUp)\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\n  }\n  render() {\n    const wordCells = this.state.word.map(x => x.cell)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <div style={{ display: 'block' }}>\n            <Topbar />\n          </div> */}\n          <div id=\"saving-progress\" className=\"d-hide\">\n            <Loading />\n          </div>\n          <div style={{ padding: '1rem' }}>\n            <div>\n              <div>\n                <Score score={this.state.score} />\n              </div>\n              <div>\n                <Selection word={this.state.word.map(x => x.letter)} />\n              </div>\n            </div>\n\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\n\n            <div className=\"grid-flex\">\n              <GridNew\n                clickThis={this.state.tutorialSteps[this.state.currentStep]}\n                wordCells={wordCells}\n                handleCellClick={this.handleCellClick} />\n              <Sidebar\n                clickThis={this.state.tutorialSteps[this.state.currentStep]}\n                nextTutorialStep={this.nextTutorialStep}\n                multiplier={this.state.multiplier}\n                size={this.state.size}\n                minutes={parseFloat(this.state.minutes)}\n                newGame={this.state.newGame}\n                setMinutes={this.setMinutes}\n                saveGameProgress={this.saveGameProgress}\n                quitGame={this.quitGame}\n                handleUndoButtonClick={this.popSelectionWord}\n                handleSubmitButtonClick={this.submitWord} />\n            </div>\n          </div>\n        </header>\n        {!this.state.newGame &&\n          <Play\n            clickThis={this.state.tutorialSteps[this.state.currentStep]}\n            newGame={this.state.newGame}\n            startNewGame={this.startNewGame}\n            size={this.state.size}\n            minutes={this.state.minutes}\n            handleGridSizeClick={this.handleGridSizeClick}\n            handleMinuteClick={this.handleMinuteClick} />\n        }\n        <Player />\n        <Help />\n      </div>\n    );\n  }\n}\n\nTutorial.defaultProps = {\n  // tutorial: true,\n  tutorialSteps: [\n    \"play\", \"endless\", \"start\", 15, 13, \"submit\", 16, 11, 7, 8, \"submit\", \"quit\"\n  ],\n  currentStep: 0,\n  newGame: false,\n  generate: true,\n  cellToggle: true,\n  shuffle: true,\n  shuffleAll: true,\n  size: 5,\n  minutes: 5,\n  rows: [],\n  multiplier: 1,\n  score: 0,\n  lastWordLength: 0,\n  word: [] // { cell: '', letter: ''} cell is short for cellName\n}\n\nexport default Tutorial;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles/game.css'\nimport App from './App'\nimport Tutorial from './Tutorial'\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tutorial: props.tutorial\n    }\n\n    this.quickTutorial = this.quickTutorial.bind(this)\n    this.endTutorial = this.endTutorial.bind(this)\n  }\n\n  quickTutorial() {\n    if (window.confirm('Quick Tutorial?')) {\n      this.setState({\n        tutorial: true\n      })\n    }\n  }\n\n  endTutorial() {\n    this.setState({\n      tutorial: false\n    })\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (!window.localStorage.getItem('tw_quicktutorial')) {\n        // request quick Tutoial Permission\n        this.quickTutorial()\n      } else {\n        this.endTutorial()\n      }\n    }, 100)\n  }\n\n  render() {\n    return (this.state.tutorial)\n      ? <Tutorial endTutorial={this.endTutorial} />\n      : <App quickTutorial={this.quickTutorial} />\n  }\n}\n\nGame.propTypes = {\n  tutorial: PropTypes.bool\n}\n\nGame.defaultProps = {\n  tutorial: false\n}\n\nexport default Game\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}