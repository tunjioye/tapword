{"version":3,"sources":["config.js","spellcheck.js","components/Loading/Loading.jsx","components/Loading/index.js","components/Popover/Popover.jsx","components/Popover/index.js","components/GridCell/GridCell.jsx","components/GridCell/index.js","components/GridRow/GridRow.jsx","components/GridRow/index.js","components/GridNew/GridNew.jsx","components/GridNew/index.js","components/SelectionCell/SelectionCell.jsx","components/SelectionCell/index.js","components/Score/Score.jsx","components/Score/index.js","components/Selection/Selection.jsx","components/Selection/index.js","components/Countdown/Countdown.jsx","components/Countdown/index.js","components/Sidebar/Sidebar.jsx","components/Sidebar/index.js","components/Modal/Modal.jsx","components/Modal/index.js","components/Play/Play.jsx","components/Play/index.js","components/Player/Player.jsx","components/Player/index.js","components/Help/Help.jsx","components/Help/index.js","App.js","Tutorial.js","Game.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Loading","props","react_default","a","createElement","className","large","defaultProps","Popover","_ref","children","concat","GridCell","cell","cellNumber","cellInfo","wordCells","indexOf","trim","row","rowName","onClick","handleCellClick","letter","charAt","clickThis","components_Popover","GridRow","rowLetters","i","size","components_GridCell","key","toString","rowNumber","letters","Fragment","GridNew","rows","components_GridRow","SelectionCell","style","Object","objectSpread","Score","output","score","length","components_SelectionCell","id","Selection","word","height","Countdown","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","seconds","minutes","timer","secondsToTime","bind","assertThisInitialized","calculateTimeLeft","startTimer","stopTimer","countDown","secs","divisor_for_minutes","divisor_for_seconds","m","Math","floor","s","ceil","timeLeftVar","setState","setInterval","clearInterval","_this2","setMinutes","parseFloat","toFixed","saveGameProgress","quitGame","newGame","nextProps","_this3","_this$state$time","React","Component","Sidebar","location","hash","parseInt","nextTutorialStep","timerText","components_Countdown","playOrQuitText","playOrQuitAction","openPlayModal","playOrQuit","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","Modal","transparent","canClose","title","footer","href","aria-label","background","spacedTypo","letterSpacing","wordSpacing","textTransform","margin","fontWeight","Play","handleGridSizeClick","handleMinuteClick","startNewGame","gridSizes","forEach","x","timerMinutes","components_Modal","textCenter","saveButton","data-size","marginTop","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","saveProfile","kbd","customLink","dl","dt","width","display","dd","Help","target","rel","react_github_btn","data-icon","App","lastWordLength","cellToggle","shuffle","shuffleAll","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","setSelectedCells","resetSelectedCells","shuffleCells","quitMessage","undefined","alert","confirm","chars","toConsumableArray","Array","map","random","join","e","cellName","getAttribute","filter","innerHTML","newWordLength","multiplierEl","document","getElementsByClassName","classList","add","remove","wordLength","querySelector","selectedCells","querySelectorAll","toLowerCase","get","then","response","data","corrections","getElementById","catch","errorMessage","message","savingProgress","JSON","stringify","_this4","gridSize","innerText","gridNews","gridContainers","gridSidebars","setAttribute","keyCode","preventDefault","_this5","addEventListener","generate","lastGame","parsedLastGame","parse","components_Loading","components_Score","components_Selection","minHeight","maxHeight","components_GridNew","components_Sidebar","components_Play","components_Player","components_Help","Tutorial","tutorialSteps","currentStep","endTutorial","_this$state","_this$state2","Game","tutorial","quickTutorial","src_Tutorial","src_App_0","Boolean","hostname","match","ReactDOM","render","src_Game","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.148ecb1e.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.scss';\n\nconst Loading = (props) => (\n  <div className={(props.large ? 'loading' : 'loading loading-lg')}></div>\n);\n\nLoading.propTypes = {\n  large: PropTypes.bool\n};\n\nLoading.defaultProps = {\n  large: false\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Popover.scss'\r\n\r\nconst Popover = ({ children, className }) => (\r\n  <div className={`popover ${className}`}>\r\n    { children }\r\n    <div className=\"popover-container\"></div>\r\n  </div>\r\n)\r\n\r\nPopover.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nPopover.defaultProps = {\r\n  children: '...'\r\n}\r\n\r\nexport default Popover\r\n","import Popover from './Popover'\r\n\r\nexport default Popover\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './GridCell.scss'\r\nimport Popover from './../Popover'\r\n\r\nconst GridCell = (props) => {\r\n  const cell = `c${props.cellNumber}`\r\n\r\n  const cellInfo = (\r\n    <div\r\n      className={`grid-cell ${(props.className) ? props.className : \"\"} ${(props.wordCells.indexOf(cell) !== -1) ? \"selected\" : \"\"}`.trim()}\r\n      row={props.rowName}\r\n      cell={cell}\r\n      onClick={props.handleCellClick}\r\n    >\r\n      {props.letter.charAt(0)}\r\n    </div>\r\n  )\r\n\r\n  // For Tutorial : show Click This Popover for expected Grid Cell\r\n  if (props.clickThis && props.clickThis === props.cellNumber) {\r\n    return (\r\n      <Popover className=\"click-this\">\r\n        { cellInfo }\r\n      </Popover>\r\n    )\r\n  }\r\n\r\n  return (cellInfo)\r\n}\r\n\r\nGridCell.propTypes = {\r\n  letter: PropTypes.string,\r\n  rowName: PropTypes.string,\r\n  cellNumber: PropTypes.number,\r\n  wordCells: PropTypes.array,\r\n  handleCellClick: PropTypes.func\r\n}\r\n\r\nGridCell.defaultProps = {\r\n  letter: 'T',\r\n  rowName: 'r0',\r\n  cellNumber: 0,\r\n  wordCells: []\r\n}\r\n\r\nexport default GridCell\r\n","import GridCell from './GridCell'\n\nexport default GridCell\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './GridRow.scss'\r\nimport GridCell from '../GridCell'\r\n\r\nconst GridRow = (props) => {\r\n  let rowLetters = []\r\n  for (let i = 0; i < props.size; i++) {\r\n    rowLetters[i] = (\r\n      <GridCell\r\n        key={i.toString()}\r\n        rowName={`r${props.rowNumber}`}\r\n        cellNumber={((props.rowNumber * props.size) + i)}\r\n        letter={(props.letters[i]) ? props.letters[i] : ' '}\r\n        clickThis={props.clickThis}\r\n        wordCells={props.wordCells}\r\n        handleCellClick={props.handleCellClick}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      {rowLetters}\r\n    </>\r\n  )\r\n}\r\n\r\nGridRow.propTypes = {\r\n  size: PropTypes.number,\r\n  rowNumber: PropTypes.number,\r\n  letters: PropTypes.string,\r\n  wordCells: PropTypes.array,\r\n  handleCellClick: PropTypes.func\r\n}\r\n\r\nGridRow.defaultProps = {\r\n  size: 5,\r\n  rowNumber: 0,\r\n  letters: 'TAPWD',\r\n  wordCells: []\r\n}\r\n\r\nexport default GridRow\r\n","import GridRow from './GridRow'\n\nexport default GridRow\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './GridNew.scss'\r\nimport GridRow from '../GridRow'\r\n\r\nconst GridNew = (props) => {\r\n  let rows = []\r\n  for (let i = 0; i < props.size; i++) {\r\n    rows[i] = (\r\n      <GridRow\r\n        key={i.toString()}\r\n        rowNumber={i}\r\n        size={props.size}\r\n        letters={props.rows[i]}\r\n        clickThis={props.clickThis}\r\n        wordCells={props.wordCells}\r\n        handleCellClick={props.handleCellClick}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"grid-new\">\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nGridNew.propTypes = {\r\n  size: PropTypes.number,\r\n  rows: PropTypes.array,\r\n  wordCells: PropTypes.array,\r\n  handleCellClick: PropTypes.func\r\n}\r\n\r\nGridNew.defaultProps = {\r\n  size: 5,\r\n  rows: [\r\n    'TAP',\r\n    'WORD',\r\n    'GAME',\r\n    'BY',\r\n    'TUNJI',\r\n  ],\r\n  wordCells: []\r\n}\r\n\r\nexport default GridNew\r\n","import GridNew from './GridNew'\n\nexport default GridNew\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './SelectionCell.scss'\n\nconst SelectionCell = (props) => (\n  <div className=\"selection-cell\" style={{ ...props.style }}>\n    {props.letter.charAt(0)}\n  </div>\n)\n\nSelectionCell.propTypes = {\n  letter: PropTypes.string\n}\n\nSelectionCell.defaultProps = {\n  letter: 'T'\n}\n\nexport default SelectionCell\n","import SelectionCell from './SelectionCell'\n\nexport default SelectionCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './../Selection/Selection.scss'\nimport './Score.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Score = (props) => {\n  let output = []\n  let score = props.score.toString()\n  for (let i = 0; i < score.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />)\n  }\n\n  return (\n    <div className=\"selection\">\n      <span className=\"selection-info\">SCORE</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"score\">{output}</span>\n      </div>\n    </div>\n  )\n}\n\nScore.propTypes = {\n  score: PropTypes.number\n}\n\nScore.defaultProps = {\n  score: 0\n}\n\nexport default Score\n","import Score from './Score'\n\nexport default Score\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Selection.scss'\r\nimport SelectionCell from './../SelectionCell'\r\n\r\nconst Selection = (props) => {\r\n  let output = []\r\n  for (let i = 0; i < props.word.length; i++) {\r\n    output[i] = (<SelectionCell key={i.toString()} letter={(props.word[i]) ? props.word[i] : ' '} />)\r\n  }\r\n\r\n  return (\r\n    // #selection-word is important for the shake animation\r\n    <div id=\"selection-word\" className=\"selection\">\r\n      <span className=\"selection-info\">WORD INPUT</span>\r\n      <div className=\"selection-wrapper\">\r\n        <span id=\"word\">\r\n          {/* important spacing fix via style */}\r\n          <SelectionCell letter=' ' style={{ height: '64px' }} />\r\n          {output}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSelection.propTypes = {\r\n  word: PropTypes.array\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: []\r\n}\r\n\r\nexport default Selection\r\n","import Selection from './Selection'\n\nexport default Selection\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Countdown.scss'\r\n// import CountdownCircle from './../CountdownCircle'\r\n\r\nclass Countdown extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      time: {},\r\n      seconds: this.props.minutes * 60\r\n    }\r\n\r\n    this.timer = 0\r\n    this.secondsToTime = this.secondsToTime.bind(this)\r\n    this.calculateTimeLeft = this.calculateTimeLeft.bind(this)\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.countDown = this.countDown.bind(this)\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let divisor_for_minutes = secs % (60 * 60)\r\n    let minutes = Math.floor(divisor_for_minutes / 60)\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60\r\n    let seconds = Math.ceil(divisor_for_seconds)\r\n\r\n    let obj = {\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  calculateTimeLeft() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds)\r\n    this.setState({ time: timeLeftVar })\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000)\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(this.timer)\r\n    this.timer = 0 // reset to 0 !important\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = (this.state.seconds - 1 > 0) ? this.state.seconds - 1 : 0\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    })\r\n\r\n    if (seconds > 0) {\r\n      // set Game / App Minutes & save Game Progress\r\n      this.props.setMinutes(parseFloat(seconds / 60).toFixed(3))\r\n      setTimeout(() => {\r\n        this.props.saveGameProgress('save')\r\n      }, 1000)\r\n    } else {\r\n      // stop timer\r\n      this.stopTimer()\r\n      // Quit Game with a Time Up\r\n      this.props.quitGame('TIME UP!')\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateTimeLeft()\r\n    if (this.props.newGame) this.startTimer()\r\n    if (!this.props.newGame) this.stopTimer()\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps) {\r\n      setTimeout(() => {\r\n        this.setState({ seconds: nextProps.minutes * 60 })\r\n        if (nextProps.newGame) this.startTimer()\r\n        if (!nextProps.newGame) this.stopTimer()\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { minutes } = this.props\r\n    const { m, s } = this.state.time\r\n    // const minutesRadius = mapNumber(m, minutes, 0, 0, 359.9)\r\n    // const secondsRadius = mapNumber(s, 60, 0, 0, 359.9)\r\n\r\n    return (\r\n      <div>\r\n        {/* <h1>Countdown</h1> */}\r\n        <div className='countdown-wrapper'>\r\n          <div className='countdown-item'>\r\n            {/* Disabled for now because it seems hard to make responsive */}\r\n            {/* <CountdownCircle radius={(m === 0) ? secondsRadius : minutesRadius} /> */}\r\n            {(m === 0) ? s : m}\r\n            <span className=\"highlight\">{(m === 0) ? 's' : 'm'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// // Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\n// function mapNumber(number, in_min, in_max, out_min, out_max) {\r\n//   return (out_max - ((number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min)).toFixed(1)\r\n// }\r\n\r\nCountdown.propTypes = {\r\n  minutes: PropTypes.number,\r\n  newGame: PropTypes.bool,\r\n  setMinutes: PropTypes.func,\r\n  saveGameProgress: PropTypes.func,\r\n  quitGame: PropTypes.func\r\n}\r\n\r\nCountdown.defaultProps = {\r\n  minutes: 2\r\n}\r\n\r\nexport default Countdown\r\n","import Countdown from './Countdown'\r\n\r\nexport default Countdown\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Sidebar.scss'\r\nimport Countdown from './../Countdown'\r\nimport Popover from './../Popover'\r\n\r\nclass Sidebar extends React.Component {\r\n  openPlayModal() {\r\n    window.location.hash = ''\r\n    window.location.hash = 'play'\r\n    // set App Minutes\r\n    this.props.setMinutes(parseInt(this.props.minutes))\r\n    // For Tutorial\r\n    if (this.props.clickThis && this.props.clickThis === \"play\") {\r\n      this.props.nextTutorialStep()\r\n    }\r\n  }\r\n\r\n  openPlayerModal() {\r\n    window.location.hash = ''\r\n    window.location.hash = 'player'\r\n  }\r\n\r\n  openHelpModal() {\r\n    window.location.hash = ''\r\n    window.location.hash = 'help'\r\n  }\r\n\r\n  render() {\r\n    let timerText = \"Timer\"\r\n    // let timer = (<div className=\"timer\">{this.props.minutes}<span className=\"highlight\">m</span></div>)\r\n    let timer = (\r\n      <div className=\"timer\">\r\n        <Countdown\r\n          minutes={parseFloat(this.props.minutes)}\r\n          newGame={this.props.newGame}\r\n          setMinutes={this.props.setMinutes}\r\n          saveGameProgress={this.props.saveGameProgress}\r\n          quitGame={this.props.quitGame} />\r\n        {/* <span className=\"highlight\">m</span> */}\r\n      </div>\r\n    )\r\n    if (this.props.minutes === 0) {\r\n      timerText = \"Endless\"\r\n      timer = (<div className=\"timer\">&infin;</div>)\r\n    }\r\n\r\n    let playOrQuitText = \"New Game\"\r\n    let playOrQuitAction = this.openPlayModal.bind(this)\r\n    let playOrQuit = (<div>&#8227;</div>)\r\n    if (this.props.newGame) {\r\n      playOrQuitText = \"Quit\"\r\n      playOrQuitAction = this.props.quitGame\r\n      playOrQuit = (<div>&times;</div>)\r\n    }\r\n\r\n    return (\r\n      <div className=\"grid-sidebar\">\r\n        <div className=\"grid-gameplay sidebar-inner sidebar-inner-gameplay\">\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={timerText}>\r\n            {timer}\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Grid Size\">\r\n            <div className=\"grid-size\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n          <div className=\"grid-cell\"></div>\r\n          <div className=\"grid-cell\"></div>\r\n        </div>\r\n        <div className=\"grid-actions sidebar-inner sidebar-inner-actions\">\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Player\" onClick={this.openPlayerModal.bind(this)}>\r\n            <div>&#10033;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Help\" onClick={this.openHelpModal.bind(this)}>\r\n            <div>&#63;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={playOrQuitText} onClick={playOrQuitAction}>\r\n            {this.props.clickThis === \"play\" || this.props.clickThis === \"quit\"\r\n              ? (\r\n                <Popover className=\"click-this\">\r\n                  { playOrQuit }\r\n                </Popover>\r\n              )\r\n              : playOrQuit\r\n            }\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Undo Word\" onClick={this.props.handleUndoButtonClick}>\r\n            <div>&#8592;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Submit Word\" onClick={this.props.handleSubmitButtonClick}>\r\n            {this.props.clickThis === \"submit\"\r\n              ? (\r\n                <Popover className=\"click-this\">\r\n                  <div>&#8629;</div>\r\n                </Popover>\r\n              )\r\n              : <div>&#8629;</div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  size: PropTypes.number,\r\n  minutes: PropTypes.number,\r\n  multiplier: PropTypes.number,\r\n  newGame: PropTypes.bool,\r\n  setMinutes: PropTypes.func,\r\n  saveGameProgress: PropTypes.func,\r\n  quitGame: PropTypes.func,\r\n  handleUndoButtonClick: PropTypes.func,\r\n  handleSubmitButtonClick: PropTypes.func,\r\n  nextTutorialStep: PropTypes.func\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  newGame: false\r\n}\r\n\r\nexport default Sidebar\r\n","import Sidebar from './Sidebar'\n\nexport default Sidebar\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Modal.scss'\r\n\r\nconst Modal = ({ id, transparent, canClose, title, children, footer }) => (\r\n  <div className=\"modal\" id={id}>\r\n    {!transparent\r\n      ? <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n      : <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n    }\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-header\">\r\n        {canClose &&\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n        }\r\n        <div className=\"modal-title\">\r\n          <strong style={spacedTypo}>{ title }</strong>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"content\">\r\n          { children }\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        { footer }\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n  footer: PropTypes.node,\r\n  transparent: PropTypes.bool,\r\n  canClose: PropTypes.bool\r\n}\r\n\r\nModal.defaultProps = {\r\n  children: 'Here is the default modal content ...',\r\n  title: 'TITLE',\r\n  id: 'modal',\r\n  footer: '',\r\n  transparent: true,\r\n  canClose: true\r\n}\r\n\r\nexport default Modal\r\n","import Modal from './Modal'\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport Modal from './../Modal'\r\nimport Popover from './../Popover'\r\n\r\nfunction Play({size, minutes, handleGridSizeClick, handleMinuteClick, startNewGame, clickThis}) {\r\n  const gridSizes = [];\r\n  [3,4,5,6,7].forEach((x,i) => {\r\n    if (x === size) {\r\n      gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={handleGridSizeClick}>{x}</div>\r\n    } else {\r\n      gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={handleGridSizeClick}>{x}</div>\r\n    }\r\n  })\r\n\r\n  const timerMinutes = [];\r\n  [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\r\n    // For Tutorial\r\n    if (x === 0) {\r\n      if (clickThis && clickThis === \"endless\") {\r\n        timerMinutes[i] = (\r\n          <Popover key={i.toString()} className=\"click-this\">\r\n            <div className=\"grid-box grid-minute\" onClick={handleMinuteClick}>{x}</div>\r\n          </Popover>\r\n        )\r\n        return\r\n      }\r\n    }\r\n    // Default\r\n    if (x === minutes) {\r\n      timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={handleMinuteClick}>{x}</div>\r\n    } else {\r\n      timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={handleMinuteClick}>{x}</div>\r\n    }\r\n    // EndDefault\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={`NEW GAME`}\r\n      id={`play`}\r\n      footer={\r\n        <div style={{ ...spacedTypo, ...textCenter }}>\r\n          {/* For Tutorial */}\r\n          {clickThis && clickThis === \"start\"\r\n            ? (\r\n              <Popover className=\"click-this\">\r\n                <button style={saveButton} onClick={startNewGame}>Start New Game</button>\r\n              </Popover>\r\n            )\r\n            : <button style={saveButton} onClick={startNewGame}>Start New Game</button>\r\n          }\r\n        </div>\r\n      }\r\n      transparent={false}\r\n      canClose={false}\r\n    >\r\n      <div>\r\n        <h5 style={spacedTypo}>GRID SIZE</h5>\r\n        <div>...</div>\r\n        <div>&nbsp;</div>\r\n        <div className=\"grid-box-container\" data-size={size}>\r\n          {gridSizes}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <h5 style={spacedTypo}>TIMER</h5>\r\n        <div>...</div>\r\n        <div>&nbsp;</div>\r\n        <div className=\"grid-box-container\" data-size={size}>\r\n          {timerMinutes}\r\n        </div>\r\n        <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false,\r\n  size: 5,\r\n  minutes: 5\r\n}\r\n\r\nexport default Play\r\n","import Play from './Play'\n\nexport default Play\n","import React from 'react'\nimport Modal from './../Modal'\n\nclass Player extends React.Component {\n  saveProfile() {\n    console.log('saving profile and settings ...')\n    window.location.hash = ''\n  }\n\n  render() {\n    return (\n      <Modal title={`PLAYER`} id={`player`}>\n        <div>\n          <h5 style={spacedTypo}>PROFILE</h5>\n          <div>...</div>\n          <div>&nbsp;</div>\n          <div>Username : tunjioye</div>\n          <div>&nbsp;</div>\n          <div>Highest Score : 2019</div>\n        </div>\n        <br />\n        <br />\n        <div>\n          <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\n          <div>...</div>\n          <div>&nbsp;</div>\n          <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\n          <div><em><small>cell reshuffle after submit</small></em></div>\n        </div>\n        <br />\n        <br />\n        <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\n      </Modal>\n    )\n  }\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst saveButton = {\n  background: 'transparent',\n  color: '#FFF',\n  textDecoration: 'none',\n  border: '1px solid #28F',\n  padding: '6px 8px 6px 12px',\n  cursor: 'pointer',\n  fontWeight: 600\n}\n\nexport default Player\n","import Player from './Player'\n\nexport default Player\n","import React from 'react'\nimport Modal from './../Modal'\nimport GitHubButton from 'react-github-btn'\n\nfunction Help() {\n  return (\n    <Modal title={`HELP & ABOUT`} id={`help`}>\n      <div>\n        <h5 style={spacedTypo}>HOW TO PLAY</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <div>&bull; Select some letters to make a word</div>\n        <div>&bull; Click Submit Button to evaluate your Score</div>\n        <div>&bull; QUITING IS NOT AN OPTION!</div>\n        <div>&bull; <em>How to Play Tutorial coming soon ...</em></div>\n      </div>\n      <br />\n      <br />\n      <div>\n        <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <dl style={{ ...dl }}>\n          <dt style={{ ...dl.dt }}>\n            <small>UNDO</small>\n          </dt>\n          <dd style={{ ...dl.dd }}>\n            <kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd>\n            <br />\n          </dd>\n          <dt style={{ ...dl.dt }}>\n          <small>SUBMIT</small>\n          </dt>\n          <dd style={{ ...dl.dd }}>\n            <kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd>\n            <br />\n          </dd>\n        </dl>\n      </div>\n      <br />\n      <br />\n      <div>\n        <h5 style={spacedTypo}>ABOUT</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\n        <div>&nbsp;</div>\n        <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\n        <div>&nbsp;</div>\n        <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\n      </div>\n      <br />\n      <br />\n      <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\n      <br />\n      <div style={{ ...textCenter }}>\n        <GitHubButton\n          href=\"https://github.com/tunjioye/tapword\"\n          data-icon=\"octicon-star\"\n          aria-label=\"Star tunjioye/tapword on GitHub\">Star</GitHubButton>\n        <span style={{ padding: '0 5px' }}></span>\n        <GitHubButton\n          href=\"https://github.com/tunjioye/tapword/fork\"\n          data-icon=\"octicon-repo-forked\"\n          aria-label=\"Fork tunjioye/tapword on GitHub\">Fork</GitHubButton>\n      </div>\n    </Modal>\n  )\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst kbd = {\n  border: '1px solid #28F',\n  padding: '3px 4px 3px 6px'\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst customLink = {\n  color: '#FFF',\n  textDecoration: 'none'\n}\n\nconst dl = {\n  margin: '0 auto',\n  dt: {\n    width: '80px',\n    display: 'inline-block',\n    textAlign: 'right',\n    margin: '5px auto'\n  },\n  dd: {\n    display: 'inline'\n  }\n}\n\nexport default Help\n","import Help from './Help'\n\nexport default Help\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles/index.css';\r\nimport './styles/grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordLength: props.lastWordLength,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.setMinutes = this.setMinutes.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.setSelectedCells = this.setSelectedCells.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n  }\r\n  startNewGame() {\r\n    this.setState({\r\n      newGame: true,\r\n      multiplier: 1,\r\n      score: 0,\r\n      lastWordLength: 0,\r\n      word: []\r\n    })\r\n    this.resetSelectedCells()\r\n    window.location.hash = ''\r\n    this.saveGameProgress('save')\r\n  }\r\n  quitGame(quitMessage = ' ') {\r\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\r\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\r\n    } else {\r\n      window.alert(`Your Score is : ${this.state.score}`)\r\n    }\r\n    this.setState({ newGame: false })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n  }\r\n  hasStartedNewGame() {\r\n    if (this.state.newGame) {\r\n      return true;\r\n    } else {\r\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\r\n      return false;\r\n    }\r\n  }\r\n  setMinutes(minutes) {\r\n    this.setState({ minutes })\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({ word })\r\n      // cell.classList.toggle('selected')\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    // cell.classList.add('selected')\r\n    this.setState({ word })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        // document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n        word.length--\r\n        this.setState({ word })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({ word: [] })\r\n  }\r\n  updateMultiplier(newWordLength) {\r\n    if (this.state.lastWordLength > 1) {\r\n      let lastWordLength = this.state.lastWordLength\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordLength > lastWordLength) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({ multiplier })\r\n    }\r\n  }\r\n  updateScore(wordLength) {\r\n    let score = this.state.score\r\n    score += (wordLength * this.state.multiplier)\r\n    this.updateMultiplier(wordLength)\r\n    this.setState({\r\n      score: score,\r\n      lastWordLength: wordLength\r\n    })\r\n  }\r\n  setSelectedCells() {\r\n    this.state.word.forEach(x => {\r\n      let cell = document.querySelector(`[cell=\"${x.cell}\"]`)\r\n      cell.classList.add('selected')\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n    // selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({ rows: this.randomLetters() })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      if (this.state.word.length > 0) {\r\n        this.saveGameProgress('loading')\r\n\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n              this.saveGameProgress('save')\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n              this.saveGameProgress('save')\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          if (error) {\r\n            let errorMessage = \"Network Error\"\r\n            if (error.response !== undefined) {\r\n              errorMessage = error.response.data.message\r\n            }\r\n            console.error(errorMessage)\r\n            alert(errorMessage)\r\n          }\r\n          this.saveGameProgress('save')\r\n        }.bind(this))\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500)\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText)\r\n    this.setState({ size: gridSize })\r\n    setTimeout(() => {\r\n      this.setState({ rows: this.randomLetters() })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({ minutes: parseInt(e.target.innerText) })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\r\n\r\n    // if (window.localStorage.getItem('game') && window.confirm('Resume Last Game?')) {\r\n    if (window.localStorage.getItem('game')) {\r\n      // resume last game\r\n      const lastGame = window.localStorage.getItem('game')\r\n      let parsedLastGame = JSON.parse(lastGame)\r\n\r\n      if (parsedLastGame.newGame) {\r\n        this.setState(parsedLastGame)\r\n\r\n        // dynamically set grid size style\r\n        const gridNews = document.getElementsByClassName('grid-new')\r\n        const gridContainers = document.getElementsByClassName('grid-container')\r\n        const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n        gridNews[0].setAttribute('size', parsedLastGame.size)\r\n        gridContainers[0].setAttribute('size', parsedLastGame.size)\r\n        gridSidebars[0].setAttribute('size', parsedLastGame.size)\r\n\r\n        setTimeout(() => {\r\n          this.setSelectedCells()\r\n        }, 10);\r\n      } else {\r\n        window.localStorage.removeItem('game')\r\n      }\r\n    // } else {\r\n    //   // clear last game and initialize new game\r\n    //   if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    //   window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"grid-flex\">\r\n              <GridNew\r\n                size={this.state.size}\r\n                rows={this.state.rows}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                minutes={parseFloat(this.state.minutes)}\r\n                newGame={this.state.newGame}\r\n                setMinutes={this.setMinutes}\r\n                saveGameProgress={this.saveGameProgress}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {!this.state.newGame &&\r\n          <Play\r\n            newGame={this.state.newGame}\r\n            startNewGame={this.startNewGame}\r\n            size={this.state.size}\r\n            minutes={this.state.minutes}\r\n            handleGridSizeClick={this.handleGridSizeClick}\r\n            handleMinuteClick={this.handleMinuteClick} />\r\n        }\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordLength: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles/index.css';\r\nimport './styles/grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass Tutorial extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      // tutorial: props.tutorial,\r\n      tutorialSteps: props.tutorialSteps,\r\n      currentStep: props.currentStep,\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordLength: props.lastWordLength,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.setMinutes = this.setMinutes.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n    // For Tutorial : next Tutorial Step Function\r\n    this.nextTutorialStep = this.nextTutorialStep.bind(this)\r\n  }\r\n  startNewGame() {\r\n    // For Tutorial : prevent unexpected game state for new game\r\n    if (this.state.size === 5 && this.state.minutes === 0) {\r\n      // Default\r\n      this.setState({\r\n        newGame: true,\r\n        multiplier: 1,\r\n        score: 0,\r\n        lastWordLength: 0,\r\n        word: []\r\n      })\r\n      this.resetSelectedCells()\r\n      window.location.hash = ''\r\n      this.saveGameProgress('save')\r\n      // EndDefault\r\n      this.nextTutorialStep()\r\n    } else {\r\n      this.setState({\r\n        currentStep: 1\r\n      })\r\n    }\r\n  }\r\n  quitGame(quitMessage = ' ') {\r\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\r\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\r\n    } else {\r\n      window.alert(`Your Score is : ${this.state.score}`)\r\n    }\r\n    this.setState({ newGame: false })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    // For Tutorial : end Tutorial\r\n    window.localStorage.setItem('tw_quicktutorial', \"done\")\r\n    window.alert(`Thanks for taking our Quick Tutorial`)\r\n    this.props.endTutorial()\r\n  }\r\n  hasStartedNewGame() {\r\n    return (this.state.newGame) ? true : false\r\n  }\r\n  setMinutes(minutes) {\r\n    this.setState({ minutes })\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      // For Tutorial : prevent unexpected cell click\r\n      const { tutorialSteps, currentStep } = this.state\r\n      switch(`c${tutorialSteps[currentStep]}`) {\r\n        case e.target.getAttribute('cell'):\r\n          this.nextTutorialStep()\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      // Default\r\n      this.saveGameProgress('loading')\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n      // EndDefault\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({ word })\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    this.setState({ word })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        word.length--\r\n        this.setState({ word })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({ word: [] })\r\n  }\r\n  updateMultiplier(newWordLength) {\r\n    if (this.state.lastWordLength > 1) {\r\n      let lastWordLength = this.state.lastWordLength\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordLength > lastWordLength) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({ multiplier })\r\n    }\r\n  }\r\n  updateScore(wordLength) {\r\n    let score = this.state.score\r\n    score += (wordLength * this.state.multiplier)\r\n    this.updateMultiplier(wordLength)\r\n    this.setState({\r\n      score: score,\r\n      lastWordLength: wordLength\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({ rows: this.randomLetters() })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      if (this.state.word.length > 0) {\r\n        this.saveGameProgress('loading')\r\n\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n              this.saveGameProgress('save')\r\n\r\n              // For Tutorial : next Tutotial Step on Submit\r\n              this.nextTutorialStep()\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n              this.saveGameProgress('save')\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          if (error) {\r\n            let errorMessage = \"Network Error\"\r\n            if (error.response !== undefined) {\r\n              errorMessage = error.response.data.message\r\n            }\r\n            console.error(errorMessage)\r\n            alert(errorMessage)\r\n          }\r\n          this.saveGameProgress('save')\r\n        }.bind(this))\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500)\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText)\r\n    this.setState({ size: gridSize })\r\n    setTimeout(() => {\r\n      this.setState({ rows: this.randomLetters() })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({ minutes: parseInt(e.target.innerText) })\r\n    // For Tutorial : goto next Tutorial Step only for expected minute click\r\n    const { tutorialSteps, currentStep } = this.state\r\n    if (tutorialSteps[currentStep] === \"endless\" && e.target.innerText === \"0\") this.nextTutorialStep()\r\n  }\r\n  // For Tutorial : next tutorial Step Function\r\n  nextTutorialStep() {\r\n    const { currentStep } = this.state\r\n    this.setState({\r\n      currentStep: currentStep + 1\r\n    })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\r\n  }\r\n  render() {\r\n    const wordCells = this.state.word.map(x => x.cell)\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"grid-flex\">\r\n              <GridNew\r\n                clickThis={this.state.tutorialSteps[this.state.currentStep]}\r\n                wordCells={wordCells}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                clickThis={this.state.tutorialSteps[this.state.currentStep]}\r\n                nextTutorialStep={this.nextTutorialStep}\r\n                multiplier={this.state.multiplier}\r\n                minutes={parseFloat(this.state.minutes)}\r\n                newGame={this.state.newGame}\r\n                setMinutes={this.setMinutes}\r\n                saveGameProgress={this.saveGameProgress}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {!this.state.newGame &&\r\n          <Play\r\n            clickThis={this.state.tutorialSteps[this.state.currentStep]}\r\n            newGame={this.state.newGame}\r\n            startNewGame={this.startNewGame}\r\n            size={this.state.size}\r\n            minutes={this.state.minutes}\r\n            handleGridSizeClick={this.handleGridSizeClick}\r\n            handleMinuteClick={this.handleMinuteClick} />\r\n        }\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTutorial.defaultProps = {\r\n  // tutorial: true,\r\n  tutorialSteps: [\r\n    \"play\", \"endless\", \"start\", 15, 13, \"submit\", 16, 11, 7, 8, \"submit\", \"quit\"\r\n  ],\r\n  currentStep: 0,\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordLength: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default Tutorial;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './styles/game.css'\r\nimport App from './App'\r\nimport Tutorial from './Tutorial'\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      tutorial: props.tutorial\r\n    }\r\n\r\n    this.quickTutorial = this.quickTutorial.bind(this)\r\n    this.endTutorial = this.endTutorial.bind(this)\r\n  }\r\n\r\n  quickTutorial() {\r\n    if (window.confirm('Quick Tutorial?')) {\r\n      this.setState({\r\n        tutorial: true\r\n      })\r\n    }\r\n  }\r\n\r\n  endTutorial() {\r\n    this.setState({\r\n      tutorial: false\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (!window.localStorage.getItem('tw_quicktutorial')) {\r\n        // request quick Tutoial Permission\r\n        this.quickTutorial()\r\n      } else {\r\n        this.endTutorial()\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  render() {\r\n    return (this.state.tutorial) ? <Tutorial endTutorial={this.endTutorial} /> : <App />\r\n  }\r\n}\r\n\r\nGame.propTypes = {\r\n  tutorial: PropTypes.bool\r\n}\r\n\r\nGame.defaultProps = {\r\n  tutorial: false\r\n}\r\n\r\nexport default Game\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './Game';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}