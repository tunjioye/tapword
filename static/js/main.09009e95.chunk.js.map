{"version":3,"sources":["config.js","spellcheck.js","components/Loading/Loading.jsx","components/Loading/index.js","components/Popover/Popover.jsx","components/Popover/index.js","components/GridCell/GridCell.jsx","components/GridCell/index.js","components/GridRow/GridRow.jsx","components/GridRow/index.js","components/GridNew/GridNew.jsx","components/GridNew/index.js","components/SelectionCell/SelectionCell.jsx","components/SelectionCell/index.js","components/Score/Score.jsx","components/Score/index.js","components/Selection/Selection.jsx","components/Selection/index.js","components/Countdown/Countdown.jsx","components/Countdown/index.js","components/Sidebar/Sidebar.jsx","components/Sidebar/index.js","components/Modal/Modal.jsx","components/Modal/index.js","components/Play/Play.jsx","components/Play/index.js","components/Player/Player.jsx","components/Player/index.js","components/Help/Help.jsx","components/Help/index.js","App.js","Tutorial.js","Game.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Loading","props","react_default","a","createElement","className","large","defaultProps","Popover","_ref","children","concat","GridCell","cell","cellNumber","cellInfo","wordCells","indexOf","row","rowName","onClick","handleCellClick","letter","charAt","clickThis","components_Popover","GridRow","rowLetters","i","size","components_GridCell","key","toString","rowNumber","letters","Fragment","GridNew","rows","components_GridRow","SelectionCell","style","Object","objectSpread","Score","output","score","length","components_SelectionCell","id","Selection","word","height","Countdown","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","seconds","minutes","timer","secondsToTime","bind","assertThisInitialized","calculateTimeLeft","startTimer","stopTimer","countDown","secs","divisor_for_minutes","divisor_for_seconds","m","Math","floor","s","ceil","timeLeftVar","setState","setInterval","clearInterval","_this2","setMinutes","parseFloat","toFixed","saveGameProgress","quitGame","newGame","nextProps","_this3","_this$state$time","React","Component","Sidebar","location","hash","parseInt","nextTutorialStep","timerText","components_Countdown","playOrQuitText","playOrQuitAction","openPlayModal","playOrQuit","data-tooltip","multiplier","openPlayerModal","openHelpModal","handleUndoButtonClick","handleSubmitButtonClick","Modal","transparent","canClose","title","footer","href","aria-label","background","spacedTypo","letterSpacing","wordSpacing","textTransform","margin","fontWeight","Play","handleGridSizeClick","handleMinuteClick","startNewGame","gridSizes","forEach","x","timerMinutes","components_Modal","textCenter","saveButton","data-size","marginTop","textAlign","color","textDecoration","border","padding","cursor","Player","console","log","saveProfile","kbd","customLink","dl","dt","width","display","dd","Help","quickTutorial","target","rel","react_github_btn","data-icon","App","lastWordLength","cellToggle","shuffle","shuffleAll","hasStartedNewGame","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","setSelectedCells","resetSelectedCells","shuffleCells","quitMessage","undefined","alert","confirm","chars","toConsumableArray","Array","map","random","join","e","cellName","getAttribute","filter","innerHTML","newWordLength","multiplierEl","document","getElementsByClassName","classList","add","remove","wordLength","querySelector","selectedCells","querySelectorAll","toLowerCase","get","then","response","data","corrections","getElementById","catch","errorMessage","message","savingProgress","JSON","stringify","_this4","gridSize","innerText","gridNews","gridContainers","gridSidebars","setAttribute","keyCode","preventDefault","_this5","addEventListener","generate","lastGame","parsedLastGame","parse","components_Loading","components_Score","components_Selection","minHeight","maxHeight","components_GridNew","components_Sidebar","components_Play","components_Player","components_Help","Tutorial","tutorialSteps","currentStep","endTutorial","_this$state","_this$state2","Game","tutorial","src_Tutorial","src_App_0","Boolean","hostname","match","ReactDOM","render","src_Game","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09009e95.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.scss';\n\nconst Loading = (props) => (\n  <div className={(props.large ? 'loading' : 'loading loading-lg')}></div>\n);\n\nLoading.propTypes = {\n  large: PropTypes.bool\n};\n\nLoading.defaultProps = {\n  large: false\n};\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Popover.scss'\r\n\r\nconst Popover = ({ children, className }) => (\r\n  <div className={`popover ${className}`}>\r\n    { children }\r\n    <div className=\"popover-container\"></div>\r\n  </div>\r\n)\r\n\r\nPopover.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nPopover.defaultProps = {\r\n  children: '...'\r\n}\r\n\r\nexport default Popover\r\n","import Popover from './Popover'\r\n\r\nexport default Popover\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './GridCell.scss'\r\nimport Popover from './../Popover'\r\n\r\nconst GridCell = (props) => {\r\n  const cell = `c${props.cellNumber}`\r\n\r\n  const cellInfo = (\r\n    <div\r\n      className={`grid-cell ${(props.wordCells.indexOf(cell) !== -1) ? \"selected\" : \"\"}`}\r\n      row={props.rowName}\r\n      cell={cell}\r\n      onClick={props.handleCellClick}\r\n    >\r\n      {props.letter.charAt(0)}\r\n    </div>\r\n  )\r\n\r\n  // For Tutorial : show Click This Popover for expected Grid Cell\r\n  if (props.clickThis && props.clickThis === props.cellNumber) {\r\n    return (\r\n      <Popover className=\"click-this\">\r\n        { cellInfo }\r\n      </Popover>\r\n    )\r\n  }\r\n\r\n  return (cellInfo)\r\n}\r\n\r\nGridCell.propTypes = {\r\n  letter: PropTypes.string,\r\n  rowName: PropTypes.string,\r\n  cellNumber: PropTypes.number,\r\n  wordCells: PropTypes.array,\r\n  handleCellClick: PropTypes.func\r\n}\r\n\r\nGridCell.defaultProps = {\r\n  letter: 'T',\r\n  rowName: 'r0',\r\n  cellNumber: 0,\r\n  wordCells: []\r\n}\r\n\r\nexport default GridCell\r\n","import GridCell from './GridCell'\n\nexport default GridCell\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './GridRow.scss'\r\nimport GridCell from '../GridCell'\r\n\r\nconst GridRow = (props) => {\r\n  let rowLetters = []\r\n  for (let i = 0; i < props.size; i++) {\r\n    rowLetters[i] = (\r\n      <GridCell\r\n        key={i.toString()}\r\n        rowName={`r${props.rowNumber}`}\r\n        cellNumber={((props.rowNumber * props.size) + i)}\r\n        letter={(props.letters[i]) ? props.letters[i] : ' '}\r\n        clickThis={props.clickThis}\r\n        wordCells={props.wordCells}\r\n        handleCellClick={props.handleCellClick}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      {rowLetters}\r\n    </>\r\n  )\r\n}\r\n\r\nGridRow.propTypes = {\r\n  size: PropTypes.number,\r\n  rowNumber: PropTypes.number,\r\n  letters: PropTypes.string,\r\n  wordCells: PropTypes.array,\r\n  handleCellClick: PropTypes.func\r\n}\r\n\r\nGridRow.defaultProps = {\r\n  size: 5,\r\n  rowNumber: 0,\r\n  letters: 'TAPWD',\r\n  wordCells: []\r\n}\r\n\r\nexport default GridRow\r\n","import GridRow from './GridRow'\n\nexport default GridRow\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './GridNew.scss'\r\nimport GridRow from '../GridRow'\r\n\r\nconst GridNew = (props) => {\r\n  let rows = []\r\n  for (let i = 0; i < props.size; i++) {\r\n    rows[i] = (\r\n      <GridRow\r\n        key={i.toString()}\r\n        rowNumber={i}\r\n        size={props.size}\r\n        letters={props.rows[i]}\r\n        clickThis={props.clickThis}\r\n        wordCells={props.wordCells}\r\n        handleCellClick={props.handleCellClick}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"grid-new\">\r\n        {rows}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nGridNew.propTypes = {\r\n  size: PropTypes.number,\r\n  rows: PropTypes.array,\r\n  wordCells: PropTypes.array,\r\n  handleCellClick: PropTypes.func\r\n}\r\n\r\nGridNew.defaultProps = {\r\n  size: 5,\r\n  rows: [\r\n    'TAP',\r\n    'WORD',\r\n    'GAME',\r\n    'BY',\r\n    'TUNJI',\r\n  ],\r\n  wordCells: []\r\n}\r\n\r\nexport default GridNew\r\n","import GridNew from './GridNew'\n\nexport default GridNew\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './SelectionCell.scss'\n\nconst SelectionCell = (props) => (\n  <div className=\"selection-cell\" style={{ ...props.style }}>\n    {props.letter.charAt(0)}\n  </div>\n)\n\nSelectionCell.propTypes = {\n  letter: PropTypes.string\n}\n\nSelectionCell.defaultProps = {\n  letter: 'T'\n}\n\nexport default SelectionCell\n","import SelectionCell from './SelectionCell'\n\nexport default SelectionCell\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './../Selection/Selection.scss'\nimport './Score.scss'\nimport SelectionCell from './../SelectionCell'\n\nconst Score = (props) => {\n  let output = []\n  let score = props.score.toString()\n  for (let i = 0; i < score.length; i++) {\n    output[i] = (<SelectionCell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />)\n  }\n\n  return (\n    <div className=\"selection\">\n      <span className=\"selection-info\">SCORE</span>\n      <div className=\"selection-wrapper\">\n        <span id=\"score\">{output}</span>\n      </div>\n    </div>\n  )\n}\n\nScore.propTypes = {\n  score: PropTypes.number\n}\n\nScore.defaultProps = {\n  score: 0\n}\n\nexport default Score\n","import Score from './Score'\n\nexport default Score\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Selection.scss'\r\nimport SelectionCell from './../SelectionCell'\r\n\r\nconst Selection = (props) => {\r\n  let output = []\r\n  for (let i = 0; i < props.word.length; i++) {\r\n    output[i] = (<SelectionCell key={i.toString()} letter={(props.word[i]) ? props.word[i] : ' '} />)\r\n  }\r\n\r\n  return (\r\n    // #selection-word is important for the shake animation\r\n    <div id=\"selection-word\" className=\"selection\">\r\n      <span className=\"selection-info\">WORD INPUT</span>\r\n      <div className=\"selection-wrapper\">\r\n        <span id=\"word\">\r\n          {/* important spacing fix via style */}\r\n          <SelectionCell letter=' ' style={{ height: '64px' }} />\r\n          {output}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSelection.propTypes = {\r\n  word: PropTypes.array\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: []\r\n}\r\n\r\nexport default Selection\r\n","import Selection from './Selection'\n\nexport default Selection\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Countdown.scss'\r\n// import CountdownCircle from './../CountdownCircle'\r\n\r\nclass Countdown extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      time: {},\r\n      seconds: this.props.minutes * 60\r\n    }\r\n\r\n    this.timer = 0\r\n    this.secondsToTime = this.secondsToTime.bind(this)\r\n    this.calculateTimeLeft = this.calculateTimeLeft.bind(this)\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.countDown = this.countDown.bind(this)\r\n  }\r\n\r\n  secondsToTime(secs){\r\n    let divisor_for_minutes = secs % (60 * 60)\r\n    let minutes = Math.floor(divisor_for_minutes / 60)\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60\r\n    let seconds = Math.ceil(divisor_for_seconds)\r\n\r\n    let obj = {\r\n      \"m\": minutes,\r\n      \"s\": seconds\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  calculateTimeLeft() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds)\r\n    this.setState({ time: timeLeftVar })\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000)\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(this.timer)\r\n    this.timer = 0 // reset to 0 !important\r\n  }\r\n\r\n  countDown() {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = (this.state.seconds - 1 > 0) ? this.state.seconds - 1 : 0\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n    })\r\n\r\n    if (seconds > 0) {\r\n      // set Game / App Minutes & save Game Progress\r\n      this.props.setMinutes(parseFloat(seconds / 60).toFixed(3))\r\n      setTimeout(() => {\r\n        this.props.saveGameProgress('save')\r\n      }, 1000)\r\n    } else {\r\n      // stop timer\r\n      this.stopTimer()\r\n      // Quit Game with a Time Up\r\n      this.props.quitGame('TIME UP!')\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateTimeLeft()\r\n    if (this.props.newGame) this.startTimer()\r\n    if (!this.props.newGame) this.stopTimer()\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props !== nextProps) {\r\n      setTimeout(() => {\r\n        this.setState({ seconds: nextProps.minutes * 60 })\r\n        if (nextProps.newGame) this.startTimer()\r\n        if (!nextProps.newGame) this.stopTimer()\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { minutes } = this.props\r\n    const { m, s } = this.state.time\r\n    // const minutesRadius = mapNumber(m, minutes, 0, 0, 359.9)\r\n    // const secondsRadius = mapNumber(s, 60, 0, 0, 359.9)\r\n\r\n    return (\r\n      <div>\r\n        {/* <h1>Countdown</h1> */}\r\n        <div className='countdown-wrapper'>\r\n          <div className='countdown-item'>\r\n            {/* Disabled for now because it seems hard to make responsive */}\r\n            {/* <CountdownCircle radius={(m === 0) ? secondsRadius : minutesRadius} /> */}\r\n            {(m === 0) ? s : m}\r\n            <span className=\"highlight\">{(m === 0) ? 's' : 'm'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// // Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\n// function mapNumber(number, in_min, in_max, out_min, out_max) {\r\n//   return (out_max - ((number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min)).toFixed(1)\r\n// }\r\n\r\nCountdown.propTypes = {\r\n  minutes: PropTypes.number,\r\n  newGame: PropTypes.bool,\r\n  setMinutes: PropTypes.func,\r\n  saveGameProgress: PropTypes.func,\r\n  quitGame: PropTypes.func\r\n}\r\n\r\nCountdown.defaultProps = {\r\n  minutes: 2\r\n}\r\n\r\nexport default Countdown\r\n","import Countdown from './Countdown'\r\n\r\nexport default Countdown\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Sidebar.scss'\r\nimport Countdown from './../Countdown'\r\nimport Popover from './../Popover'\r\n\r\nclass Sidebar extends React.Component {\r\n  openPlayModal() {\r\n    window.location.hash = ''\r\n    window.location.hash = 'play'\r\n    // set App Minutes\r\n    this.props.setMinutes(parseInt(this.props.minutes))\r\n    // For Tutorial\r\n    if (this.props.clickThis && this.props.clickThis === \"play\") {\r\n      this.props.nextTutorialStep()\r\n    }\r\n  }\r\n\r\n  openPlayerModal() {\r\n    window.location.hash = ''\r\n    window.location.hash = 'player'\r\n  }\r\n\r\n  openHelpModal() {\r\n    window.location.hash = ''\r\n    window.location.hash = 'help'\r\n  }\r\n\r\n  render() {\r\n    let timerText = \"Timer\"\r\n    // let timer = (<div className=\"timer\">{this.props.minutes}<span className=\"highlight\">m</span></div>)\r\n    let timer = (\r\n      <div className=\"timer\">\r\n        <Countdown\r\n          minutes={parseFloat(this.props.minutes)}\r\n          newGame={this.props.newGame}\r\n          setMinutes={this.props.setMinutes}\r\n          saveGameProgress={this.props.saveGameProgress}\r\n          quitGame={this.props.quitGame} />\r\n        {/* <span className=\"highlight\">m</span> */}\r\n      </div>\r\n    )\r\n    if (this.props.minutes === 0) {\r\n      timerText = \"Endless\"\r\n      timer = (<div className=\"timer\">&infin;</div>)\r\n    }\r\n\r\n    let playOrQuitText = \"New Game\"\r\n    let playOrQuitAction = this.openPlayModal.bind(this)\r\n    let playOrQuit = (<div>&#8227;</div>)\r\n    if (this.props.newGame) {\r\n      playOrQuitText = \"Quit\"\r\n      playOrQuitAction = this.props.quitGame\r\n      playOrQuit = (<div>&times;</div>)\r\n    }\r\n\r\n    return (\r\n      <div className=\"grid-sidebar\">\r\n        <div className=\"grid-gameplay sidebar-inner sidebar-inner-gameplay\">\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"multiplier\"><span className=\"highlight\">x</span><span>{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={timerText}>\r\n            {timer}\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Grid Size\">\r\n            <div className=\"grid-size\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n          <div className=\"grid-cell\"></div>\r\n          <div className=\"grid-cell\"></div>\r\n        </div>\r\n        <div className=\"grid-actions sidebar-inner sidebar-inner-actions\">\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Player\" onClick={this.openPlayerModal.bind(this)}>\r\n            <div>&#10033;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Help\" onClick={this.openHelpModal.bind(this)}>\r\n            <div>&#63;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip={playOrQuitText} onClick={playOrQuitAction}>\r\n            {this.props.clickThis === \"play\" || this.props.clickThis === \"quit\"\r\n              ? (\r\n                <Popover className=\"click-this\">\r\n                  { playOrQuit }\r\n                </Popover>\r\n              )\r\n              : playOrQuit\r\n            }\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Undo Word\" onClick={this.props.handleUndoButtonClick}>\r\n            <div>&#8592;</div>\r\n          </div>\r\n          <div className=\"grid-cell tooltip button alt\" data-tooltip=\"Submit Word\" onClick={this.props.handleSubmitButtonClick}>\r\n            {this.props.clickThis === \"submit\"\r\n              ? (\r\n                <Popover className=\"click-this\">\r\n                  <div>&#8629;</div>\r\n                </Popover>\r\n              )\r\n              : <div>&#8629;</div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  size: PropTypes.number,\r\n  minutes: PropTypes.number,\r\n  multiplier: PropTypes.number,\r\n  newGame: PropTypes.bool,\r\n  setMinutes: PropTypes.func,\r\n  saveGameProgress: PropTypes.func,\r\n  quitGame: PropTypes.func,\r\n  handleUndoButtonClick: PropTypes.func,\r\n  handleSubmitButtonClick: PropTypes.func,\r\n  nextTutorialStep: PropTypes.func\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  newGame: false\r\n}\r\n\r\nexport default Sidebar\r\n","import Sidebar from './Sidebar'\n\nexport default Sidebar\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Modal.scss'\r\n\r\nconst Modal = ({ id, transparent, canClose, title, children, footer }) => (\r\n  <div className=\"modal\" id={id}>\r\n    {!transparent\r\n      ? <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n      : <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n    }\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-header\">\r\n        {canClose &&\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n        }\r\n        <div className=\"modal-title\">\r\n          <strong style={spacedTypo}>{ title }</strong>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"content\">\r\n          { children }\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        { footer }\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n  footer: PropTypes.node,\r\n  transparent: PropTypes.bool,\r\n  canClose: PropTypes.bool\r\n}\r\n\r\nModal.defaultProps = {\r\n  children: 'Here is the default modal content ...',\r\n  title: 'TITLE',\r\n  id: 'modal',\r\n  footer: '',\r\n  transparent: true,\r\n  canClose: true\r\n}\r\n\r\nexport default Modal\r\n","import Modal from './Modal'\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport Modal from './../Modal'\r\nimport Popover from './../Popover'\r\n\r\nfunction Play({size, minutes, handleGridSizeClick, handleMinuteClick, startNewGame, clickThis}) {\r\n  const gridSizes = [];\r\n  [3,4,5,6,7].forEach((x,i) => {\r\n    if (x === size) {\r\n      gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size selected\" onClick={handleGridSizeClick}>{x}</div>\r\n    } else {\r\n      gridSizes[i] = <div key={i.toString()} className=\"grid-box grid-size\" onClick={handleGridSizeClick}>{x}</div>\r\n    }\r\n  })\r\n\r\n  const timerMinutes = [];\r\n  [0,1,2,3,4,5,6,7,8,9,10].forEach((x,i) => {\r\n    // For Tutorial\r\n    if (x === 0) {\r\n      if (clickThis && clickThis === \"endless\") {\r\n        timerMinutes[i] = (\r\n          <Popover key={i.toString()} className=\"click-this\">\r\n            <div className=\"grid-box grid-minute\" onClick={handleMinuteClick}>{x}</div>\r\n          </Popover>\r\n        )\r\n        return\r\n      }\r\n    }\r\n    // Default\r\n    if (x === minutes) {\r\n      timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute selected\" onClick={handleMinuteClick}>{x}</div>\r\n    } else {\r\n      timerMinutes[i] = <div key={i.toString()} className=\"grid-box grid-minute\" onClick={handleMinuteClick}>{x}</div>\r\n    }\r\n    // EndDefault\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={`NEW GAME`}\r\n      id={`play`}\r\n      footer={\r\n        <div style={{ ...spacedTypo, ...textCenter }}>\r\n          {/* For Tutorial */}\r\n          {clickThis && clickThis === \"start\"\r\n            ? (\r\n              <Popover className=\"click-this\">\r\n                <button style={saveButton} onClick={startNewGame}>Start New Game</button>\r\n              </Popover>\r\n            )\r\n            : <button style={saveButton} onClick={startNewGame}>Start New Game</button>\r\n          }\r\n        </div>\r\n      }\r\n      transparent={false}\r\n      canClose={false}\r\n    >\r\n      <div>\r\n        <h5 style={spacedTypo}>GRID SIZE</h5>\r\n        <div>...</div>\r\n        <div>&nbsp;</div>\r\n        <div className=\"grid-box-container\" data-size={size}>\r\n          {gridSizes}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <h5 style={spacedTypo}>TIMER</h5>\r\n        <div>...</div>\r\n        <div>&nbsp;</div>\r\n        <div className=\"grid-box-container\" data-size={size}>\r\n          {timerMinutes}\r\n        </div>\r\n        <div style={{ marginTop: '.4rem' }}><em><small>select 0 for endless mode</small></em></div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 600\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 600\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false,\r\n  size: 5,\r\n  minutes: 5\r\n}\r\n\r\nexport default Play\r\n","import Play from './Play'\n\nexport default Play\n","import React from 'react'\nimport Modal from './../Modal'\n\nclass Player extends React.Component {\n  saveProfile() {\n    console.log('saving profile and settings ...')\n    window.location.hash = ''\n  }\n\n  render() {\n    return (\n      <Modal title={`PLAYER`} id={`player`}>\n        <div>\n          <h5 style={spacedTypo}>PROFILE</h5>\n          <div>...</div>\n          <div>&nbsp;</div>\n          <div>Username : tunjioye</div>\n          <div>&nbsp;</div>\n          <div>Highest Score : 2019</div>\n        </div>\n        <br />\n        <br />\n        <div>\n          <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\n          <div>...</div>\n          <div>&nbsp;</div>\n          <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\n          <div><em><small>cell reshuffle after submit</small></em></div>\n        </div>\n        <br />\n        <br />\n        <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveProfile.bind(this)}>Save Profile</button></div>\n      </Modal>\n    )\n  }\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst saveButton = {\n  background: 'transparent',\n  color: '#FFF',\n  textDecoration: 'none',\n  border: '1px solid #28F',\n  padding: '6px 8px 6px 12px',\n  cursor: 'pointer',\n  fontWeight: 600\n}\n\nexport default Player\n","import Player from './Player'\n\nexport default Player\n","import React from 'react'\nimport Modal from './../Modal'\nimport GitHubButton from 'react-github-btn'\n\nfunction Help({ quickTutorial, newGame }) {\n  return (\n    <Modal title={`HELP & ABOUT`} id={`help`}>\n      {(quickTutorial && !newGame) &&\n        <>\n          <div>\n            <h5 style={spacedTypo}>HOW TO PLAY</h5>\n            <div>...</div>\n            <div>&nbsp;</div>\n            <button style={saveButton} onClick={quickTutorial}>Play Quick Tutorial</button>\n          </div>\n          <br />\n          <br />\n        </>\n      }\n      <div>\n        <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <dl style={{ ...dl }}>\n          <dt style={{ ...dl.dt }}>\n            <small>UNDO</small>\n          </dt>\n          <dd style={{ ...dl.dd }}>\n            <kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd>\n            <br />\n          </dd>\n          <dt style={{ ...dl.dt }}>\n          <small>SUBMIT</small>\n          </dt>\n          <dd style={{ ...dl.dd }}>\n            <kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd>\n            <br />\n          </dd>\n        </dl>\n      </div>\n      <br />\n      <br />\n      <div>\n        <h5 style={spacedTypo}>ABOUT</h5>\n        <div>...</div>\n        <div>&nbsp;</div>\n        <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\n        <div>&nbsp;</div>\n        <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\n        <div>&nbsp;</div>\n        <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\n        <br />\n        <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\n        <br />\n        <div style={{ ...textCenter }}>\n          <GitHubButton\n            href=\"https://github.com/tunjioye/tapword\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star tunjioye/tapword on GitHub\">Star</GitHubButton>\n          <span style={{ padding: '0 5px' }}></span>\n          <GitHubButton\n            href=\"https://github.com/tunjioye/tapword/fork\"\n            data-icon=\"octicon-repo-forked\"\n            aria-label=\"Fork tunjioye/tapword on GitHub\">Fork</GitHubButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nconst spacedTypo = {\n  letterSpacing: '0.1rem',\n  wordSpacing: '0.2rem',\n  textTransform: 'uppercase',\n  margin: 0,\n  fontWeight: 600\n}\n\nconst kbd = {\n  border: '1px solid #28F',\n  padding: '3px 4px 3px 6px'\n}\n\nconst textCenter = {\n  textAlign: 'center'\n}\n\nconst customLink = {\n  color: '#FFF',\n  textDecoration: 'none'\n}\n\nconst dl = {\n  margin: '0 auto',\n  dt: {\n    width: '80px',\n    display: 'inline-block',\n    textAlign: 'right',\n    margin: '5px auto'\n  },\n  dd: {\n    display: 'inline'\n  }\n}\n\nconst saveButton = {\n  background: 'transparent',\n  color: '#FFF',\n  textDecoration: 'none',\n  border: '1px solid #28F',\n  padding: '6px 8px 6px 12px',\n  cursor: 'pointer',\n  fontWeight: 600\n}\n\nexport default Help\n","import Help from './Help'\n\nexport default Help\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles/index.css';\r\nimport './styles/grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordLength: props.lastWordLength,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.setMinutes = this.setMinutes.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.setSelectedCells = this.setSelectedCells.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n  }\r\n  startNewGame() {\r\n    this.setState({\r\n      newGame: true,\r\n      multiplier: 1,\r\n      score: 0,\r\n      lastWordLength: 0,\r\n      word: []\r\n    })\r\n    this.resetSelectedCells()\r\n    window.location.hash = ''\r\n    this.saveGameProgress('save')\r\n  }\r\n  quitGame(quitMessage = ' ') {\r\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\r\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\r\n    } else {\r\n      window.alert(`Your Score is : ${this.state.score}`)\r\n    }\r\n    this.setState({ newGame: false })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n  }\r\n  hasStartedNewGame() {\r\n    if (this.state.newGame) {\r\n      return true;\r\n    } else {\r\n      if (window.confirm('Would You like to Start a New Game?')) window.location.hash = 'play'\r\n      return false;\r\n    }\r\n  }\r\n  setMinutes(minutes) {\r\n    this.setState({ minutes })\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({ word })\r\n      // cell.classList.toggle('selected')\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    // cell.classList.add('selected')\r\n    this.setState({ word })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        // document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n        word.length--\r\n        this.setState({ word })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({ word: [] })\r\n  }\r\n  updateMultiplier(newWordLength) {\r\n    if (this.state.lastWordLength > 1) {\r\n      let lastWordLength = this.state.lastWordLength\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordLength > lastWordLength) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({ multiplier })\r\n    }\r\n  }\r\n  updateScore(wordLength) {\r\n    let score = this.state.score\r\n    score += (wordLength * this.state.multiplier)\r\n    this.updateMultiplier(wordLength)\r\n    this.setState({\r\n      score: score,\r\n      lastWordLength: wordLength\r\n    })\r\n  }\r\n  setSelectedCells() {\r\n    this.state.word.forEach(x => {\r\n      let cell = document.querySelector(`[cell=\"${x.cell}\"]`)\r\n      cell.classList.add('selected')\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n    // selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({ rows: this.randomLetters() })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      if (this.state.word.length > 0) {\r\n        this.saveGameProgress('loading')\r\n\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n              this.saveGameProgress('save')\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n              this.saveGameProgress('save')\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          if (error) {\r\n            let errorMessage = \"Network Error\"\r\n            if (error.response !== undefined) {\r\n              errorMessage = error.response.data.message\r\n            }\r\n            console.error(errorMessage)\r\n            alert(errorMessage)\r\n          }\r\n          this.saveGameProgress('save')\r\n        }.bind(this))\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500)\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText)\r\n    this.setState({ size: gridSize })\r\n    setTimeout(() => {\r\n      this.setState({ rows: this.randomLetters() })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({ minutes: parseInt(e.target.innerText) })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\r\n\r\n    // if (window.localStorage.getItem('game') && window.confirm('Resume Last Game?')) {\r\n    if (window.localStorage.getItem('game')) {\r\n      // resume last game\r\n      const lastGame = window.localStorage.getItem('game')\r\n      let parsedLastGame = JSON.parse(lastGame)\r\n\r\n      if (parsedLastGame.newGame) {\r\n        this.setState(parsedLastGame)\r\n\r\n        // dynamically set grid size style\r\n        const gridNews = document.getElementsByClassName('grid-new')\r\n        const gridContainers = document.getElementsByClassName('grid-container')\r\n        const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n        gridNews[0].setAttribute('size', parsedLastGame.size)\r\n        gridContainers[0].setAttribute('size', parsedLastGame.size)\r\n        gridSidebars[0].setAttribute('size', parsedLastGame.size)\r\n\r\n        setTimeout(() => {\r\n          this.setSelectedCells()\r\n        }, 10);\r\n      } else {\r\n        window.localStorage.removeItem('game')\r\n      }\r\n    // } else {\r\n    //   // clear last game and initialize new game\r\n    //   if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    //   window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    const wordCells = this.state.word.map(x => x.cell)\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div style={{ padding: '1rem' }}>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"grid-flex\">\r\n              <GridNew\r\n                size={this.state.size}\r\n                rows={this.state.rows}\r\n                wordCells={wordCells}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                size={this.state.size}\r\n                minutes={parseFloat(this.state.minutes)}\r\n                newGame={this.state.newGame}\r\n                setMinutes={this.setMinutes}\r\n                saveGameProgress={this.saveGameProgress}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {!this.state.newGame &&\r\n          <Play\r\n            newGame={this.state.newGame}\r\n            startNewGame={this.startNewGame}\r\n            size={this.state.size}\r\n            minutes={this.state.minutes}\r\n            handleGridSizeClick={this.handleGridSizeClick}\r\n            handleMinuteClick={this.handleMinuteClick} />\r\n        }\r\n        <Player />\r\n        <Help\r\n          newGame={this.state.newGame}\r\n          quickTutorial={this.props.quickTutorial} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordLength: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './styles/index.css';\r\nimport './styles/grids.scss';\r\nimport spellcheck from './spellcheck';\r\nimport Loading from './components/Loading';\r\n// import Topbar from './components/Topbar';\r\nimport GridNew from './components/GridNew';\r\n// import Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Player from './components/Player';\r\nimport Help from './components/Help';\r\n\r\nclass Tutorial extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      // tutorial: props.tutorial,\r\n      tutorialSteps: props.tutorialSteps,\r\n      currentStep: props.currentStep,\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      minutes: props.minutes,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      score: props.score,\r\n      lastWordLength: props.lastWordLength,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.hasStartedNewGame = this.hasStartedNewGame.bind(this)\r\n    this.setMinutes = this.setMinutes.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n    this.saveGameProgress = this.saveGameProgress.bind(this)\r\n    this.handleGridSizeClick = this.handleGridSizeClick.bind(this)\r\n    this.handleMinuteClick = this.handleMinuteClick.bind(this)\r\n    // For Tutorial : next Tutorial Step Function\r\n    this.nextTutorialStep = this.nextTutorialStep.bind(this)\r\n  }\r\n  startNewGame() {\r\n    // For Tutorial : prevent unexpected game state for new game\r\n    if (this.state.size === 5 && this.state.minutes === 0) {\r\n      // Default\r\n      this.setState({\r\n        newGame: true,\r\n        multiplier: 1,\r\n        score: 0,\r\n        lastWordLength: 0,\r\n        word: []\r\n      })\r\n      this.resetSelectedCells()\r\n      window.location.hash = ''\r\n      this.saveGameProgress('save')\r\n      // EndDefault\r\n      this.nextTutorialStep()\r\n    } else {\r\n      this.setState({\r\n        currentStep: 1\r\n      })\r\n    }\r\n  }\r\n  quitGame(quitMessage = ' ') {\r\n    if (typeof(quitMessage) === 'string' && quitMessage !== '') {\r\n      window.alert(`${quitMessage} \\r\\nYour Score is : ${this.state.score}`)\r\n    } else {\r\n      window.alert(`Your Score is : ${this.state.score}`)\r\n    }\r\n    this.setState({ newGame: false })\r\n    if (window.localStorage.getItem('game')) window.localStorage.removeItem('game')\r\n    // For Tutorial : end Tutorial\r\n    window.localStorage.setItem('tw_quicktutorial', \"done\")\r\n    window.alert(`Thanks for taking our Quick Tutorial`)\r\n    this.props.endTutorial()\r\n  }\r\n  hasStartedNewGame() {\r\n    return (this.state.newGame) ? true : false\r\n  }\r\n  setMinutes(minutes) {\r\n    this.setState({ minutes })\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      // For Tutorial : prevent unexpected cell click\r\n      const { tutorialSteps, currentStep } = this.state\r\n      switch(`c${tutorialSteps[currentStep]}`) {\r\n        case e.target.getAttribute('cell'):\r\n          this.nextTutorialStep()\r\n          break;\r\n        default:\r\n          return\r\n      }\r\n      // Default\r\n      this.saveGameProgress('loading')\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n      if (this.state.cellToggle) {\r\n        // cell toggle\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else {\r\n          this.toggleSelectionWord(e)\r\n        }\r\n      } else {\r\n        // word pop\r\n        if (word.filter(x => x.cell === cellName).length === 0) {\r\n          this.pushSelectionWord(cell)\r\n        } else if (word[word.length - 1].cell === cellName) {\r\n          this.popSelectionWord()\r\n        }\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n      // EndDefault\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      let cell = e.target\r\n      let cellName = cell.getAttribute('cell')\r\n      let word = this.state.word\r\n\r\n      word = word.filter(x => x.cell !== cellName)\r\n      this.setState({ word })\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    this.setState({ word })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      this.saveGameProgress('loading')\r\n\r\n      if (this.state.word.length > 0) {\r\n        let word = this.state.word\r\n        word.length--\r\n        this.setState({ word })\r\n      }\r\n\r\n      this.saveGameProgress('save')\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({ word: [] })\r\n  }\r\n  updateMultiplier(newWordLength) {\r\n    if (this.state.lastWordLength > 1) {\r\n      let lastWordLength = this.state.lastWordLength\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordLength > lastWordLength) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordLength < lastWordLength && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({ multiplier })\r\n    }\r\n  }\r\n  updateScore(wordLength) {\r\n    let score = this.state.score\r\n    score += (wordLength * this.state.multiplier)\r\n    this.updateMultiplier(wordLength)\r\n    this.setState({\r\n      score: score,\r\n      lastWordLength: wordLength\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({ rows: this.randomLetters() })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.hasStartedNewGame()) {\r\n      if (this.state.word.length > 0) {\r\n        this.saveGameProgress('loading')\r\n\r\n        let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n        spellcheck.get('?text=' + word)\r\n        .then(function (response) {\r\n          let selectedCells = document.querySelectorAll('[class=\"grid-cell selected\"]')\r\n          if (response.data.corrections[word] === undefined) {\r\n            selectedCells.forEach(x => x.classList.add('flash-success'))\r\n            setTimeout(() => {\r\n              selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n              this.updateScore(word.length)\r\n              this.clearSelectionWord()\r\n              this.resetSelectedCells()\r\n              this.saveGameProgress('save')\r\n\r\n              // For Tutorial : next Tutotial Step on Submit\r\n              this.nextTutorialStep()\r\n            }, 500)\r\n          } else {\r\n            document.getElementById('selection-word').classList.add('shake')\r\n            selectedCells.forEach(x => x.classList.add('flash-error'))\r\n            setTimeout(() => {\r\n              document.getElementById('selection-word').classList.remove('shake')\r\n              selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n              this.saveGameProgress('save')\r\n            }, 500)\r\n          }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n          if (error) {\r\n            let errorMessage = \"Network Error\"\r\n            if (error.response !== undefined) {\r\n              errorMessage = error.response.data.message\r\n            }\r\n            console.error(errorMessage)\r\n            alert(errorMessage)\r\n          }\r\n          this.saveGameProgress('save')\r\n        }.bind(this))\r\n      }\r\n    }\r\n  }\r\n  saveGameProgress(state) {\r\n    const savingProgress = document.getElementById('saving-progress')\r\n    switch (state) {\r\n      case 'save':\r\n        // save game progress & hide saving progress indicator\r\n        setTimeout(() => {\r\n          window.localStorage.setItem('game', JSON.stringify(this.state))\r\n          savingProgress.classList.add('d-hide')\r\n        }, 500)\r\n        break;\r\n      case 'loading':\r\n      default:\r\n        // show saving progress indicator\r\n        savingProgress.classList.remove('d-hide')\r\n        break;\r\n    }\r\n  }\r\n  handleGridSizeClick(e) {\r\n    const gridSize = parseInt(e.target.innerText)\r\n    this.setState({ size: gridSize })\r\n    setTimeout(() => {\r\n      this.setState({ rows: this.randomLetters() })\r\n\r\n      // dynamically set grid size style\r\n      const gridNews = document.getElementsByClassName('grid-new')\r\n      const gridContainers = document.getElementsByClassName('grid-container')\r\n      const gridSidebars = document.getElementsByClassName('grid-sidebar')\r\n\r\n      gridNews[0].setAttribute('size', gridSize)\r\n      gridContainers[0].setAttribute('size', gridSize)\r\n      gridSidebars[0].setAttribute('size', gridSize)\r\n    }, 10)\r\n  }\r\n  handleMinuteClick(e) {\r\n    this.setState({ minutes: parseInt(e.target.innerText) })\r\n    // For Tutorial : goto next Tutorial Step only for expected minute click\r\n    const { tutorialSteps, currentStep } = this.state\r\n    if (tutorialSteps[currentStep] === \"endless\" && e.target.innerText === \"0\") this.nextTutorialStep()\r\n  }\r\n  // For Tutorial : next tutorial Step Function\r\n  nextTutorialStep() {\r\n    const { currentStep } = this.state\r\n    this.setState({\r\n      currentStep: currentStep + 1\r\n    })\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) this.setState({ rows: this.randomLetters() })\r\n  }\r\n  render() {\r\n    const wordCells = this.state.word.map(x => x.cell)\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div id=\"saving-progress\" className=\"d-hide\">\r\n            <Loading />\r\n          </div>\r\n          <div style={{ padding: '1rem' }}>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ minHeight: '8px', maxHeight: '8px' }}>&nbsp;</div>\r\n\r\n            <div className=\"grid-flex\">\r\n              <GridNew\r\n                clickThis={this.state.tutorialSteps[this.state.currentStep]}\r\n                wordCells={wordCells}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                clickThis={this.state.tutorialSteps[this.state.currentStep]}\r\n                nextTutorialStep={this.nextTutorialStep}\r\n                multiplier={this.state.multiplier}\r\n                size={this.state.size}\r\n                minutes={parseFloat(this.state.minutes)}\r\n                newGame={this.state.newGame}\r\n                setMinutes={this.setMinutes}\r\n                saveGameProgress={this.saveGameProgress}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {!this.state.newGame &&\r\n          <Play\r\n            clickThis={this.state.tutorialSteps[this.state.currentStep]}\r\n            newGame={this.state.newGame}\r\n            startNewGame={this.startNewGame}\r\n            size={this.state.size}\r\n            minutes={this.state.minutes}\r\n            handleGridSizeClick={this.handleGridSizeClick}\r\n            handleMinuteClick={this.handleMinuteClick} />\r\n        }\r\n        <Player />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTutorial.defaultProps = {\r\n  // tutorial: true,\r\n  tutorialSteps: [\r\n    \"play\", \"endless\", \"start\", 15, 13, \"submit\", 16, 11, 7, 8, \"submit\", \"quit\"\r\n  ],\r\n  currentStep: 0,\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  minutes: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  score: 0,\r\n  lastWordLength: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default Tutorial;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './styles/game.css'\r\nimport App from './App'\r\nimport Tutorial from './Tutorial'\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      tutorial: props.tutorial\r\n    }\r\n\r\n    this.quickTutorial = this.quickTutorial.bind(this)\r\n    this.endTutorial = this.endTutorial.bind(this)\r\n  }\r\n\r\n  quickTutorial() {\r\n    if (window.confirm('Quick Tutorial?')) {\r\n      this.setState({\r\n        tutorial: true\r\n      })\r\n    }\r\n  }\r\n\r\n  endTutorial() {\r\n    this.setState({\r\n      tutorial: false\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (!window.localStorage.getItem('tw_quicktutorial')) {\r\n        // request quick Tutoial Permission\r\n        this.quickTutorial()\r\n      } else {\r\n        this.endTutorial()\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  render() {\r\n    return (this.state.tutorial)\r\n      ? <Tutorial endTutorial={this.endTutorial} />\r\n      : <App quickTutorial={this.quickTutorial} />\r\n  }\r\n}\r\n\r\nGame.propTypes = {\r\n  tutorial: PropTypes.bool\r\n}\r\n\r\nGame.defaultProps = {\r\n  tutorial: false\r\n}\r\n\r\nexport default Game\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './Game';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}