{"version":3,"sources":["config.js","spellcheck.js","components/Cell.js","components/Row.js","components/Grid.js","components/Score.js","components/Selection.js","components/Sidebar.js","components/Play.js","components/Settings.js","components/Help.js","App.js","serviceWorker.js","index.js"],"names":["config","SPELLCHECK_API_KEY","spellcheck","axios","create","baseURL","headers","X-RapidAPI-Key","removeLastWordRequest","window","localStorage","getItem","removeItem","interceptors","request","use","arguments","Promise","reject","setItem","setTimeout","error","Cell","react_default","a","createElement","className","this","props","cell","cellName","onClick","handleCellClick","letter","charAt","React","Component","defaultProps","Row","rowLetters","i","size","components_Cell","key","toString","rowNumber","letters","Grid","rows","components_Row","generate","Score","output","score","length","id","Selection","word","Sidebar","location","hash","timer","playOrQuit","playOrQuitText","endless","minutes","newGame","quitGame","openPlayModal","bind","data-tooltip","multiplier","handleUndoButtonClick","handleSubmitButtonClick","openSettingsModal","openHelpModal","Play","style","background","spacedTypo","replace","Object","objectSpread","textCenter","saveButton","startNewGame","letterSpacing","wordSpacing","textTransform","margin","fontWeight","textAlign","color","textDecoration","border","padding","cursor","Settings","console","log","href","aria-label","saveSettings","kbd","customLink","Help","target","rel","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","lastWordScore","cellToggle","shuffle","shuffleAll","assertThisInitialized","randomLetters","toggleSelectionWord","pushSelectionWord","popSelectionWord","handleKeyUp","submitWord","updateMultiplier","updateScore","clearSelectionWord","resetSelectedCells","shuffleCells","setState","alert","chars","toConsumableArray","Array","parseInt","map","x","Math","floor","random","join","e","getAttribute","filter","classList","toggle","innerHTML","add","document","querySelectorAll","remove","newWordScore","multiplierEl","getElementsByClassName","wordScore","selectedCells","forEach","toLowerCase","get","then","response","_this2","undefined","data","corrections","getElementById","catch","finally","keyCode","preventDefault","addEventListener","components_Score","components_Selection","components_Grid","components_Sidebar","components_Play","components_Settings","components_Help","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4RAIeA,EAJF,CACXC,mBAAoB,sDCEhBC,SAAaC,EAAMC,OAAO,CAC9BC,QAAS,wDACTC,QAAS,CACPC,iBAAkBP,EAAOC,sBAI7B,SAASO,IACHC,OAAOC,aAAaC,QAAQ,sBAC9BF,OAAOC,aAAaE,WAAW,qBAGnCJ,IAGAN,EAAWW,aAAaC,QAAQC,IAAI,SAAUf,GAE5C,GAAIS,OAAOC,aAAaC,QAAQ,sBACbF,OAAOC,aAAaC,QAAQ,uBAC1BK,UAAU,GAAV,IACjB,OAAOC,QAAQC,QAAO,GAW1B,OAPAT,OAAOC,aAAaS,QAAQ,oBAAqBH,UAAU,GAAV,KAGjDI,WAAW,WACTZ,KACC,KAEIR,GACN,SAAUqB,GAEX,OAAOJ,QAAQC,OAAOG,KAGTnB,QCtCToB,mLAEF,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAYC,KAAKC,MAAMF,UAAa,QAAUC,KAAKC,MAAMF,UAAY,OACrEG,KAAMF,KAAKC,MAAME,SACjBC,QAASJ,KAAKC,MAAMI,iBAEnBL,KAAKC,MAAMK,OAAOC,OAAO,WARfC,IAAMC,WAczBd,EAAKe,aAAe,CAClBJ,OAAQ,KAGKX,QCjBTgB,mLAGF,IADA,IAAIC,EAAa,GACRC,EAAI,EAAGA,EAAIb,KAAKC,MAAMa,KAAMD,IACnCD,EAAWC,GAAKjB,EAAAC,EAAAC,cAACiB,EAAD,CACdC,IAAKH,EAAEI,WACPd,SAAU,KAAQH,KAAKC,MAAMiB,UAAYlB,KAAKC,MAAMa,KAAQD,GAC5DP,OAASN,KAAKC,MAAMkB,QAAQN,GAAMb,KAAKC,MAAMkB,QAAQN,GAAK,IAC1DR,gBAAiBL,KAAKC,MAAMI,kBAEhC,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAKC,MAAMF,UAAa,OAASC,KAAKC,MAAMF,UAAY,OACtEa,UAZSJ,IAAMC,WAkBxBE,EAAID,aAAe,CACjBI,KAAM,EACNK,QAAS,SAGIR,QCvBTS,mLAGF,IADA,IAAIC,EAAO,GACFR,EAAI,EAAGA,EAAIb,KAAKC,MAAMa,KAAMD,IACnCQ,EAAKR,GAAKjB,EAAAC,EAAAC,cAACwB,EAAD,CACRN,IAAKH,EAAEI,WACPC,UAAWL,EACXC,KAAMd,KAAKC,MAAMa,KACjBK,QAASnB,KAAKC,MAAMoB,KAAKR,GACzBR,gBAAiBL,KAAKC,MAAMI,kBAEhC,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZsB,WAdQb,IAAMC,WAqBzBW,EAAKV,aAAe,CAClBa,UAAU,EACVT,KAAM,EACNO,KAAM,CACJ,MACA,OACA,OACA,KACA,UAIWD,QCjCTI,mLAIF,IAFA,IAAIC,EAAS,GACTC,EAAQ1B,KAAKC,MAAMyB,MAAMT,WACpBJ,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAChCY,EAAOZ,GAAKjB,EAAAC,EAAAC,cAACiB,EAAD,CAAMC,IAAKH,EAAEI,WAAYX,OAASoB,EAAMb,GAAMa,EAAMb,GAAK,MAEvE,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAM8B,GAAG,SAASH,YAXRjB,IAAMC,WAkB1Be,EAAMd,aAAe,CACnBgB,MAAO,GAGMF,QCtBTK,mLAGF,IADA,IAAIJ,EAAS,GACJZ,EAAI,EAAGA,EAAIb,KAAKC,MAAM6B,KAAKH,OAAQd,IAC1CY,EAAOZ,GAAKjB,EAAAC,EAAAC,cAACiB,EAAD,CAAMC,IAAKH,EAAEI,WAAYX,OAASN,KAAKC,MAAM6B,KAAKjB,GAAMb,KAAKC,MAAM6B,KAAKjB,GAAK,MAE3F,OACEjB,EAAAC,EAAAC,cAAA,OAAK8B,GAAG,iBAAiB7B,UAAU,aACjCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAM8B,GAAG,QAAQH,YAVHjB,IAAMC,WAiB9BoB,EAAUnB,aAAe,CACvBoB,KAAM,IAGOD,QCtBTE,0LAEFjD,OAAOkD,SAASC,KAAO,mDAGvBnD,OAAOkD,SAASC,KAAO,mDAGvBnD,OAAOkD,SAASC,KAAO,wCAGvB,IAAIC,EAMAC,EACAC,EAQJ,OAbEF,EADElC,KAAKC,MAAMoC,QACLzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,UAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,KAAKC,MAAMqC,QAAQ1C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,MAItDC,KAAKC,MAAMsC,SACbH,EAAiB,OACjBD,EAAavC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,QAASJ,KAAKC,MAAMuC,UAAhD,UAEbJ,EAAiB,WACjBD,EAAavC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,QAASJ,KAAKyC,cAAcC,KAAK1C,OAA7D,WAGbJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,oBACzC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAwBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,KAAoCH,EAAAC,EAAAC,cAAA,QAAM8B,GAAG,cAAc5B,KAAKC,MAAM2C,cAE/GhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,SACxCT,GAEHtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,aACzC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,SAAmCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,KAAKC,MAAMa,QAE5ElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,aACzC/C,EAAAC,EAAAC,cAAA,UAAQ8B,GAAG,OAAO7B,UAAU,SAASK,QAASJ,KAAKC,MAAM4C,uBAAzD,WAEFjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,eACzC/C,EAAAC,EAAAC,cAAA,UAAQ8B,GAAG,SAAS7B,UAAU,SAASK,QAASJ,KAAKC,MAAM6C,yBAA3D,YAGJlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,YACzC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,QAASJ,KAAK+C,kBAAkBL,KAAK1C,OAAjE,WAEFJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAa,QACzC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaK,QAASJ,KAAKgD,cAAcN,KAAK1C,OAA7D,MAEFJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4C,eAAcP,GACzCD,YArDS3B,IAAMC,WA6D5BsB,EAAQrB,aAAe,CACrBI,KAAM,EACNwB,QAAS,EACTM,WAAY,EACZP,SAAS,EACTE,SAAS,GAGIR,eCrETkB,mLAEF,OACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ6B,GAAG,QACxBhC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBmD,MAAO,CAAEC,WAAY,qBACrDvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQoD,MAAOE,GAAf,cAGJxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,aACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGmB,WAAWoC,QAAQ,KAAM,OAE7CzD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,SACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAImB,WAAWoC,QAAQ,KAAM,MACxDzD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+CAIfF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKoD,MAAKI,OAAAC,EAAA,EAAAD,CAAA,GAAOF,EAAeI,IAAc5D,EAAAC,EAAAC,cAAA,UAAQoD,MAAOO,EAAYrD,QAASJ,KAAKC,MAAMyD,cAA/C,6BAhCvClD,IAAMC,WAwCnB2C,EAAa,CACjBO,cAAe,SACfC,YAAa,SACbC,cAAe,YACfC,OAAQ,EACRC,WAAY,KAGRP,EAAa,CACjBQ,UAAW,UAGPP,EAAa,CACjBN,WAAY,cACZc,MAAO,OACPC,eAAgB,OAChBC,OAAQ,iBACRC,QAAS,mBACTC,OAAQ,UACRN,WAAY,KAGdd,EAAKvC,aAAe,CAClB6B,SAAS,GAGIU,QClETqB,yLAEFC,QAAQC,IAAI,wDAGZ,OACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ6B,GAAG,YACxBhC,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,SAAS1E,UAAU,gBAAgB2E,aAAW,SAAtD,KACA9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,SAAS1E,UAAU,gBAAgB2E,aAAW,SAAtD,KACA9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQoD,MAAOE,GAAf,mBAGJxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,aACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGmB,WAAWoC,QAAQ,KAAM,OAE7CzD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,SACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAImB,WAAWoC,QAAQ,KAAM,MACxDzD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,6CAEXF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,qBACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+CAEXF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoD,MAAKI,OAAAC,EAAA,EAAAD,CAAA,GAAOF,EAAeI,IAAc5D,EAAAC,EAAAC,cAAA,UAAQoD,MAAOO,EAAYrD,QAASJ,KAAK2E,aAAajC,KAAK1C,OAA3D,oBAGlDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BA9CFS,IAAMC,WAqDvB2C,EAAa,CACjBO,cAAe,SACfC,YAAa,SACbC,cAAe,YACfC,OAAQ,EACRC,WAAY,KAGRP,EAAa,CACjBQ,UAAW,UAGPP,EAAa,CACjBN,WAAY,cACZc,MAAO,OACPC,eAAgB,OAChBC,OAAQ,iBACRC,QAAS,mBACTC,OAAQ,UACRN,WAAY,KAGCO,ICrBf,IAAMlB,EAAa,CACjBO,cAAe,SACfC,YAAa,SACbC,cAAe,YACfC,OAAQ,EACRC,WAAY,KAGRa,EAAM,CACVT,OAAQ,iBACRC,QAAS,mBAGLZ,EAAa,CACjBQ,UAAW,UAGPa,EAAa,CACjBZ,MAAO,OACPC,eAAgB,QAGHY,EA5Ef,WACE,OACElF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ6B,GAAG,QACxBhC,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,SAAS1E,UAAU,gBAAgB2E,aAAW,SAAtD,KACA9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,SAAS1E,UAAU,gBAAgB2E,aAAW,SAAtD,KACA9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQoD,MAAOE,GAAf,kBAGJxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,eACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,gDAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,sBACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKoD,MAAO0B,GAAZ,QAAL,iBAAoDhF,EAAAC,EAAAC,cAAA,mBAApD,iBAAyFF,EAAAC,EAAAC,cAAA,OAAKoD,MAAO0B,GAAZ,OAAzF,qCAAqKhF,EAAAC,EAAAC,cAAA,sBACrKF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKoD,MAAO0B,GAAZ,SAAL,aAA+ChF,EAAAC,EAAAC,cAAA,mBAA/C,aAA8EF,EAAAC,EAAAC,cAAA,OAAKoD,MAAO0B,GAAZ,SAA9E,yBAA0IhF,EAAAC,EAAAC,cAAA,yBAE5IF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIoD,MAAOE,GAAX,SACAxD,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,iCAAf,2KACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKoD,MAAOM,GAAY5D,EAAAC,EAAAC,cAAA,8DACxBF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKoD,MAAKI,OAAAC,EAAA,EAAAD,CAAA,GAAOF,EAAeI,IAAhC,sBAEF5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoD,MAAKI,OAAAC,EAAA,EAAAD,CAAA,GAAOF,EAAeI,IAAhC,OAAkD5D,EAAAC,EAAAC,cAAA,KAAGoD,MAAO2B,EAAYJ,KAAK,sCAAsCM,OAAO,SAASC,IAAI,uBAArF,YAAlD,UAGJpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBCtCjBkF,cACJ,SAAAA,EAAYhF,GAAO,IAAAiF,EAAA,OAAA5B,OAAA6B,EAAA,EAAA7B,CAAAtD,KAAAiF,IACjBC,EAAA5B,OAAA8B,EAAA,EAAA9B,CAAAtD,KAAAsD,OAAA+B,EAAA,EAAA/B,CAAA2B,GAAAK,KAAAtF,KAAMC,KACDsF,MAAQ,CACXhD,QAAStC,EAAMsC,QACfzB,KAAMb,EAAMa,KACZO,KAAMpB,EAAMoB,KACZuB,WAAY3C,EAAM2C,WAClBP,QAASpC,EAAMoC,QACfX,MAAOzB,EAAMyB,MACb8D,cAAevF,EAAMuF,cACrB1D,KAAM7B,EAAM6B,KACZ2D,WAAYxF,EAAMwF,WAClBC,QAASzF,EAAMyF,QACfC,WAAY1F,EAAM0F,YAEpBT,EAAKxB,aAAewB,EAAKxB,aAAahB,KAAlBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACpBA,EAAK1C,SAAW0C,EAAK1C,SAASE,KAAdY,OAAAsC,EAAA,EAAAtC,CAAA4B,IAChBA,EAAKW,cAAgBX,EAAKW,cAAcnD,KAAnBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACrBA,EAAK7E,gBAAkB6E,EAAK7E,gBAAgBqC,KAArBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACvBA,EAAKY,oBAAsBZ,EAAKY,oBAAoBpD,KAAzBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IAC3BA,EAAKa,kBAAoBb,EAAKa,kBAAkBrD,KAAvBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACzBA,EAAKc,iBAAmBd,EAAKc,iBAAiBtD,KAAtBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACxBA,EAAKe,YAAcf,EAAKe,YAAYvD,KAAjBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACnBA,EAAKgB,WAAahB,EAAKgB,WAAWxD,KAAhBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IAClBA,EAAKiB,iBAAmBjB,EAAKiB,iBAAiBzD,KAAtBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACxBA,EAAKkB,YAAclB,EAAKkB,YAAY1D,KAAjBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IACnBA,EAAKmB,mBAAqBnB,EAAKmB,mBAAmB3D,KAAxBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IAC1BA,EAAKoB,mBAAqBpB,EAAKoB,mBAAmB5D,KAAxBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IAC1BA,EAAKqB,aAAerB,EAAKqB,aAAa7D,KAAlBY,OAAAsC,EAAA,EAAAtC,CAAA4B,IA5BHA,8EA+BjBX,QAAQC,IAAI,wBACZxE,KAAKwG,SAAS,CACZjE,SAAS,IAEXzD,OAAOkD,SAASC,KAAO,sCAGvBwE,MAAM,4BACNzG,KAAKwG,SAAS,CACZjE,SAAS,4CAOX,IAFA,IAAMmE,EAAKpD,OAAAqD,EAAA,EAAArD,CAAO,8BACdnC,EAAU,GACLN,EAAI,EAAGA,EAAIb,KAAKuF,MAAMzE,KAAMD,IACnCM,EAAQN,GAAKyC,OAAAqD,EAAA,EAAArD,CAAIsD,MAAMC,SAAS7G,KAAKuF,MAAMzE,QAAQgG,IAAI,SAAAC,GAAC,OAAIL,EAAiD,EAA3CM,KAAKC,MAAMD,KAAKE,SAAWR,EAAM/E,WAAcwF,KAAK,IAExH,OAAOhG,0CAEOiG,GACd,IAAIlH,EAAOkH,EAAErC,OACT5E,EAAWD,EAAKmH,aAAa,QAC7BvF,EAAO9B,KAAKuF,MAAMzD,KAClB9B,KAAKuF,MAAME,WAEwC,IAAjD3D,EAAKwF,OAAO,SAAAP,GAAC,OAAIA,EAAE7G,OAASC,IAAUwB,OACxC3B,KAAK+F,kBAAkB7F,GAEvBF,KAAK8F,oBAAoBsB,GAI0B,IAAjDtF,EAAKwF,OAAO,SAAAP,GAAC,OAAIA,EAAE7G,OAASC,IAAUwB,OACxC3B,KAAK+F,kBAAkB7F,GACd4B,EAAKA,EAAKH,OAAS,GAAGzB,OAASC,GACxCH,KAAKgG,+DAISoB,GAClB,IAAIlH,EAAOkH,EAAErC,OACT5E,EAAWD,EAAKmH,aAAa,QAC7BvF,EAAO9B,KAAKuF,MAAMzD,KAEtBA,EAAOA,EAAKwF,OAAO,SAAAP,GAAC,OAAIA,EAAE7G,OAASC,IACnCH,KAAKwG,SAAS,CACZ1E,KAAMA,IAER5B,EAAKqH,UAAUC,OAAO,sDAENtH,GAChB,IAAIC,EAAWD,EAAKmH,aAAa,QAC7BvF,EAAO9B,KAAKuF,MAAMzD,KACtBA,EAAKA,EAAKH,QAAU,CAClBzB,KAAMC,EACNG,OAAQJ,EAAKuH,WAGfvH,EAAKqH,UAAUG,IAAI,YACnB1H,KAAKwG,SAAS,CACZ1E,KAAMA,+CAIR,GAAI9B,KAAKuF,MAAMzD,KAAKH,OAAS,EAAG,CAC9B,IAAIG,EAAO9B,KAAKuF,MAAMzD,KACtB6F,SAASC,iBAAiB,SAAW9F,EAAKA,EAAKH,OAAS,GAAGzB,KAAO,KAAK,GAAGqH,UAAUM,OAAO,YAC3F/F,EAAKH,SACL3B,KAAKwG,SAAS,CACZ1E,KAAMA,kDAKV9B,KAAKwG,SAAS,CACZ1E,KAAM,8CAGOgG,GACf,GAAI9H,KAAKuF,MAAMC,cAAgB,EAAG,CAChC,IAAIA,EAAgBxF,KAAKuF,MAAMC,cAC3B5C,EAAa5C,KAAKuF,MAAM3C,WACxBmF,EAAeJ,SAASK,uBAAuB,cAAc,GAC7DF,EAAetC,GACjBuC,EAAaR,UAAUG,IAAI,SAC3BjI,WAAW,WACTsI,EAAaR,UAAUM,OAAO,UAC7B,KACHjF,KACSkF,EAAetC,GAAiBxF,KAAKuF,MAAM3C,WAAa,IACjEmF,EAAaR,UAAUG,IAAI,UAC3BjI,WAAW,WACTsI,EAAaR,UAAUM,OAAO,WAC7B,KACHjF,KAEF5C,KAAKwG,SAAS,CACZ5D,WAAYA,yCAINqF,GACV,IAAIvG,EAAQ1B,KAAKuF,MAAM7D,MACvBA,GAAUuG,EAAYjI,KAAKuF,MAAM3C,WACjC5C,KAAKmG,iBAAiB8B,GACtBjI,KAAKwG,SAAS,CACZ9E,MAAOA,EACP8D,cAAeyC,iDAIjB,IAAIC,EAAgBP,SAASC,iBAAiB,2BAC9CM,EAAcC,QAAQ,SAAApB,GAAC,OAAIA,EAAEQ,UAAUM,OAAO,cAC9C7H,KAAKuG,aAAa2B,wCAEPA,GACX,GAAIlI,KAAKuF,MAAMG,QACb,GAAI1F,KAAKuF,MAAMI,WAEb3F,KAAKwG,SAAS,CACZnF,KAAMrB,KAAK6F,sBAER,CAEL,IAAMa,EAAKpD,OAAAqD,EAAA,EAAArD,CAAO,8BAClB4E,EAAcC,QAAQ,SAAApB,GAAC,OAAIA,EAAEU,UAAYf,EAAiD,EAA3CM,KAAKC,MAAMD,KAAKE,SAAWR,EAAM/E,iDAKpF,GAAI3B,KAAKuF,MAAMzD,KAAKH,OAAS,EAAG,CAC9B,IAAIG,EAAO9B,KAAKuF,MAAMzD,KAAKgF,IAAI,SAAAC,GAAC,OAAIA,EAAEzG,SAAQ6G,KAAK,IAAIiB,cACvD7J,EAAW8J,IAAI,SAAWvG,GACzBwG,KAAK,SAAUC,GAAU,IAAAC,EAAAxI,KACpBkI,EAAgBP,SAASC,iBAAiB,gCACNa,IAApCF,EAASG,KAAKC,YAAY7G,IAC5BoG,EAAcC,QAAQ,SAAApB,GAAC,OAAIA,EAAEQ,UAAUG,IAAI,mBAC3CjI,WAAW,WACTyI,EAAcC,QAAQ,SAAApB,GAAC,OAAIA,EAAEQ,UAAUM,OAAO,mBAC9CW,EAAKpC,YAAYtE,EAAKH,QACtB6G,EAAKnC,qBACLmC,EAAKlC,sBACJ,OAEHqB,SAASiB,eAAe,kBAAkBrB,UAAUG,IAAI,SACxDQ,EAAcC,QAAQ,SAAApB,GAAC,OAAIA,EAAEQ,UAAUG,IAAI,iBAC3CjI,WAAW,WACTkI,SAASiB,eAAe,kBAAkBrB,UAAUM,OAAO,SAC3DK,EAAcC,QAAQ,SAAApB,GAAC,OAAIA,EAAEQ,UAAUM,OAAO,kBAC7C,OAELnF,KAAK1C,OACN6I,MAAM,SAAUnJ,GACf6E,QAAQC,IAAI9E,KAEboJ,QAAQ,mDAKD1B,GACV,OAAQA,EAAE2B,SAER,KAAK,EACL,KAAK,GACH3B,EAAE4B,iBACFhJ,KAAKgG,mBACL,MAEF,KAAK,GACL,KAAK,GACHoB,EAAE4B,iBACFhJ,KAAKkG,0DAOTyB,SAASsB,iBAAiB,QAASjJ,KAAKiG,aACpCjG,KAAKC,MAAMsB,UACbvB,KAAKwG,SAAS,CACZnF,KAAMrB,KAAK6F,kBAGX/G,OAAOC,aAAaC,QAAQ,cAG9BF,OAAOkD,SAASC,KAAO,yCAIzB,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAIhBH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoJ,EAAD,CAAOxH,MAAO1B,KAAKuF,MAAM7D,SAE3B9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqJ,EAAD,CAAWrH,KAAM9B,KAAKuF,MAAMzD,KAAKgF,IAAI,SAAAC,GAAC,OAAIA,EAAEzG,aAGhDV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsJ,EAAD,CACE7H,SAAUvB,KAAKC,MAAMsB,SACrBT,KAAMd,KAAKuF,MAAMzE,KACjBO,KAAMrB,KAAKuF,MAAMlE,KACjBhB,gBAAiBL,KAAKK,kBACxBT,EAAAC,EAAAC,cAACuJ,EAAD,CACEzG,WAAY5C,KAAKuF,MAAM3C,WACvBP,QAASrC,KAAKuF,MAAMlD,QACpBE,QAASvC,KAAKuF,MAAMhD,QACpBC,SAAUxC,KAAKwC,SACfK,sBAAuB7C,KAAKgG,iBAC5BlD,wBAAyB9C,KAAKkG,gBAItCtG,EAAAC,EAAAC,cAACwJ,EAAD,CAAM/G,QAASvC,KAAKuF,MAAMhD,QAASmB,aAAc1D,KAAK0D,eACtD9D,EAAAC,EAAAC,cAACyJ,EAAD,MACA3J,EAAAC,EAAAC,cAAC0J,EAAD,cAnQUhJ,IAAMC,WAyQxBwE,EAAIvE,aAAe,CACjB6B,SAAS,EACThB,UAAU,EACVkE,YAAY,EACZC,SAAS,EACTC,YAAY,EACZ7E,KAAM,EACNO,KAAM,GACNuB,WAAY,EACZP,SAAS,EACTX,MAAO,EACP8D,cAAe,EACf1D,KAAM,IAGOmD,QCxRKwE,QACW,cAA7B3K,OAAOkD,SAAS0H,UAEe,UAA7B5K,OAAOkD,SAAS0H,UAEhB5K,OAAOkD,SAAS0H,SAASC,MACvB,2DCZNC,IAASC,OAAOjK,EAAAC,EAAAC,cAACgK,EAAD,MAASnC,SAASiB,eAAe,SD2H3C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.e8bd8853.chunk.js","sourcesContent":["let config = {\n  SPELLCHECK_API_KEY: '1c9ac1fe40mshe41e56796409b00p14b6a1jsn78518c7e15bc'\n}\n\nexport default config;","import axios from 'axios';\r\nimport config from './config';\r\n\r\nconst spellcheck = axios.create({\r\n  baseURL: 'https://montanaflynn-spellcheck.p.rapidapi.com/check/',\r\n  headers: {\r\n    'X-RapidAPI-Key': config.SPELLCHECK_API_KEY,\r\n  }\r\n});\r\n\r\nfunction removeLastWordRequest() {\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    window.localStorage.removeItem('last_word_request');\r\n  }\r\n}\r\nremoveLastWordRequest();\r\n\r\n// spellcheck request interceptor\r\nspellcheck.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  if (window.localStorage.getItem('last_word_request')) {\r\n    let lastReqUrl = window.localStorage.getItem('last_word_request');\r\n    if (lastReqUrl === arguments[0]['url']) {\r\n      return Promise.reject(false);\r\n    }\r\n  }\r\n\r\n  window.localStorage.setItem('last_word_request', arguments[0]['url']);\r\n\r\n  // remove last word request after 5 seconds\r\n  setTimeout(() => {\r\n    removeLastWordRequest();\r\n  }, 5000);\r\n\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default spellcheck;\r\n","import React from 'react';\r\n\r\nclass Cell extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={(this.props.className) ? \"cell \" + this.props.className : \"cell\"}\r\n        cell={this.props.cellName}\r\n        onClick={this.props.handleCellClick}\r\n      >\r\n        {this.props.letter.charAt(0)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCell.defaultProps = {\r\n  letter: 'T'\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Row extends React.Component {\r\n  render() {\r\n    let rowLetters = [];\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rowLetters[i] = <Cell\r\n        key={i.toString()}\r\n        cellName={'c' + ((this.props.rowNumber * this.props.size) + i)}\r\n        letter={(this.props.letters[i]) ? this.props.letters[i] : ' '}\r\n        handleCellClick={this.props.handleCellClick} />\r\n    }\r\n    return (\r\n      <div className={(this.props.className) ? \"row \" + this.props.className : \"row\"}>\r\n        {rowLetters}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRow.defaultProps = {\r\n  size: 5,\r\n  letters: 'TAPWD'\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport Row from './Row';\r\n\r\nclass Grid extends React.Component {\r\n  render() {\r\n    let rows = []\r\n    for (let i = 0; i < this.props.size; i++) {\r\n      rows[i] = <Row\r\n        key={i.toString()}\r\n        rowNumber={i}\r\n        size={this.props.size}\r\n        letters={this.props.rows[i]}\r\n        handleCellClick={this.props.handleCellClick} />\r\n    }\r\n    return (\r\n      <div className=\"grid\">\r\n        <div className=\"rows\">\r\n          {rows}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGrid.defaultProps = {\r\n  generate: true,\r\n  size: 5,\r\n  rows: [\r\n    'TAP',\r\n    'WORD',\r\n    'GAME',\r\n    'BY',\r\n    'TUNJI',\r\n  ]\r\n}\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Score extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    let score = this.props.score.toString();\r\n    for (let i = 0; i < score.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(score[i]) ? score[i] : ' '} />\r\n    }\r\n    return (\r\n      <div className=\"selection\">\r\n        <span className=\"selection-info\">SCORE</span>\r\n        <div className=\"selection-wrapper\">\r\n          <span id=\"score\">{output}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScore.defaultProps = {\r\n  score: 0\r\n}\r\n\r\nexport default Score\r\n\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nclass Selection extends React.Component {\r\n  render() {\r\n    let output = [];\r\n    for (let i = 0; i < this.props.word.length; i++) {\r\n      output[i] = <Cell key={i.toString()} letter={(this.props.word[i]) ? this.props.word[i] : ' '} />\r\n    }\r\n    return (\r\n      <div id=\"selection-word\" className=\"selection\">\r\n        <span className=\"selection-info\">WORD INPUT</span>\r\n        <div className=\"selection-wrapper\">\r\n          <span id=\"word\">{output}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelection.defaultProps = {\r\n  word: ''\r\n}\r\n\r\nexport default Selection\r\n\r\n","import React from 'react';\r\n\r\nclass Sidebar extends React.Component {\r\n  openPlayModal() {\r\n    window.location.hash = 'play';\r\n  }\r\n  openSettingsModal() {\r\n    window.location.hash = 'settings';\r\n  }\r\n  openHelpModal() {\r\n    window.location.hash = 'help';\r\n  }\r\n  render() {\r\n    let timer;\r\n    if (this.props.endless) {\r\n      timer = <div className=\"button alt\">&infin;</div>;\r\n    } else {\r\n      timer = <div className=\"button alt\">{this.props.minutes}<span className=\"highlight\">m</span></div>;\r\n    }\r\n    let playOrQuit;\r\n    let playOrQuitText;\r\n    if (this.props.newGame) {\r\n      playOrQuitText = \"Quit\"\r\n      playOrQuit = <div className=\"button alt\" onClick={this.props.quitGame}>&times;</div>;\r\n    } else {\r\n      playOrQuitText = \"New Game\"\r\n      playOrQuit = <div className=\"button alt\" onClick={this.openPlayModal.bind(this)}>&#8227;</div>;\r\n    }\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-inner\">\r\n          <div className=\"cell tooltip\" data-tooltip=\"Score Multiplier\">\r\n            <div className=\"button alt multiplier\"><span className=\"highlight\">x</span><span id=\"multiplier\">{this.props.multiplier}</span></div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Timer\">\r\n            {timer}\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Grid Size\">\r\n            <div className=\"button alt\">&#8862;<sub className=\"highlight\">{this.props.size}</sub></div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Undo Word\">\r\n            <button id=\"undo\" className=\"button\" onClick={this.props.handleUndoButtonClick}>&#8630;</button>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Submit Word\">\r\n            <button id=\"submit\" className=\"button\" onClick={this.props.handleSubmitButtonClick}>&#8629;</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"sidebar-inner\">\r\n          <div className=\"cell tooltip\" data-tooltip=\"Settings\">\r\n            <div className=\"button alt\" onClick={this.openSettingsModal.bind(this)}>&#10033;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip=\"Help\">\r\n            <div className=\"button alt\" onClick={this.openHelpModal.bind(this)}>&#63;</div>\r\n          </div>\r\n          <div className=\"cell tooltip\" data-tooltip={playOrQuitText}>\r\n            {playOrQuit}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  size: 5,\r\n  minutes: 5,\r\n  multiplier: 1,\r\n  endless: false,\r\n  newGame: false\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nclass Play extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"play\">\r\n        <span className=\"modal-overlay\" style={{ background: 'rgb(25, 28, 34)' }}></span>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            {/* <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a> */}\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>NEW GAME</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>{[3,4,5,6,7].toString().replace(/,/g, ' ')}</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>{[0,1,2,3,4,5,6,7,8,9,10].toString().replace(/,/g, ' ')}</div>\r\n                <div><em><small>select 0 for endless mode</small></em></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.props.startNewGame}>Start New Game</button></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 500\r\n}\r\n\r\nPlay.defaultProps = {\r\n  newGame: false\r\n}\r\n\r\nexport default Play;\r\n","import React from 'react';\r\n\r\nclass Settings extends React.Component {\r\n  saveSettings() {\r\n    console.log('saving settings ...')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" id=\"settings\">\r\n        <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-header\">\r\n            <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n            <div className=\"modal-title\">\r\n              <strong style={spacedTypo}>GAME SETTINGS</strong>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"content\">\r\n              <div>\r\n                <h5 style={spacedTypo}>GRID SIZE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>{[3,4,5,6,7].toString().replace(/,/g, ' ')}</div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>TIMER</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>{[0,1,2,3,4,5,6,7,8,9,10].toString().replace(/,/g, ' ')}</div>\r\n                <div><em><small>select 0 for endless mode</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <h5 style={spacedTypo}>CELL SHUFFLE TYPE</h5>\r\n                <div>...</div>\r\n                <div>&nbsp;</div>\r\n                <div>SHUFFLE SELECTED CELLS | SHUFFLE ALL CELLS</div>\r\n                <div><em><small>cell reshuffle after submit</small></em></div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div style={{ ...spacedTypo, ...textCenter }}><button style={saveButton} onClick={this.saveSettings.bind(this)}>Save Settings</button></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst saveButton = {\r\n  background: 'transparent',\r\n  color: '#FFF',\r\n  textDecoration: 'none',\r\n  border: '1px solid #28F',\r\n  padding: '6px 8px 6px 12px',\r\n  cursor: 'pointer',\r\n  fontWeight: 500\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"modal\" id=\"help\">\r\n      <a href=\"#close\" className=\"modal-overlay\" aria-label=\"Close\"> </a>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-header\">\r\n          <a href=\"#close\" className=\"btn btn-clear\" aria-label=\"Close\"> </a>\r\n          <div className=\"modal-title\">\r\n            <strong style={spacedTypo}>HELP &amp; ABOUT</strong>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"content\">\r\n            <div>\r\n              <h5 style={spacedTypo}>HOW TO PLAY</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>&bull; Select some letters to make a word</div>\r\n              <div>&bull; Click Submit Button to evaluate you Score</div>\r\n              <div>&bull; QUITING IS NOT AN OPTION!</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>KEYBOARD SHORTCUTS</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div><kbd style={kbd}>BKSP</kbd> &nbsp;&nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp;&nbsp; <kbd style={kbd}>DEL</kbd> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <small>UNDO</small></div>\r\n              <div>&nbsp;</div>\r\n              <div><kbd style={kbd}>ENTER</kbd> &nbsp;&nbsp; <small>OR</small> &nbsp;&nbsp; <kbd style={kbd}>SPACE</kbd> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <small>SUBMIT</small></div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <h5 style={spacedTypo}>ABOUT</h5>\r\n              <div>...</div>\r\n              <div>&nbsp;</div>\r\n              <div>Tapword - <em>words are limitless</em> : is a word game that tests your knowledge of English words. Tapword provides a means to combine as many letters as you can to make the longest word you possibly can.</div>\r\n              <div>&nbsp;</div>\r\n              <div style={textCenter}><em>Play and Boast of your Vocabulary among friends</em></div>\r\n              <div>&nbsp;</div>\r\n              <div style={{ ...spacedTypo, ...textCenter }}>+++ THANK YOU +++</div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ ...spacedTypo, ...textCenter }}>*** <a style={customLink} href=\"https://github.com/tunjioye/tapword\" target=\"_blank\" rel=\"noopener noreferrer\">Git Repo</a> ***</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spacedTypo = {\r\n  letterSpacing: '0.1rem',\r\n  wordSpacing: '0.2rem',\r\n  textTransform: 'uppercase',\r\n  margin: 0,\r\n  fontWeight: 500\r\n}\r\n\r\nconst kbd = {\r\n  border: '1px solid #28F',\r\n  padding: '3px 4px 3px 6px'\r\n}\r\n\r\nconst textCenter = {\r\n  textAlign: 'center'\r\n}\r\n\r\nconst customLink = {\r\n  color: '#FFF',\r\n  textDecoration: 'none'\r\n}\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport spellcheck from './spellcheck';\r\n// import Topbar from './components/Topbar';\r\nimport Grid from './components/Grid';\r\nimport Score from './components/Score';\r\nimport Selection from './components/Selection';\r\nimport Sidebar from './components/Sidebar';\r\nimport Play from './components/Play';\r\nimport Settings from './components/Settings';\r\nimport Help from './components/Help';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newGame: props.newGame,\r\n      size: props.size,\r\n      rows: props.rows,\r\n      multiplier: props.multiplier,\r\n      endless: props.endless,\r\n      score: props.score,\r\n      lastWordScore: props.lastWordScore,\r\n      word: props.word,\r\n      cellToggle: props.cellToggle,\r\n      shuffle: props.shuffle,\r\n      shuffleAll: props.shuffleAll\r\n    }\r\n    this.startNewGame = this.startNewGame.bind(this)\r\n    this.quitGame = this.quitGame.bind(this)\r\n    this.randomLetters = this.randomLetters.bind(this)\r\n    this.handleCellClick = this.handleCellClick.bind(this)\r\n    this.toggleSelectionWord = this.toggleSelectionWord.bind(this)\r\n    this.pushSelectionWord = this.pushSelectionWord.bind(this)\r\n    this.popSelectionWord = this.popSelectionWord.bind(this)\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n    this.submitWord = this.submitWord.bind(this)\r\n    this.updateMultiplier = this.updateMultiplier.bind(this)\r\n    this.updateScore = this.updateScore.bind(this)\r\n    this.clearSelectionWord = this.clearSelectionWord.bind(this)\r\n    this.resetSelectedCells = this.resetSelectedCells.bind(this)\r\n    this.shuffleCells = this.shuffleCells.bind(this)\r\n  }\r\n  startNewGame() {\r\n    console.log('new game started ...')\r\n    this.setState({\r\n      newGame: true\r\n    })\r\n    window.location.hash = ''\r\n  }\r\n  quitGame() {\r\n    alert('QUITING IS NOT A OPTION!')\r\n    this.setState({\r\n      newGame: false\r\n    })\r\n    // window.location.hash = 'play';\r\n  }\r\n  randomLetters() {\r\n    const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n    let letters = []\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      letters[i] = [...Array(parseInt(this.state.size))].map(x => chars[Math.floor(Math.random() * chars.length) | 0]).join('')\r\n    }\r\n    return letters\r\n  }\r\n  handleCellClick(e) {\r\n    let cell = e.target\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    if (this.state.cellToggle) {\r\n      // cell toggle\r\n      if (word.filter(x => x.cell === cellName).length === 0) {\r\n        this.pushSelectionWord(cell)\r\n      } else {\r\n        this.toggleSelectionWord(e)\r\n      }\r\n    } else {\r\n      // word pop\r\n      if (word.filter(x => x.cell === cellName).length === 0) {\r\n        this.pushSelectionWord(cell)\r\n      } else if (word[word.length - 1].cell === cellName) {\r\n        this.popSelectionWord()\r\n      }\r\n    }\r\n  }\r\n  toggleSelectionWord(e) {\r\n    let cell = e.target\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n\r\n    word = word.filter(x => x.cell !== cellName)\r\n    this.setState({\r\n      word: word\r\n    })\r\n    cell.classList.toggle('selected')\r\n  }\r\n  pushSelectionWord(cell) {\r\n    let cellName = cell.getAttribute('cell')\r\n    let word = this.state.word\r\n    word[word.length] = {\r\n      cell: cellName,\r\n      letter: cell.innerHTML\r\n    }\r\n\r\n    cell.classList.add('selected')\r\n    this.setState({\r\n      word: word\r\n    })\r\n  }\r\n  popSelectionWord() {\r\n    if (this.state.word.length > 0) {\r\n      let word = this.state.word\r\n      document.querySelectorAll('[cell=' + word[word.length - 1].cell + ']')[0].classList.remove('selected')\r\n      word.length--\r\n      this.setState({\r\n        word: word\r\n      })\r\n    }\r\n  }\r\n  clearSelectionWord() {\r\n    this.setState({\r\n      word: []\r\n    })\r\n  }\r\n  updateMultiplier(newWordScore) {\r\n    if (this.state.lastWordScore > 1) {\r\n      let lastWordScore = this.state.lastWordScore\r\n      let multiplier = this.state.multiplier\r\n      let multiplierEl = document.getElementsByClassName('multiplier')[0]\r\n      if (newWordScore > lastWordScore) {\r\n        multiplierEl.classList.add('plus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('plus1')\r\n        }, 500)\r\n        multiplier++\r\n      } else if (newWordScore < lastWordScore && this.state.multiplier > 1) {\r\n        multiplierEl.classList.add('minus1')\r\n        setTimeout(() => {\r\n          multiplierEl.classList.remove('minus1')\r\n        }, 500)\r\n        multiplier--\r\n      }\r\n      this.setState({\r\n        multiplier: multiplier\r\n      })\r\n    }\r\n  }\r\n  updateScore(wordScore) {\r\n    let score = this.state.score\r\n    score += (wordScore * this.state.multiplier)\r\n    this.updateMultiplier(wordScore)\r\n    this.setState({\r\n      score: score,\r\n      lastWordScore: wordScore\r\n    })\r\n  }\r\n  resetSelectedCells() {\r\n    let selectedCells = document.querySelectorAll('[class=\"cell selected\"]')\r\n    selectedCells.forEach(x => x.classList.remove('selected'))\r\n    this.shuffleCells(selectedCells)\r\n  }\r\n  shuffleCells(selectedCells) {\r\n    if (this.state.shuffle) {\r\n      if (this.state.shuffleAll) {\r\n        // shuffle all cells\r\n        this.setState({\r\n          rows: this.randomLetters()\r\n        })\r\n      } else {\r\n        // shuffle only selected cells\r\n        const chars = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ']\r\n        selectedCells.forEach(x => x.innerHTML = chars[Math.floor(Math.random() * chars.length) | 0])\r\n      }\r\n    }\r\n  }\r\n  submitWord() {\r\n    if (this.state.word.length > 0) {\r\n      let word = this.state.word.map(x => x.letter).join('').toLowerCase()\r\n      spellcheck.get('?text=' + word)\r\n      .then(function (response) {\r\n        let selectedCells = document.querySelectorAll('[class=\"cell selected\"]')\r\n        if (response.data.corrections[word] === undefined) {\r\n          selectedCells.forEach(x => x.classList.add('flash-success'))\r\n          setTimeout(() => {\r\n            selectedCells.forEach(x => x.classList.remove('flash-success'))\r\n            this.updateScore(word.length)\r\n            this.clearSelectionWord()\r\n            this.resetSelectedCells()\r\n          }, 500)\r\n        } else {\r\n          document.getElementById('selection-word').classList.add('shake')\r\n          selectedCells.forEach(x => x.classList.add('flash-error'))\r\n          setTimeout(() => {\r\n            document.getElementById('selection-word').classList.remove('shake')\r\n            selectedCells.forEach(x => x.classList.remove('flash-error'))\r\n          }, 500)\r\n        }\r\n      }.bind(this))\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n    }\r\n  }\r\n  handleKeyUp(e) {\r\n    switch (e.keyCode) {\r\n      // backspace | del key to undo\r\n      case 8:\r\n      case 46:\r\n        e.preventDefault()\r\n        this.popSelectionWord()\r\n        break;\r\n      // return or enter | spacebar key to submit\r\n      case 13:\r\n      case 32:\r\n        e.preventDefault()\r\n        this.submitWord()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp)\r\n    if (this.props.generate) {\r\n      this.setState({\r\n        rows: this.randomLetters()\r\n      })\r\n    }\r\n    if (window.localStorage.getItem('new_game')) {\r\n      // game on\r\n    } else {\r\n      window.location.hash = 'play'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <div style={{ display: 'block' }}>\r\n            <Topbar />\r\n          </div> */}\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Score score={this.state.score} />\r\n              </div>\r\n              <div>\r\n                <Selection word={this.state.word.map(x => x.letter)} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Grid\r\n                generate={this.props.generate}\r\n                size={this.state.size}\r\n                rows={this.state.rows}\r\n                handleCellClick={this.handleCellClick} />\r\n              <Sidebar\r\n                multiplier={this.state.multiplier}\r\n                endless={this.state.endless}\r\n                newGame={this.state.newGame}\r\n                quitGame={this.quitGame}\r\n                handleUndoButtonClick={this.popSelectionWord}\r\n                handleSubmitButtonClick={this.submitWord} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Play newGame={this.state.newGame} startNewGame={this.startNewGame} />\r\n        <Settings />\r\n        <Help />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  newGame: false,\r\n  generate: true,\r\n  cellToggle: true,\r\n  shuffle: true,\r\n  shuffleAll: true,\r\n  size: 5,\r\n  rows: [],\r\n  multiplier: 1,\r\n  endless: true,\r\n  score: 0,\r\n  lastWordScore: 0,\r\n  word: [] // { cell: '', letter: ''} cell is short for cellName\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}